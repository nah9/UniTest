<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="" productName="CODESYS" productVersion="CODESYS V3.5 SP16" creationDateTime="2021-05-14T17:14:38.1487532" />
  <contentHeader name="Iec UniTest" version="0.1" modificationDateTime="2021-05-14T17:14:36.0430563" organization="TK Automation" author="Toni Kucic">
    <Comment>Library written in pure IEC 61131-3 Structured text that can be used for unit testing of any PLC POU. This library has arisen from the need of having a manufacturer and IDE independent unit test framework that is easily portable to other platform as the community requires. There are good unit frameworks existing for TwinCat, Codesys, B&amp;R and many more platforms but none of them quite solve the extreme cases.</Comment>
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation>
          <property name="Author" type="string">Toni Kucic</property>
          <property name="Company" type="string">TK Automation</property>
          <property name="CompiledLibraryCompatibilityVersion" type="string">CODESYS V3.5 SP16</property>
          <property name="Description" type="string">Library written in pure IEC 61131-3 Structured text that can be used for unit testing of any PLC POU. This library has arisen from the need of having a manufacturer and IDE independent unit test framework that is easily portable to other platform as the community requires. There are good unit frameworks existing for TwinCat, Codesys, B&amp;R and many more platforms but none of them quite solve the extreme cases.</property>
          <property name="Project" type="string">iecUniTest</property>
          <property name="Title" type="string">Iec UniTest</property>
          <property name="Version" type="version">0.1</property>
        </ProjectInformation>
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="utTestCase">
        <baseType>
          <struct>
            <variable name="id">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Identifier of the test</xhtml>
              </documentation>
            </variable>
            <variable name="desc">
              <type>
                <array>
                  <dimension lower="0" upper="4" />
                  <baseType>
                    <string length="255" />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Description of the test case</xhtml>
              </documentation>
            </variable>
            <variable name="state">
              <type>
                <derived name="utTestCaseStates" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">State of the test</xhtml>
              </documentation>
            </variable>
            <variable name="msg">
              <type>
                <string length="255" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Result of the test</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>cce5d9e4-571f-4468-b93b-ab9e7aa5a070</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="utTestCaseStates">
        <baseType>
          <enum>
            <values>
              <value name="ut_SETUP" value="0" />
              <value name="ut_RUNNING" value="1" />
              <value name="ut_PASSED" value="2" />
              <value name="ut_FAILED" value="3" />
            </values>
          </enum>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/enumvaluedocumentation" handleUnknown="implementation">
            <EnumValueDocumentation>
              <EnumValue>
                <Name>ut_SETUP</Name>
                <Documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">Test case in setup mode, ready for execution</xhtml>
                </Documentation>
              </EnumValue>
              <EnumValue>
                <Name>ut_RUNNING</Name>
                <Documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">Test case running</xhtml>
                </Documentation>
              </EnumValue>
              <EnumValue>
                <Name>ut_PASSED</Name>
                <Documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">Test case passed</xhtml>
                </Documentation>
              </EnumValue>
              <EnumValue>
                <Name>ut_FAILED</Name>
                <Documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">Test case failed</xhtml>
                </Documentation>
              </EnumValue>
            </EnumValueDocumentation>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
              <Attribute Name="strict" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>59d7932e-fb33-435e-8f3c-c4d2d0c00283</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="utTestCaseSummary">
        <baseType>
          <struct>
            <variable name="Id">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Id of the test object. Must be unique number</xhtml>
              </documentation>
            </variable>
            <variable name="Name">
              <type>
                <string length="250" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Name of the test object</xhtml>
              </documentation>
            </variable>
            <variable name="TotalTests">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Total number of tests existing</xhtml>
              </documentation>
            </variable>
            <variable name="TestsPassed">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Number of tests passed</xhtml>
              </documentation>
            </variable>
            <variable name="TestsFailed">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Number of tests failed</xhtml>
              </documentation>
            </variable>
            <variable name="PassRate">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pass rate % of the tests</xhtml>
              </documentation>
            </variable>
            <variable name="TestsRunning">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">One or more tests are running</xhtml>
              </documentation>
            </variable>
            <variable name="Error">
              <type>
                <derived name="utErrors" />
              </type>
              <initialValue>
                <simpleValue value="utErrors.ut_NO_ERROR" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Error code if error occured</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0106c9a1-852c-4044-944f-79d5a828c28d</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="utErrors">
        <baseType>
          <enum>
            <values>
              <value name="ut_NO_ERROR" value="0" />
              <value name="ut_NO_TEST_CASES_DEFINED" value="100" />
            </values>
          </enum>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/enumvaluedocumentation" handleUnknown="implementation">
            <EnumValueDocumentation>
              <EnumValue>
                <Name>ut_NO_ERROR</Name>
                <Documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">No errors detected</xhtml>
                </Documentation>
              </EnumValue>
              <EnumValue>
                <Name>ut_NO_TEST_CASES_DEFINED</Name>
                <Documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">No test cases defined for this POU</xhtml>
                </Documentation>
              </EnumValue>
            </EnumValueDocumentation>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
              <Attribute Name="strict" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>52a2890d-2364-42e1-9d9f-b412a3be1a96</ObjectId>
          </data>
        </addData>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="assertFalse" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="condition">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertFalse := NOT condition;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>64937e06-d0e9-44eb-9327-80830493b692</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_BOOL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_BOOL := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f7c69719-b80e-41a9-bf9e-83ab8c287f3f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_BYTE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_BYTE := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>39440229-29c8-4209-823d-fec273b742c1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_WORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_WORD := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>06cc94b6-75a0-4ec2-891b-97b53806960d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_DWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_DWORD := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>155a59ae-7b84-4952-b77a-c6a834427a8d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_LWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_LWORD := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>138c2567-98f8-4f1a-bcc5-5f5e31dea203</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_SINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <SINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <SINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_SINT := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>57f6c1c6-4a8d-47df-9211-13fb15ea1030</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_USINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_USINT := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>95f9aba1-10c0-4fc3-b830-c57e97bb1463</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_INT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_INT := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>236f0cd1-0ce2-49d5-aeae-1ea242d097bb</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_UINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_UINT := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4391658e-7269-4f19-84d7-260096f4e1a8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_DINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_DINT := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>493627b2-db3a-4fa7-8718-688888b82512</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_UDINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_UDINT := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7298633a-b174-4d68-8ff3-09bff0b72471</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_LINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_LINT := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3b4d4117-8db7-4b85-abe0-a69e118fae6b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_ULINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <ULINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <ULINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_ULINT := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>df42dc00-71c4-4308-9038-ebb75292c300</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_REAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_REAL := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f4af70c1-bc85-4b20-b8d2-2be9e4bda714</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_LREAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LREAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LREAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_LREAL := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d80a2b4b-b62c-4cb7-9513-3d349d68076e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_STRING" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_STRING := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a1b4c36a-8624-4365-8f0b-568c4b446d2a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_WSTRING" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <wstring />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <wstring />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_WSTRING := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>689e183a-0d2d-4cf1-87eb-f3a080c41d06</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_TIME := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d1237634-747b-43a9-ad46-ed80f15a19a9</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_LTIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_LTIME := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2539fc38-2b13-466b-83f9-d21559330ca7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_DATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DATE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DATE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_DATE := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>559d2484-6961-4833-a2a0-ffd46a2aec67</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_LDATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LDATE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LDATE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_LDATE := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>65274bb7-6a5a-45b0-91bb-2563f9945276</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_DATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_DATE_AND_TIME := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>cb61cdea-ab88-4706-85ae-63eb8d0f16cc</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_LDATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LDATE_AND_TIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LDATE_AND_TIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_LDATE_AND_TIME := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4ca69933-34d8-40ed-b337-cb6e031c3ae7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_TIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <TOD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <TOD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_TIME_OF_DAY := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>819a0586-561e-4023-83f0-107197c15a38</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertEqual_LTIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LTIME_OF_DAY" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LTIME_OF_DAY" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertEqual_LTIME_OF_DAY := act = xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e13f99bd-1a91-4a83-9076-584de3a362f6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_BOOL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_BOOL := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a041f9f6-5a9c-4984-9efc-4476a90e2234</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_BYTE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_BYTE := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6eb78e45-2923-4397-9c70-3b8a0820d088</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_WORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_WORD := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5ddf91f5-ce0d-4544-84c2-633c5512cd41</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_DWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_DWORD := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ffc9b72e-c6e6-466e-b58f-bdfa412cda06</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_LWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_LWORD := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ccaf4782-15f6-416a-8417-1d7cddcab040</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_SINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <SINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <SINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_SINT := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>20ca4d38-490b-412b-9adb-e2b99747f773</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_USINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_USINT := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>86c78596-6103-42a7-9b0f-7a3f28b4709b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_INT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_INT := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b52ab48c-5927-4adb-8a01-896956b5be59</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_UINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_UINT := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9b08ae79-f6fe-4c68-9467-ee90eff5ea57</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_DINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_DINT := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>79ee9f54-dede-428b-b9ec-063f9e6f9786</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_UDINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_UDINT := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>74b1e92f-c097-404d-a52b-305700b6430c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_LINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_LINT := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3e6a848a-77b9-4727-b015-6d0bcd8c5ec0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_ULINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <ULINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <ULINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_ULINT := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>465df4f0-4b5d-4cd9-a546-5a247e2dd420</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_REAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_REAL := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f520e45a-6eef-4c04-acef-8af46ab3eeb6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_LREAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LREAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LREAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_LREAL := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f59748b0-50b8-4801-b30b-0585f77b9914</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_STRING" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_STRING := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5e5c311c-a48d-4d59-b836-769c9e7d9661</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_WSTRING" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <wstring />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <wstring />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_WSTRING := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>744784c9-7e0c-4afe-b03d-9a618528dcaf</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_TIME := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e5986010-94b1-42cf-881c-7abff35c7fbd</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_LTIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_LTIME := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9ffb29b1-4a8b-488d-b839-24f538e7728b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_DATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DATE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DATE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_DATE := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5179e2e2-db6a-4068-afff-e92d1411585f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_LDATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LDATE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LDATE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_LDATE := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>32bd7a21-d925-4026-84bc-b100293dce49</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_DATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_DATE_AND_TIME := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3f33448c-3184-41ef-bf3c-a8f3b325eb63</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_LDATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LDATE_AND_TIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LDATE_AND_TIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_LDATE_AND_TIME := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>88ce8c91-cb2f-4398-83ea-d2dc7ec833c1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_TIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <TOD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <TOD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_TIME_OF_DAY := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1d22cf57-e3dc-47ba-a6b6-a45900a049fa</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertNotEqual_LTIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LTIME_OF_DAY" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LTIME_OF_DAY" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertNotEqual_LTIME_OF_DAY := act &lt;&gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1bacb25a-7ea8-4a19-b4a0-c34c531cabb4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_BYTE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_BYTE := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e092e8ff-317d-4813-8ac8-99d763abec9d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_WORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_WORD := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>619cb262-00e0-4626-a559-c4cd286df1e0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_DWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_DWORD := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>463b1b2b-4d65-4c35-a1ce-a5d8ba6a247d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_LWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_LWORD := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a8032dff-adea-4c8c-8ff7-6118c4e02bf5</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_SINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <SINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <SINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_SINT := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>20945b00-c8ae-4328-8140-f2954c0400b8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_USINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_USINT := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>71ded51d-1d4d-4dd4-89f5-14678311ee2b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_INT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_INT := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ab755ad7-523d-4393-8787-e6ae3e930ce3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_UINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_UINT := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>cd9f9a4b-d437-4dd6-b13a-85e41d8c7eb7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_DINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_DINT := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3720aff6-6fda-45bb-a81a-19a8a1e09253</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_UDINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_UDINT := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c19ebc32-86f5-4406-b497-686e0fba9986</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_LINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_LINT := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>101bde75-f523-4b63-8fe1-d6b1eeaa8f1f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_ULINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <ULINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <ULINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_ULINT := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e0ce3a96-1bd1-4f0f-934d-06f6b42a0460</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_REAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_REAL := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>76ec0990-24a8-409b-9f3d-f03f3f735536</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_LREAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LREAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LREAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_LREAL := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>661d2e35-9ea2-4b88-9ecd-66744b3d1a93</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_TIME := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4037283e-1807-47cd-9200-05aa520cfe0f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_LTIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_LTIME := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6b3a32ab-8eb3-42ae-b2b2-23276c6014ad</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_DATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DATE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DATE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_DATE := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4b423728-04bc-49a5-a6cf-7a4e2b608eff</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_LDATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LDATE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LDATE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_LDATE := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5c71299c-fc46-4dbd-a58d-0ee94430b222</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_DATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_DATE_AND_TIME := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2209361f-9ac8-4e29-890e-dd6dd9da019b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_LDATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LDATE_AND_TIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LDATE_AND_TIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_LDATE_AND_TIME := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e3dc6e0d-0fff-4624-a11d-538fd1645c18</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_TIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <TOD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <TOD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_TIME_OF_DAY := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>28773f4d-17f4-4d54-a9a3-7dbc5f1189e9</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreater_LTIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LTIME_OF_DAY" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LTIME_OF_DAY" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreater_LTIME_OF_DAY := act &gt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e149a1ed-060b-4fc7-a208-c7fc95359479</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_BYTE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_BYTE := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8ffd51bb-c86e-4ec7-a059-30bc18c0e10b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_WORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_WORD := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1adee882-d906-439b-90e2-87924378eb65</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_DWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_DWORD := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>38932ecd-11d7-4364-84b6-e31944dd9b14</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_LWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_LWORD := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1bf84169-8ec2-420c-999a-e37f783f1bdd</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_SINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <SINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <SINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_SINT := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>830ec956-1e46-4921-9b16-ec7ff7f3dcba</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_USINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_USINT := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b6423f37-50de-4d41-a5be-7b4eb0c26851</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_INT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_INT := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9b966462-5009-455b-80d9-37677f3fab23</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_UINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_UINT := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>61acc4ea-6b13-46a5-99a8-c205d5170dbf</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_DINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_DINT := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d985cd45-94df-499f-9e93-cd4f7b88777d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_UDINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_UDINT := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>68b6c9ae-8ee1-4f36-90bc-20e93b25e8cf</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_LINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_LINT := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>26b2ef4c-817d-42a6-956d-da3d2d4140e7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_ULINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <ULINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <ULINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_ULINT := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>42d3daac-4b55-426c-bca3-70018e39e326</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_REAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_REAL := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ece5bb8b-160b-4079-a6c6-74aabd91e636</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_LREAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LREAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LREAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_LREAL := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4a11e78c-436a-43fd-b71e-e9aec8e04c05</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_TIME := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9b6802ce-c226-4fb6-b56a-fbbb686dedd0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_LTIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_LTIME := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>218b1ffc-fde4-44c8-9288-70cf189e961a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_DATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DATE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DATE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_DATE := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b30103aa-cc48-4eab-9ba8-a9ec2b74aa77</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_LDATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LDATE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LDATE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_LDATE := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2001a32f-00d6-4dcf-b9f8-ee8a14dec23e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_DATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_DATE_AND_TIME := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5141b67f-48a1-4272-b7bb-7ea40162e2d8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_LDATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LDATE_AND_TIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LDATE_AND_TIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_LDATE_AND_TIME := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>99e29872-154b-4de6-9326-51a54c7fce07</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_TIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <TOD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <TOD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_TIME_OF_DAY := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ceedf226-be1e-4eb8-b27f-82e6bd20277a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertGreaterEqual_LTIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LTIME_OF_DAY" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LTIME_OF_DAY" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertGreaterEqual_LTIME_OF_DAY := act &gt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>673a5434-c072-45e1-8273-ee0e8d39079d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_BYTE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_BYTE := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e0d01b03-e1df-43e6-a80d-3d469d797323</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_WORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_WORD := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d15f75cb-e72f-41c2-ba7d-5f6b17271300</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_DWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_DWORD := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>100450e5-e503-43dd-a355-a289401a671f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_LWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_LWORD := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>25effc9a-a80d-4d13-b278-139a2e6c4833</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_SINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <SINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <SINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_SINT := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e9509292-214f-448a-9cb4-049f2daec5c4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_USINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_USINT := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0a3b05f5-62dd-41ca-b30d-7713c5a4d748</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_INT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_INT := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>569e9465-98e4-4f45-8fe4-6481fb9b991d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_UINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_UINT := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9ae3ef59-64b6-4b82-868d-6c2a244bafa0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_DINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_DINT := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d9f3cd1b-6619-488d-8293-f869f989e108</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_UDINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_UDINT := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0f8dae77-741d-41da-b92d-d558408a229b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_LINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_LINT := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>defc4cb2-61d6-4416-9851-add17d36caff</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_ULINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <ULINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <ULINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_ULINT := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e8513174-d419-44b9-bc17-5efbe522bf42</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_REAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_REAL := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>87d76822-b31e-4648-95cd-603c36a12f5a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_LREAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LREAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LREAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_LREAL := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5ae7106b-6229-427f-86bb-410202ef120e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_TIME := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3b0c9ccb-651a-4307-8aec-94a45bebf826</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_LTIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_LTIME := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>763e9f16-59e5-434e-a9e1-5f7dfd65c76a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_DATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DATE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DATE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_DATE := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5f79767c-6430-4842-a7f5-d58f350a5bdd</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_LDATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LDATE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LDATE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_LDATE := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>dc725a4b-dd59-4659-9c45-c6a518784f81</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_DATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_DATE_AND_TIME := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9927b011-773b-4429-a96a-75add4ffdb0f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_LDATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LDATE_AND_TIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LDATE_AND_TIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_LDATE_AND_TIME := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>21874a65-fa54-4cab-a105-0f40cac2dd52</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_TIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <TOD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <TOD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_TIME_OF_DAY := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e42794f7-cd81-4435-85b0-64f93d29b802</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLess_LTIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LTIME_OF_DAY" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LTIME_OF_DAY" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLess_LTIME_OF_DAY := act &lt; xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a5261598-dc9b-4245-a971-0a9b42a5e267</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_BYTE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_BYTE := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2ebb0f00-a039-4a9f-bc75-e18bd39e3db1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_WORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_WORD := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9582f9f1-5046-4680-906d-c5c79a0a409e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_DWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_DWORD := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f8704856-8b8e-49a4-9a11-7c4147ffc0ce</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_LWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_LWORD := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>110671a0-bbef-41f2-9399-e225e602a51c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_SINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <SINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <SINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_SINT := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>153be81c-8a0e-4058-809d-8969ca1a7847</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_USINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_USINT := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>043d6232-33d6-498d-ac5a-b2d8ceee7ab2</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_INT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_INT := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8b2058c7-420c-46fe-9ec5-55de9c7f4022</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_UINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_UINT := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1c1bea76-ad9a-4fae-8380-d9ddf2cec918</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_DINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_DINT := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>caa35aab-73c6-464d-935c-4b8c179a13df</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_UDINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_UDINT := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>97e35aa0-2bd5-487d-ac93-40afc83596a6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_LINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_LINT := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>50925e90-e0ba-4ca4-af53-f56df31a1280</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_ULINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <ULINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <ULINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_ULINT := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c1a6a302-e1ea-4a95-9bf7-0da125eb0d15</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_REAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_REAL := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a4596e12-e0f5-4ccb-b085-afeb799d87ca</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_LREAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <LREAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <LREAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_LREAL := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>aadf1a7b-a8e1-4942-962a-6d229417f5a0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_TIME := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2da03026-8543-4d4d-a07b-34ac7511e3c7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_LTIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_LTIME := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>fac7649e-d601-4ccc-9b51-7c378e709bfe</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_DATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DATE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DATE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_DATE := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>223a0bce-ff00-4165-8adb-50bcbc7f886a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_LDATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LDATE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LDATE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_LDATE := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4ee5abc4-d246-4dc6-8192-dd917c0fd680</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_DATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <DT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <DT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_DATE_AND_TIME := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>99dc1d9b-2068-427a-b630-e3962c5a07aa</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_LDATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LDATE_AND_TIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LDATE_AND_TIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_LDATE_AND_TIME := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>31acf48f-7338-4b58-b36f-feb51f0d1ef9</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_TIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <TOD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <TOD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_TIME_OF_DAY := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>366f9473-f1dc-486c-a939-73ca5f53998b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertLessEqual_LTIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <derived name="LTIME_OF_DAY" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <derived name="LTIME_OF_DAY" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertLessEqual_LTIME_OF_DAY := act &lt;= xp;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>148e66e5-e2b0-4eb0-8368-a4a6ae4219ce</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_BOOL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <BOOL />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <BOOL />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <BOOL />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <BOOL />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_BOOL := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_BOOL := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1fdc2d52-42bb-49b9-94a2-834158bb9a18</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_BYTE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <BYTE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <BYTE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_BYTE := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_BYTE := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>45585e20-5865-4e0a-8f18-ba20d03859bf</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_WORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <WORD />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <WORD />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <WORD />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_WORD := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_WORD := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5cb44daa-c6ba-417d-a65f-25e21c4f17bb</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_DWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <DWORD />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <DWORD />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <DWORD />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Returns TRUE if act == xp.</xhtml>
          </documentation>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_DWORD := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_DWORD := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6e80a73b-9e2e-42b1-97cf-8127e9f594cc</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_LWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <LWORD />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <LWORD />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <LWORD />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <LWORD />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_LWORD := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_LWORD := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ae3e528a-57f8-48bf-9169-562be8c54075</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_SINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <SINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <SINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <SINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <SINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_SINT := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_SINT := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4e5fade0-b4d2-485c-a239-3ee954f53ae8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_USINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <USINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <USINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <USINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <USINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_USINT := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_USINT := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f0a81d01-d3a6-4c75-91fa-46acaf9dbf9e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_INT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <INT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <INT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <INT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <INT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_INT := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_INT := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>10e776c4-e137-405e-864f-dfbe163baa36</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_UINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <UINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <UINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <UINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <UINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_UINT := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_UINT := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ab8e178b-375f-46d9-9e97-6d6319f5e5f0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_DINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <DINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <DINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <DINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <DINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_DINT := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_DINT := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1abd39c2-4516-4547-b78b-8bb754a50cc6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_UDINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <UDINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <UDINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <UDINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <UDINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_UDINT := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_UDINT := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>21683dba-e19f-4334-98e8-18a0ecc59890</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_LINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <LINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <LINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <LINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <LINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_LINT := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_LINT := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>edb069de-65dc-44fd-9d59-64d91e6cfa03</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_ULINT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <ULINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <ULINT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <ULINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <ULINT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_ULINT := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_ULINT := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e234f28f-9d0c-48b4-97d8-22acaf31d2ec</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_REAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <REAL />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <REAL />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <REAL />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <REAL />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_REAL := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_REAL := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>04a0524e-ae29-4b13-8a7d-d7043d8d0a37</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_LREAL" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <LREAL />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <LREAL />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <LREAL />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <LREAL />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_LREAL := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_LREAL := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>82269d81-91cb-4435-ab5c-ba8adc7f72eb</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_STRING" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <string />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <string />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <string />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <string />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_STRING := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_STRING := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0f1ac244-170a-478c-92da-08647782a829</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_WSTRING" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <wstring />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <wstring />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <wstring />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <wstring />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_WSTRING := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_WSTRING := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6b5cfe17-5151-4fd7-ae55-c86b8b3213d0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <TIME />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <TIME />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <TIME />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <TIME />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_TIME := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_TIME := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>be0ce832-cf3c-4fdb-84bf-a0e1a5b6991f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_LTIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <derived name="LTIME" />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <derived name="LTIME" />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <derived name="LTIME" />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <derived name="LTIME" />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_LTIME := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_LTIME := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>58c705a4-c5af-4b6c-9502-0d27360a246a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_DATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <DATE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <DATE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <DATE />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <DATE />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_DATE := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_DATE := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>290233e3-095c-4c3e-93e5-a0e4cc3f5e49</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_LDATE" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <derived name="LDATE" />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <derived name="LDATE" />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <derived name="LDATE" />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <derived name="LDATE" />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_LDATE := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_LDATE := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>87ed6a92-e4ea-4d39-923b-886b3f65fd4a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_DATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <DT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <DT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <DT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <DT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_DATE_AND_TIME := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_DATE_AND_TIME := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f2323288-56e3-4830-9c71-e203685c4392</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_LDATE_AND_TIME" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <derived name="LDATE_AND_TIME" />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <derived name="LDATE_AND_TIME" />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <derived name="LDATE_AND_TIME" />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <derived name="LDATE_AND_TIME" />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_LDATE_AND_TIME := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_LDATE_AND_TIME := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3e898bab-c30a-474f-b4b4-5bf159438bf4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_TIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <TOD />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <TOD />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <TOD />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <TOD />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_TIME_OF_DAY := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_TIME_OF_DAY := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>56c3f8ed-0eac-4ee7-8b3a-bb03336f4029</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertArrayEqual_LTIME_OF_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="act">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <derived name="LTIME_OF_DAY" />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
            <variable name="xp">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <derived name="LTIME_OF_DAY" />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test against</xhtml>
              </documentation>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array (ADR(act))</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="vStop">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the array / End of iteration</xhtml>
              </documentation>
            </variable>
            <variable name="pt1">
              <type>
                <pointer>
                  <baseType>
                    <derived name="LTIME_OF_DAY" />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array act</xhtml>
              </documentation>
            </variable>
            <variable name="pt2">
              <type>
                <pointer>
                  <baseType>
                    <derived name="LTIME_OF_DAY" />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the element of the array xp</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStop := (size / SIZEOF(act^[0])) - 1;

FOR i:=0 TO vStop DO
	pt1 := ADR(act^[i]);
	pt2 := ADR(xp^[i]);
	IF pt1^ &lt;&gt; pt2^ THEN
		assertArrayEqual_LTIME_OF_DAY := FALSE;
		RETURN;
	END_IF
END_FOR
(*If we reach here, all elements are equal*)
assertArrayEqual_LTIME_OF_DAY := TRUE;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>087a085d-fb19-48ec-b55a-c7dd0fb12698</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="assertTrue" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="condition">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to test</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">assertTrue := condition;
RETURN;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7e0ba264-f746-4935-93dc-e600da1a5495</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="utTestSuite" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="Id">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Id of the test object. Must be unique number</xhtml>
              </documentation>
            </variable>
            <variable name="Name">
              <type>
                <string length="250" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Name of the test object</xhtml>
              </documentation>
            </variable>
            <variable name="RunTests">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Starts all tests that are in setup state. Sets state to running.</xhtml>
              </documentation>
            </variable>
            <variable name="ResetTests">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Sets state to setup on test cases that are ut_PASSED or ut_FAILED.</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="TestCases">
              <type>
                <array>
                  <dimension lower="0" upper="20" />
                  <baseType>
                    <derived name="utTestCase" />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Array of test case definition</xhtml>
              </documentation>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="Summary">
              <type>
                <derived name="utTestCaseSummary" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Summary of the test results</xhtml>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
            <variable name="runCmd">
              <type>
                <derived name="R_TRIG" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Trigger to prevent constant run commands</xhtml>
              </documentation>
            </variable>
            <variable name="resetCmd">
              <type>
                <derived name="R_TRIG" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Trigger to prevent constant reset commands</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Copy name of object under test*)
Summary.Id := Id;
Summary.Name := Name;

(*Handle commands to start*)
runCmd(CLK:=RunTests);
resetCmd(CLK:=ResetTests);

(*Calculate total number of tests and other flags*)
Summary.TotalTests := 0;
Summary.TestsPassed := 0;
Summary.TestsFailed := 0; 
Summary.TestsRunning := FALSE;
FOR i:=0 TO 20 DO
	IF TestCases[i].id &gt; 0 THEN
		Summary.TotalTests := Summary.TotalTests + 1;
	END_IF
	(*Start the test if the Run command is true, the test exists and it is in setup state*)
	IF TestCases[i].id &gt; 0 AND TestCases[i].state = utTestCaseStates.ut_SETUP AND runCmd.Q THEN
		TestCases[i].state := utTestCaseStates.ut_RUNNING;
	END_IF
	
	(*Reset the test if the test exists and its ut_PASSED or ut_FAILED*)
	IF TestCases[i].id &gt; 0 AND TestCases[i].state &gt; utTestCaseStates.ut_RUNNING AND resetCmd.Q THEN
		TestCases[i].state := utTestCaseStates.ut_SETUP;
	END_IF
	
	(*Check the states of the test cases*)
	IF TestCases[i].state = utTestCaseStates.ut_RUNNING THEN
		Summary.TestsRunning := TRUE;
	END_IF
	IF TestCases[i].state = utTestCaseStates.ut_PASSED THEN
		Summary.TestsPassed := Summary.TestsPassed + 1;
	END_IF
	IF TestCases[i].state = utTestCaseStates.ut_FAILED THEN
		Summary.TestsFailed := Summary.TestsFailed + 1;
	END_IF
END_FOR

(*Error if number of tests defined is 0*)
IF Summary.TotalTests = 0 THEN
	Summary.Error := utErrors.ut_NO_TEST_CASES_DEFINED;
	RETURN;
END_IF

(*Calculate the pass rate if all tests have finished*)
IF NOT Summary.TestsRunning THEN
	Summary.PassRate := (Summary.TestsPassed / UINT_TO_REAL(Summary.TotalTests)) * 100.0;
ELSE
	Summary.PassRate := 0;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f0912f51-c42a-4da6-a3b6-58d26f1c9142</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="utTestReporter" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="Results">
              <type>
                <array>
                  <dimension lower="0" upper="500" />
                  <baseType>
                    <derived name="utTestCaseSummary" />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Summaries of tests for each POU under test</xhtml>
              </documentation>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="NrPousUnderTest">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Total number of POUs under test</xhtml>
              </documentation>
            </variable>
            <variable name="NrOfTests">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Total number of tests</xhtml>
              </documentation>
            </variable>
            <variable name="NrTestsPassed">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Number of tests passed</xhtml>
              </documentation>
            </variable>
            <variable name="NrTestsFailed">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Number of tests failed</xhtml>
              </documentation>
            </variable>
            <variable name="PassRate">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Total pass rate</xhtml>
              </documentation>
            </variable>
            <variable name="TestsInProgress">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Indicates that one or more tests are in progress</xhtml>
              </documentation>
            </variable>
            <variable name="Error">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Indicates that one or more tests are in error state</xhtml>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Reset totals*)
NrPousUnderTest := 0;
NrOfTests := 0;
NrTestsPassed := 0;
NrTestsFailed := 0;
PassRate := 0;
TestsInProgress := FALSE;
Error := FALSE;

(*Count totals*)
FOR i:=0 TO 500 DO
	IF Results[i].Id &gt; 0 THEN
		(*Count existing POUs under test*)
		NrPousUnderTest := NrPousUnderTest + 1;
		(*Count the pass rate. Needs to be divided in the end by the number of total tests*)
		PassRate := PassRate + Results[i].PassRate;
		(*Count the number of tests*)
		NrOfTests := NrOfTests + Results[i].TotalTests;
		(*Count the number of tests passed*)
		NrTestsPassed := NrTestsPassed + Results[i].TestsPassed;
		(*Count the number of tests failed*)
		NrTestsFailed := NrTestsFailed + Results[i].TestsFailed;
		
		(*Indicators*)
		IF Results[i].TestsRunning THEN
			TestsInProgress := TRUE;
		END_IF
		IF Results[i].Error &lt;&gt; utErrors.ut_NO_ERROR THEN
			Error := TRUE;
		END_IF
	END_IF
END_FOR
PassRate := PassRate / NrPousUnderTest;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>cb6cab75-04ce-4ed2-b124-3f6a2456f4ae</ObjectId>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="Library_tests">
        <resource name="Application">
          <task name="Task" interval="PT0.02S" priority="1">
            <pouInstance name="test_assertTrue" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_BOOL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_BYTE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_DATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_DATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_DINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_DWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_INT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_LDATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_LDATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_LINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_LREAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_LTIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_LTIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_LWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_REAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_SINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_STRING" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_TIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_UDINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_UINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_ULINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_USINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_WORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertArrayEqual_WSTRING" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_BOOL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_BYTE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_DATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_DATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_DINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_DWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_INT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_LDATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_LDATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_LINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_LREAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_LTIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_LTIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_LWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_REAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_SINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_STRING" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_TIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_UDINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_UINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_ULINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_USINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_WORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertEqual_WSTRING" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertFalse" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_BYTE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_DATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_DATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_DINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_DWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_INT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_LDATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_LDATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_LINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_LREAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_LTIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_LTIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_LWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_REAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_SINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_TIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_UDINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_UINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_ULINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_USINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreaterEqual_WORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_BYTE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_DATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_DATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_DINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_DWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_INT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_LDATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_LDATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_LINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_LREAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_LTIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_LTIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_LWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_REAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_SINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_TIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_UDINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_UINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_ULINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_USINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertGreater_WORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_BYTE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_DATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_DATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_DINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_DWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_INT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_LDATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_LDATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_LINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_LREAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_LTIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_LTIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_LWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_REAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_SINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_TIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_UDINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_UINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_ULINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_USINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLessEqual_WORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_BYTE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_DATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_DATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_DINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_DWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_INT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_LDATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_LDATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_LINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_LREAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_LTIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_LTIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_LWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_REAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_SINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_TIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_UDINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_UINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_ULINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_USINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertLess_WORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_BOOL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_BYTE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_DATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_DATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_DINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_DWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_INT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_LDATE" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_LDATE_AND_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_LINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_LREAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_LTIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_LTIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_LWORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_REAL" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_SINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_STRING" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_TIME" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_TIME_OF_DAY" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_UDINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_UINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_ULINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_USINT" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_WORD" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertNotEqual_WSTRING" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="test_assertTrue" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="main" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="t#20ms" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>89ae5dca-a198-4df6-b176-83ebbef75c1b</ObjectId>
              </data>
            </addData>
          </task>
          <task name="VISU_TASK" interval="PT0.1S" priority="31">
            <pouInstance name="VisuElems.Visu_Prg" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="100" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>6829860d-33d7-40c5-bad2-eaa0307d1541</ObjectId>
              </data>
            </addData>
          </task>
          <globalVars name="GVL">
            <variable name="Results">
              <type>
                <array>
                  <dimension lower="0" upper="500" />
                  <baseType>
                    <derived name="utTestCaseSummary" />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Place to save all the sumaries of each POU under test</xhtml>
              </documentation>
            </variable>
            <variable name="RunAll">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Issues a RunTests command to all TestSuites</xhtml>
              </documentation>
            </variable>
            <variable name="ResetAll">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Issues a ResetTests command to all TestSuites</xhtml>
              </documentation>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                <Attributes>
                  <Attribute Name="qualified_only" Value="" />
                </Attributes>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>ccc4dfb0-95ba-41ae-8436-5adb19390ad1</ObjectId>
              </data>
            </addData>
          </globalVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_BOOL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := TRUE;
	vTestCase1_xp := FALSE;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a777922a-6bdf-43d0-b036-3df3230c0656</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_BOOL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>76caf894-0b5c-4abb-b74b-f5ce7682a93c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := TRUE;
	vTestCase2_xp := TRUE;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a1a18e3b-b04b-4e90-9883-22e661cb4317</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_BOOL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>dcb8246f-6a08-413f-a69b-52557a72b228</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 25,
	Name := 'assertNotEqual_BOOL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8d8b4897-0346-43f2-8dfd-6805f59c21f5</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_INT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_INT(115.4);
	vTestCase1_xp := REAL_TO_INT(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ffa428ff-5604-4ade-a1fc-d520203b6cd7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_INT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4d6f2eb8-576a-4241-9619-a1fdf19e3bb1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_INT(115.4);
	vTestCase2_xp := REAL_TO_INT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>26210c95-9c9a-4815-8b13-556564d2081f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_INT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>11577817-6c82-4b83-a2c5-2da69b654a8f</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 32,
	Name := 'assertNotEqual_INT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>26057cad-175e-49a8-904d-8e76b0adc483</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_DATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DT(115.4);
	vTestCase1_xp := REAL_TO_DT(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2e41833c-52da-4fe1-b48a-780d18642ae7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_DATE_AND_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>fe7c929e-3861-44af-8b39-cb8fe4ea0be6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DT(115.4);
	vTestCase2_xp := REAL_TO_DT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6edafa60-2fc1-41ad-90b5-0894255891ef</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_DATE_AND_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7c2011e1-3878-4fc3-affe-8958f66ff07c</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 46,
	Name := 'assertNotEqual_DATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9a4a764f-9ed4-40a3-9eab-81ae301e759f</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_LWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LWORD(115.4);
	vTestCase1_xp := REAL_TO_LWORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1e1149f4-2770-4722-aec7-b88276367ee0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_LWORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>98a9b480-d5dc-4a4a-a614-2017db4f6681</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LWORD(8.4);
	vTestCase2_xp := REAL_TO_LWORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cf7050dc-463a-4e14-9d16-f8735db377c9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_LWORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>351b55ef-0d01-4a31-b6d6-b6d4861a7705</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 53,
	Name := 'assertGreater_LWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>ce9c9797-0780-4570-9259-272ea234aace</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_LREAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LREAL(115.4);
	vTestCase1_xp := REAL_TO_LREAL(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a13da9e3-84a7-4ec9-890b-136aae2a972b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_LREAL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>71fd873f-e790-4d81-9e99-1e54b2413c1e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LREAL(115.4);
	vTestCase2_xp := REAL_TO_LREAL(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4ac7e670-d50c-47cd-bea7-c898e24efec1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_LREAL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1cdf0902-c784-480b-8bd6-8b238b225f9e</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 39,
	Name := 'assertNotEqual_LREAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>581af547-387c-40cc-9612-5cb631893c0d</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_LTIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LTIME(85.4);
	vTestCase1_xp := REAL_TO_LTIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2cfcf053-cc72-4b0b-b059-3bfcf802fd98</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_LTIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>86fd4fcf-4ef4-4b12-afdb-ec615b5574f9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LTIME(115.4);
	vTestCase2_xp := REAL_TO_LTIME(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9f002404-cb28-4447-8678-1b3bd8e70924</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_LTIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e40205d0-30db-40f3-83c9-f08c3eedbe6a</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 109,
	Name := 'assertLess_LTIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>16f078c4-b75c-40cc-96b3-b9aa2f9fa4fd</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_BYTE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_BYTE(85.4);
	vTestCase1_xp := REAL_TO_BYTE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cf898d07-0972-40f0-98f0-9b38bcffdd2f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_BYTE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cf2368ba-516f-433d-969a-5d306327d527</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_BYTE(115.4);
	vTestCase2_xp := REAL_TO_BYTE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a2a84b34-0e08-425d-9d94-9d0eba750b99</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_BYTE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>81dd9f6b-114d-4e09-b135-1ff8f211772e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_BYTE(115.4);
	vTestCase3_xp := REAL_TO_BYTE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c1845d57-27e3-4bd9-8650-36d203d8f52a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_BYTE(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>fda47f28-b78b-4239-b8a6-10532629cd61</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 116,
	Name := 'assertLessEqual_BYTE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6c032a64-6a67-4be8-910b-e395300a64d6</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_WORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_WORD(85.4);
	vTestCase1_xp := REAL_TO_WORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>741adc2f-20bd-4708-bd44-19fea8c902d6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_WORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b41f6e1f-c034-430b-9c59-9e0508a00143</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_WORD(115.4);
	vTestCase2_xp := REAL_TO_WORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>915307fd-315c-461e-b383-cae67b910725</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_WORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e4dd9883-84de-4e8a-a180-f501928dfe40</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 95,
	Name := 'assertLess_WORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>0e4277dd-4809-4abf-b2a4-fb84af467595</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_DINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DINT(85.4);
	vTestCase1_xp := REAL_TO_DINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>91efc955-a2ae-4b96-8e01-683dce755289</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_DINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>dbab34eb-ac2e-47c4-bc00-4df444b13032</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DINT(115.4);
	vTestCase2_xp := REAL_TO_DINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7164440f-a39b-43e9-9ba9-cf1fed5923e7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_DINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bfcb3344-a9e7-4c62-88b5-a1068423a669</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 102,
	Name := 'assertLess_DINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>426e2226-ccd0-4f88-b872-cb8f682992f9</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_LDATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LDATE(115.4);
	vTestCase1_xp := REAL_TO_LDATE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4da42634-4df7-43d7-b9b5-99953697ffcb</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_LDATE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a3bca0ae-d45d-48ee-b0ca-ab843676d739</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LDATE(8.4);
	vTestCase2_xp := REAL_TO_LDATE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1ae1c31e-03d2-491e-95f1-38d08751b77e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_LDATE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8635f10e-538b-49ff-a857-3c16a91def9d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 67,
	Name := 'assertGreater_LDATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e19ee533-994b-4516-8dbd-7a9b49850ee0</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_UDINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_UDINT(115.4);
	vTestCase1_xp := REAL_TO_UDINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>42c0cc98-ac1a-47be-86f6-d893747d33df</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_UDINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d7408e8e-8cff-4b87-857c-c7398ba95020</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_UDINT(115.4);
	vTestCase2_xp := REAL_TO_UDINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f4b862d7-cb5e-4243-ad66-51469921a833</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_UDINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d0e3494d-89ec-4550-9454-089bc7b6813f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_UDINT(85.4);
	vTestCase3_xp := REAL_TO_UDINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d7460b37-4388-43c7-8d37-70068c5dccc1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_UDINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2a2921e1-7299-4089-9193-62245b303dfc</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 81,
	Name := 'assertGreaterEqual_UDINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>51eee339-19c7-454e-807c-5608f9fdbf36</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_DATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DATE(115.4);
	vTestCase1_xp := REAL_TO_DATE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>97b786d1-e907-43d7-a08c-6b730a714fd0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_DATE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a95cce5e-7ddc-4ea7-9dd3-6f2dc95fc21b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DATE(115.4);
	vTestCase2_xp := REAL_TO_DATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e93fb335-6fea-4ce6-b597-ba1ceb414879</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_DATE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f37f850c-d486-4c04-819f-f1b93bdae602</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_DATE(85.4);
	vTestCase3_xp := REAL_TO_DATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d69b6557-dda3-4697-bd42-5c24989a4e9f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_DATE(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>589e0160-f96e-44c3-8264-9038d4f020ce</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 88,
	Name := 'assertGreaterEqual_DATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>ea8d78ac-3ba0-4de8-bbff-480042c3eca2</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_DWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DWORD(115.4);
	vTestCase1_xp := REAL_TO_DWORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>39bd4cb2-52d9-4ae5-840e-cf63454007db</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_DWORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c8163c3b-1581-43cb-863c-c7662b980f69</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DWORD(115.4);
	vTestCase2_xp := REAL_TO_DWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f52a18ca-34a0-4447-8d56-6b8e4651f7e5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_DWORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c8b4b3d5-1fbd-403e-806a-88a8b3e47150</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_DWORD(85.4);
	vTestCase3_xp := REAL_TO_DWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9dd6844e-5af3-45ed-a49f-5494583ddf5e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_DWORD(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f05e5344-5c2d-4bb1-8198-125d4c66a49d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 74,
	Name := 'assertGreaterEqual_DWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>696289f5-6040-41cc-a1c0-8f37b129a2e3</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_LDATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LDATE" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LDATE" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LDATE" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LDATE" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_LDATE(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_LDATE(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>adec4839-f61f-450f-8cd3-08d7176fdab6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_LDATE(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>02c70dc4-0fb0-46be-bb02-73c2936bbccb</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_LDATE(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_LDATE(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>36eaea52-b309-417f-aa89-dc99a50963e9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_LDATE(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4316c3e9-0b1c-45d8-989f-35a3d66e6dcd</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 158,
	Name := 'assertArrayEqual_LDATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>5029d14a-ca22-4264-9f3a-e04f8f12deb6</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_UINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_UINT(115.4);
	vTestCase3_xp := REAL_TO_UINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>06e30649-aaeb-4c6c-ba63-6d051ba6b374</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_UINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>febbeef4-4e0b-434a-bcb0-583881d5752c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_UINT(85.4);
	vTestCase1_xp := REAL_TO_UINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c0e36d92-52c0-4d0f-9502-06da38c1491f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_UINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>fdcc4891-6a01-41d4-a02d-8e09c4abd5de</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_UINT(115.4);
	vTestCase2_xp := REAL_TO_UINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0c98a2a4-54b8-4878-a714-ef9c09e9b88c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_UINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a97ec3ed-2a0b-474c-a363-5cc574156eaf</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 123,
	Name := 'assertLessEqual_UINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>ffb31a86-f4fa-4272-b587-d126593ef554</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_REAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <REAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <REAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <REAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <REAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_REAL(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_REAL(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f325de7f-2034-48dc-bb2d-d537502f7815</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_REAL(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>fa577607-d7e1-4bf4-abe3-89efbdbf39a7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_REAL(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_REAL(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bdf7d422-0dfa-4a63-a551-7274f255a660</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_REAL(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>dbea1918-0408-427e-bb68-fcb35fbf41e0</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 151,
	Name := 'assertArrayEqual_REAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a5ad155e-e30d-43c0-9689-4d8f3e2458a9</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_TIME(115.4);
	vTestCase3_xp := REAL_TO_TIME(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d570eba4-6a03-445c-ab93-1690359f1e59</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_TIME(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>95ec8d05-5664-420e-b841-35851f7643ed</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_TIME(85.4);
	vTestCase1_xp := REAL_TO_TIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f8642201-ce74-45fd-be5c-b6ca76959bdc</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>01f21464-77b5-48d5-b991-4d57d762a8f2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_TIME(115.4);
	vTestCase2_xp := REAL_TO_TIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0cf06e0a-a434-405a-b54f-196cc35e77a4</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8ffaa26d-0eb4-4226-b3dc-d8d7d5ef2bff</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 130,
	Name := 'assertLessEqual_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9a6d310d-ae26-4165-8970-9a0d6aee4835</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_USINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <USINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <USINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <USINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <USINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_USINT(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_USINT(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>685ceb5e-44d0-4427-8019-a2439b419fed</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_USINT(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>056b30a0-4452-4a2d-97af-758678cd6016</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_USINT(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_USINT(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3ceb77ba-4734-45e3-8b25-2446e33263d8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_USINT(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f232ba43-6f50-44c1-aead-5f2118784921</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 144,
	Name := 'assertArrayEqual_USINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>65d427fa-391a-4349-b6a3-0479ddb3b7fe</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_LTIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LTOD(115.4);
	vTestCase3_xp := REAL_TO_LTOD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>29fd8da4-ef70-44e8-870d-84e89d35f05d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_LTIME_OF_DAY(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2863893d-76f4-4ccb-9d8e-3f4c93937e2d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LTOD(85.4);
	vTestCase1_xp := REAL_TO_LTOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f870a9cc-08ba-4d43-b919-e135906b1add</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LTIME_OF_DAY(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c3f7b1e1-545b-4644-b121-79e5d2815a32</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LTOD(115.4);
	vTestCase2_xp := REAL_TO_LTOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>335f6117-9793-4c93-96fb-b2aae1aea2a9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LTIME_OF_DAY(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>769f1fd2-fac5-47f3-8202-120c3a914cbc</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 137,
	Name := 'assertLessEqual_LTIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>5b0a786a-7f1e-445c-a8f0-047f8282f4a2</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_BOOL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := TRUE;
	vTestCase1_xp := TRUE;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>fe99038e-4436-480d-8b95-e3a0c48f709a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_BOOL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>54b1fd06-2e6d-4ba7-8d18-56a631738737</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := TRUE;
	vTestCase2_xp := FALSE;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>171fe805-f4d7-4721-a64b-b5bbe8e90cc8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_BOOL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c71bd351-aba0-4564-bbe5-199bdce125e0</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 0,
	Name := 'assertEqual_BOOL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>d8413e58-ba01-48da-8574-5a58a06beae1</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_USINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_USINT(115.4);
	vTestCase1_xp := REAL_TO_USINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ee518aec-274d-4a69-abf1-9f6e5e4306d1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_USINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0d961d72-151b-4647-b358-ac8bcae455c4</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_USINT(115.4);
	vTestCase2_xp := REAL_TO_USINT(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>22ee3574-1bc7-4b2d-b8e4-6198db600b6a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_USINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>fe81ad58-230d-4feb-82d6-9135fbfed58f</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 6,
	Name := 'assertEqual_USINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b5eb7082-2e0d-4d7f-88b2-54f098e33a9b</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_DWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DWORD(115.4);
	vTestCase1_xp := REAL_TO_DWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>535df97b-fb83-4745-8c9f-299aef37885b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_DWORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1e578f87-b7ea-416b-bc76-6c9c66324906</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DWORD(115.4);
	vTestCase2_xp := REAL_TO_DWORD(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>70f7b763-503c-479a-8359-38d60b0cbcad</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_DWORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ede47a90-34a6-4a2c-be37-09d092329b58</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 3,
	Name := 'assertEqual_DWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>60cc5e6f-bee6-4a96-bb15-daafd9c73e18</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_UDINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_UDINT(115.4);
	vTestCase1_xp := REAL_TO_UDINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>67f30ba1-8b9c-4569-9f10-ae10debdf1c1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_UDINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f79cb35a-5a11-499b-8a2a-b5f1b9145f01</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_UDINT(115.4);
	vTestCase2_xp := REAL_TO_UDINT(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>df96a8c1-52d0-4ea7-981c-055602196f7a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_UDINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>17213a2c-384d-4980-93fa-2a426d9a8e58</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 10,
	Name := 'assertEqual_UDINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c046c810-c299-4c85-ba00-da07860d44f0</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_LINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LINT(115.4);
	vTestCase1_xp := REAL_TO_LINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7dce3d04-58d2-422f-99d8-68d689c217cb</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_LINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6f52f7a6-845d-435f-adfe-a7892d6616ed</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LINT(8.4);
	vTestCase2_xp := REAL_TO_LINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>84420114-a71c-4fc6-9861-b8d04bd3adf3</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_LINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e22d1c2f-43cd-4410-82e0-276641a13279</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 60,
	Name := 'assertGreater_LINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>fdd8892f-334f-4947-bb0d-d6043426eb2a</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_BYTE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_BYTE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4c41df1b-2c0c-4477-aab1-4be17b8e6d1d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_BYTE(115.4);
	vTestCase1_xp := REAL_TO_BYTE(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9c0afe90-d1c0-4e1d-a8b1-19e040050b10</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_BYTE(115.4);
	vTestCase2_xp := REAL_TO_BYTE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1cf4f38f-7c12-426b-a69e-71dd0b3fb3cd</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_BYTE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d1791d0a-5859-4543-ad02-d26f47f9f86e</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 26,
	Name := 'assertNotEqual_BYTE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e2c950c9-85f0-4eaf-a6a7-d1374e214f10</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_WORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_WORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3e302972-eff6-4865-9838-8f5bfd6596db</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_WORD(115.4);
	vTestCase1_xp := REAL_TO_WORD(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>35b9bb99-c322-4ffe-bd8c-490c4d3f4d00</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_WORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1ba01655-945c-4f56-a0ce-528ba8b69667</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_WORD(115.4);
	vTestCase2_xp := REAL_TO_WORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4430e6a2-7347-455f-9800-d5e1ccd12a6b</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 27,
	Name := 'assertNotEqual_WORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>2ec7e58c-904f-4fca-a616-941a0da14410</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_DINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DINT(8.4);
	vTestCase2_xp := REAL_TO_DINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3b971461-942d-4b41-ab89-47ba2439c981</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DINT(115.4);
	vTestCase1_xp := REAL_TO_DINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5b6aa017-5ec8-4fbd-9c7d-d48b4858d2cd</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_DINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0b8303e0-1967-4f0b-a9a1-29a00c10fc43</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_DINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ea6f04dd-84ed-44bf-b08c-ef774983c0b0</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 58,
	Name := 'assertGreater_DINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>4190d77d-baa3-4f66-971a-06885de873c4</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_UINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_UINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>23541bd2-dd03-45a8-acde-1ed1680dfc8f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_UINT(115.4);
	vTestCase1_xp := REAL_TO_UINT(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>74f51c51-cf29-438f-9557-e74286bff2be</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_UINT(115.4);
	vTestCase2_xp := REAL_TO_UINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c905277f-654f-4c2a-8c69-b6ed37011dd3</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_UINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cad15009-d136-429c-bd09-698e4c5f5bdd</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 33,
	Name := 'assertNotEqual_UINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9c3cd703-4cf2-4a9b-a121-a77c5c923cdb</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_DATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DATE(115.4);
	vTestCase2_xp := REAL_TO_DATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>096ac22a-61d0-44c1-a565-66e2ec566ab8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DATE(115.4);
	vTestCase1_xp := REAL_TO_DATE(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7eec4b7a-251e-4a4c-90a9-4ce5f948c37f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_DATE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1f20ae2e-37f3-4e92-9ce5-f1943c022685</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_DATE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a38dbf16-3f9e-4c00-8e92-760b6d420043</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 44,
	Name := 'assertNotEqual_DATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e125f869-1663-4cd3-9b59-0ff79505df7a</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_LDATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_LDATE_AND_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>94912994-1b06-4d1e-8edc-38752ad5553d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LDT(115.4);
	vTestCase1_xp := REAL_TO_LDT(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f92069df-7f3c-4444-9b15-32e1cee3964e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LDT(115.4);
	vTestCase2_xp := REAL_TO_LDT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f50885f3-9f81-4da8-8778-6cdbc01088c3</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_LDATE_AND_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1fb4fc95-bdb4-455d-aa4f-c79c675f4d60</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 47,
	Name := 'assertNotEqual_LDATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e3a2f759-124c-425f-8621-015e752ce19e</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_INT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_INT(115.4);
	vTestCase1_xp := REAL_TO_INT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4c379467-c270-44e7-ad48-0a2df6b1982d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_INT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cd05b2e1-3ba6-4e1c-a076-0d071640ea6c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_INT(8.4);
	vTestCase2_xp := REAL_TO_INT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7ff809d4-b1c9-4532-b016-322566f70a4a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_INT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b71b493d-8824-4b1c-af5b-2d171a52a6c3</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 56,
	Name := 'assertGreater_INT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>1fffd231-54ef-4243-87b8-88217fbcdb22</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_UINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_UINT(115.4);
	vTestCase1_xp := REAL_TO_UINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7571bcf8-f2f7-4573-b45f-dbf0cd6c9b3a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_UINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7df39b90-2a37-4f74-a1e1-4e68293d28cc</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_UINT(8.4);
	vTestCase2_xp := REAL_TO_UINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>edf0a6d7-3fd8-430e-b92b-b5fb1b46e85b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_UINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bf88cd0e-aa79-4f35-889e-428cbbf2d0be</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 57,
	Name := 'assertGreater_UINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>91513d92-02df-40f9-84db-a6d40875057b</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_DINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_DINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>07167a53-5b12-4eb4-a78b-a2dabf7e0c16</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DINT(115.4);
	vTestCase1_xp := REAL_TO_DINT(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0636153c-fea9-4715-b962-6fe99b71109e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_DINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4424bd64-219c-4e13-b465-7d427eb6b7b2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DINT(115.4);
	vTestCase2_xp := REAL_TO_DINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>986d68b9-207d-452c-81aa-0d7a27fa6bc4</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 34,
	Name := 'assertNotEqual_DINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>78881a41-f48e-44f1-bcf4-aa333ff57844</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_SINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_SINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>42953811-f88c-4c8c-bee4-b274fe1781cd</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_SINT(115.4);
	vTestCase1_xp := REAL_TO_SINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>22f0f258-5f54-4f8f-93c0-3e8f92fccbe2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_SINT(8.4);
	vTestCase2_xp := REAL_TO_SINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>05f2f9ae-9d9d-4ac0-9ec5-ad9f892f2f11</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_SINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>df2b73d1-2fd0-466f-bf41-52699bacf6cd</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 54,
	Name := 'assertGreater_SINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b7f7372c-7887-4c5b-8974-c179fe06fcdd</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_USINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_USINT(115.4);
	vTestCase1_xp := REAL_TO_USINT(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a4b0720f-f76f-47ad-afb4-9ff2a4b30b3d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_USINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>da2e96df-8c88-40b1-92a3-b9e42dbe3de6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_USINT(115.4);
	vTestCase2_xp := REAL_TO_USINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>795e8dc7-1e4f-404f-b8a1-9adf9f0c6f7b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_USINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8ed0e10a-d3ed-4f4b-b5fb-35985276d8a5</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 31,
	Name := 'assertNotEqual_USINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b3f83fa1-adb8-497f-8733-04f01ddf5d48</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_DWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DWORD(115.4);
	vTestCase1_xp := REAL_TO_DWORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2cbc208a-9ab8-4d23-8ef6-585ec3d8a526</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_DWORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4153e112-ed5a-4297-885c-fddc7edf257b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DWORD(8.4);
	vTestCase2_xp := REAL_TO_DWORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bc35b379-2c31-4e2e-bd56-6abe283bf963</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_DWORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e5e7cb9f-5deb-4c33-ad43-be1c04725671</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 52,
	Name := 'assertGreater_DWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>f452433b-0091-4a0c-9f72-8f9cba18b7e6</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_REAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := 115.4;
	vTestCase1_xp := -85.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bf68b946-6d02-4631-9e8d-8e7c3d8d87a6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_REAL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>154d722f-af55-4a03-a64e-7a9afdbb469e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := 115.4;
	vTestCase2_xp := 115.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>78425dab-3265-4ed9-a7a2-21d7a409010c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_REAL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bfd4781e-6399-4bff-a5d2-1d7e25cfcf6d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 38,
	Name := 'assertNotEqual_REAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a11f89e1-701c-40a6-934f-9f3f482fef0a</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_USINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_USINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c968d421-521e-4c10-86ac-df89e572ad6c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_USINT(115.4);
	vTestCase1_xp := REAL_TO_USINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ab2a2387-fd17-499e-8cf8-32e740fe8228</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_USINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>14d2805b-e162-4866-b473-874cc805fd60</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_USINT(8.4);
	vTestCase2_xp := REAL_TO_USINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a287bd27-14ac-4320-8e5e-20f592810c5e</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 55,
	Name := 'assertGreater_USINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>71db9960-3eb7-4c6d-88f0-5178f2db1ed1</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_LDATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LDATE(115.4);
	vTestCase1_xp := REAL_TO_LDATE(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2ec1f52c-846b-41de-9cad-1dbc60eaf9c9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_LDATE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0a51dc3a-90c8-4c9c-aef8-9754f387b5a3</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LDATE(115.4);
	vTestCase2_xp := REAL_TO_LDATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0e6345b1-5905-4433-b14b-f96688348960</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_LDATE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>69eb333f-ead8-47ea-824c-1ef77b7c6ec8</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 45,
	Name := 'assertNotEqual_LDATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a45f11f7-dd4e-4d3c-aafe-7eff82226261</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_STRING" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <string />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <string />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <string />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <string />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_STRING(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d2372239-83d7-4206-a564-832bd1a385d1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_STRING(115.4);
	vTestCase1_xp := REAL_TO_STRING(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3b207c97-a9fa-4fca-99eb-9add8cb5c6ba</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_STRING(115.4);
	vTestCase2_xp := REAL_TO_STRING(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>90ad4184-c636-4267-9257-27a8b34b73b6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_STRING(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c2e09d12-a76a-4a25-ae96-d75451cedaf1</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 40,
	Name := 'assertNotEqual_STRING',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>38a1bd72-ae9d-4b7e-9968-5d724f4482cb</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_TIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_TIME_OF_DAY(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5a9761f0-885a-48d7-893d-4525c2f438f9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_TOD(115.4);
	vTestCase1_xp := REAL_TO_TOD(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>be3b955a-afd0-4d0d-bedb-995c5165ab73</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_TIME_OF_DAY(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>252fa800-c342-4471-b9d4-7b361e62566b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_TOD(115.4);
	vTestCase2_xp := REAL_TO_TOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7f99cb58-6ee7-40a9-b03c-1104df2396e3</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 48,
	Name := 'assertNotEqual_TIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>94f2ca5a-49df-4fb5-91a7-0f8c06e2779f</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_UDINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_UDINT(115.4);
	vTestCase1_xp := REAL_TO_UDINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>73f9993a-b8cc-4531-8a89-b85a230cbe84</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_UDINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4ceea4e1-5258-4962-9acf-b76741d9ca05</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_UDINT(8.4);
	vTestCase2_xp := REAL_TO_UDINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1ad04353-409f-4ccc-a1c6-cab47c7ff2da</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_UDINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8c44760b-30ff-4be2-b39d-03538f26ccc1</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 59,
	Name := 'assertGreater_UDINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>92874796-d6a8-49cc-85af-b1d9e26ea9e2</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_LTIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LTOD(115.4);
	vTestCase1_xp := REAL_TO_LTOD(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>fc236f97-9d6e-4698-b0d8-25eb54ed800a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_LTIME_OF_DAY(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>14332fe7-29b3-4844-9bf5-873b35f97f5d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LTOD(115.4);
	vTestCase2_xp := REAL_TO_LTOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d4031895-d58d-4011-85cf-adea71e871c5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_LTIME_OF_DAY(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>929c0239-ea09-468c-a310-40f98ae8573b</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 49,
	Name := 'assertNotEqual_LTIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>f3493acf-1c16-4c43-a662-3bc486294b8c</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_BYTE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_BYTE(115.4);
	vTestCase1_xp := REAL_TO_BYTE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e6345018-bac3-4939-b731-154d302c4d4e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_BYTE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cacca234-3b3b-4888-84bb-a121a391fefe</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_BYTE(8.4);
	vTestCase2_xp := REAL_TO_BYTE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cd43cda0-873b-437e-b067-abcdb2855603</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_BYTE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>00cbe7c6-3e33-49b5-a3e0-8ec2de914d6d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 50,
	Name := 'assertGreater_BYTE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b6a40440-bb18-4041-85d4-240c53d7c5ff</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_WSTRING" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <wstring />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <wstring />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <wstring />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <wstring />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_WSTRING(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ad90d8f9-44e6-41b7-9f0d-651613eb80f9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_WSTRING(115.4);
	vTestCase1_xp := REAL_TO_WSTRING(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9f1ed288-3c61-4b85-8c58-74c06edbf360</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_WSTRING(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>220054eb-a37e-49b5-9cdc-2c81f79b5208</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_WSTRING(115.4);
	vTestCase2_xp := REAL_TO_WSTRING(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>457ddcb0-39fa-4fe9-af61-5b5e57efa4e7</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 41,
	Name := 'assertNotEqual_WSTRING',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>43ebafef-0ec4-4f99-8429-f5a4454c0a2c</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_DWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DWORD(115.4);
	vTestCase1_xp := REAL_TO_DWORD(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>aeee408d-fd2c-48c6-8160-fa0e192e6f05</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_DWORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3a0fb8a7-6fd1-4663-854d-a42044c8368a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DWORD(115.4);
	vTestCase2_xp := REAL_TO_DWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5ab4d28b-79c8-45e3-b4a4-4a60c8bfbb9b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_DWORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>15462c78-ab3e-4276-9404-5c38b4e98844</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 28,
	Name := 'assertNotEqual_DWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>13a93b6d-83b9-40f8-a922-64abac223358</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_LWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LWORD(115.4);
	vTestCase1_xp := REAL_TO_LWORD(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b2364e31-c02a-4bbe-bff7-7d651bf6f34a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_LWORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3c9a11cd-531c-43bf-9bdd-7b30c8524421</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LWORD(115.4);
	vTestCase2_xp := REAL_TO_LWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e62c2540-a260-4252-a895-b9b8ad387195</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_LWORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7e595046-bdcd-44bc-b522-ebf6c605bd28</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 29,
	Name := 'assertNotEqual_LWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>0ea5964a-76a5-433f-a3cf-75b239ed038d</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_UDINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_UDINT(115.4);
	vTestCase1_xp := REAL_TO_UDINT(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>513fcfa9-e7c9-415b-89ca-19d4b3dc86dc</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_UDINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3868d50f-56ed-4205-829a-377fa35e779d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_UDINT(115.4);
	vTestCase2_xp := REAL_TO_UDINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>fcbfdb62-1312-4570-a0cf-8249383632ae</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_UDINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>909b50fb-0205-41a1-bf4e-08859a532644</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 35,
	Name := 'assertNotEqual_UDINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9990e6ef-e5d3-4d2d-ab6e-d9c5ac639f3e</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_LINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LINT(115.4);
	vTestCase1_xp := REAL_TO_LINT(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>550e1066-fd22-41aa-8ea4-e58b5966ff3c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_LINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b6430486-d559-4b70-9bbc-b6c461985106</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LINT(115.4);
	vTestCase2_xp := REAL_TO_LINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1fe8b808-94e7-47ba-b99c-bdf75650c67c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_LINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1c5ebc73-4585-404b-9f70-13af4b840779</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 36,
	Name := 'assertNotEqual_LINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>63e31617-b9cd-41cd-85c9-d7f02b4277b8</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_SINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_SINT(115.4);
	vTestCase2_xp := REAL_TO_SINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5f71401e-514e-44fb-b26e-b8f537e664f8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_SINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>80879d46-223c-4081-8e05-f099b7e12f0d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_SINT(115.4);
	vTestCase1_xp := REAL_TO_SINT(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2b276ebc-179a-43f0-b239-b36234a40a8d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_SINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>250b6949-14fa-41e4-a19f-775d9a091a12</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 30,
	Name := 'assertNotEqual_SINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>329ea8c8-b939-410e-9c44-c30552a33998</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_ULINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_ULINT(115.4);
	vTestCase2_xp := REAL_TO_ULINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5f5948ba-cf91-4cf1-93ee-7d05d151ef94</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_ULINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>64d711c7-7608-4897-af5b-85d717e36401</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_ULINT(115.4);
	vTestCase1_xp := REAL_TO_ULINT(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2bcfa171-5973-4210-bd35-c7dc1d1bf28a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_ULINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>88128832-d368-4bd6-a9ce-46114f24bcfe</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 37,
	Name := 'assertNotEqual_ULINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>978d5ca1-a3e5-452d-827e-426e3fbca9a7</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_WORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_WORD(8.4);
	vTestCase2_xp := REAL_TO_WORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>37700f93-386d-48aa-8142-d7514c6b7f9c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_WORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>587cb7c8-c382-4a32-9b62-3861a12d788f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_WORD(115.4);
	vTestCase1_xp := REAL_TO_WORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d5137cb0-6d29-433d-8af5-be01c3f12735</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_WORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1c0a03ce-5e53-4a2b-acd1-5bde0f765ed1</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 51,
	Name := 'assertGreater_WORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b4c245c3-b2d6-4c77-a365-6da503fc67f1</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_TIME(115.4);
	vTestCase1_xp := REAL_TO_TIME(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a5d5a746-c94f-45ba-8c24-3c101c03d23d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>82bc2eb8-7478-4e9c-b1c2-cad6a85efd9d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_TIME(115.4);
	vTestCase2_xp := REAL_TO_TIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0ad59e48-dd00-4804-b86c-28b2deab728b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2c131bb0-39be-421d-ab33-3fb7ba292a20</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 42,
	Name := 'assertNotEqual_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>2bc31f24-b610-4692-a002-e6f957649e4f</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertNotEqual_LTIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS NOT EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters do not hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LTIME(115.4);
	vTestCase1_xp := REAL_TO_LTIME(-85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5507e4d2-1284-457e-890b-398250d63cb0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertNotEqual_LTIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were not equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c7aaea10-4f35-40ad-929a-ce3512d0e40d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LTIME(115.4);
	vTestCase2_xp := REAL_TO_LTIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>03fd6ef7-8734-4851-b73a-8eea9d1db0e7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertNotEqual_LTIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a8cf701f-0bfa-4314-a55d-e22469de40b4</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 43,
	Name := 'assertNotEqual_LTIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b40574de-d233-4b83-b875-f1f66fb2bef8</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_LTIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LTOD(115.4);
	vTestCase2_xp := REAL_TO_LTOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2a2d765f-753d-47b4-a750-6744ce1ca202</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LTOD(85.4);
	vTestCase3_xp := REAL_TO_LTOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7f0438a6-840d-4291-a5df-ac824d330fa0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LTOD(115.4);
	vTestCase1_xp := REAL_TO_LTOD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7a0b91ff-b500-4303-ac9f-72d07241c6a0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LTIME_OF_DAY(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6321cdba-3ec5-4fc2-98ba-a9cd449acebd</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LTIME_OF_DAY(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>029fa7b7-129a-4d4f-9051-a13ae3d1b127</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_LTIME_OF_DAY(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3e7777ae-6aa7-4455-b75a-8653b7970dfb</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 93,
	Name := 'assertGreaterEqual_LTIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>980554ea-2a75-4e2d-823e-963d8ec73db8</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_INT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_INT(115.4);
	vTestCase3_xp := REAL_TO_INT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3a2bb8c7-f096-42a9-8f61-67c0b343a815</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_INT(85.4);
	vTestCase1_xp := REAL_TO_INT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>600a4935-8365-4fee-97aa-3a8871b47575</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_INT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>389c59f2-226d-4320-ad70-61ad34fe74b0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_INT(115.4);
	vTestCase2_xp := REAL_TO_INT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b0a98be0-304d-4d02-ac43-78172723044a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_INT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d60b99d0-e99d-41a2-9805-1fa06bff9c45</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_INT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>991c368e-6e11-44fc-aaa5-f083c27741d6</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 122,
	Name := 'assertLessEqual_INT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>77d2499e-50ae-4f6b-8f2b-e361ea5c17dc</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_SINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_SINT(85.4);
	vTestCase1_xp := REAL_TO_SINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>156a09fb-7545-4c39-b45f-16b85f8f4b18</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_SINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0e36cbc6-c0fe-49ea-813c-1b74443991de</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_SINT(115.4);
	vTestCase2_xp := REAL_TO_SINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>51d7d082-99fa-46d9-9eab-0b7ecb175271</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_SINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7af1f075-6295-4d7a-a3d8-8e05c3cc608f</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 98,
	Name := 'assertLess_SINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9f57a0c0-0b2d-45cf-acbd-a9b70d9aee84</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_USINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_USINT(85.4);
	vTestCase1_xp := REAL_TO_USINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>93ec4c35-6bfe-485b-98cb-f09e07fd7a9f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_USINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3e05fbc0-7090-455a-8b59-ceb307cda9f8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_USINT(115.4);
	vTestCase2_xp := REAL_TO_USINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a8cad5f8-0963-4a88-af46-19cc82e424b9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_USINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4bfbf74a-4a7c-4268-86da-9d2e26e59cc7</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 99,
	Name := 'assertLess_USINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b680944e-c5fd-4c1d-b24d-25b3d210d680</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_DATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_DATE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ff80f620-13f3-4fa1-9062-448af3b166ee</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DATE(85.4);
	vTestCase1_xp := REAL_TO_DATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>11644f42-d408-4497-bcc9-46c2ea60e88a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DATE(115.4);
	vTestCase2_xp := REAL_TO_DATE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4dcdbe0c-2550-4302-b81d-5a624efc9b19</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_DATE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>05f57b7d-6834-4315-930f-60a97946fdcd</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 110,
	Name := 'assertLess_DATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>263f31a9-47ab-4c64-bcb4-d743c7bf3fd4</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_DATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DT(85.4);
	vTestCase1_xp := REAL_TO_DT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1934120a-ad71-4147-ba69-4ab019734ed9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_DATE_AND_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3ad9e19d-3978-4a5e-99ad-ab9a401fbb4b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DT(115.4);
	vTestCase2_xp := REAL_TO_DT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d858eed2-dd94-4b52-8a94-d00d0f0f3d02</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_DATE_AND_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6b2aa0e4-5aa3-4ae7-bb0b-4efaa2019099</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 112,
	Name := 'assertLess_DATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c8b2090b-625d-4298-bc38-adaf19de0747</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_LDATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LDT(85.4);
	vTestCase1_xp := REAL_TO_LDT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b5277275-2346-4b99-915a-8b13d8f64647</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_LDATE_AND_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a37471db-421b-4702-a4ff-3400b8d6b2bc</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LDT(115.4);
	vTestCase2_xp := REAL_TO_LDT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a2f98890-a2f6-4d11-a75c-cefd9fc5c68d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_LDATE_AND_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>87fff2f3-53ff-4511-98c8-928f6c10aabb</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 113,
	Name := 'assertLess_LDATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>30998da9-0a4e-432f-9866-5398e06a0dce</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_USINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_USINT(115.4);
	vTestCase2_xp := REAL_TO_USINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3002df13-4f60-483f-a100-42ac34e3c12a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_USINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>625add2a-3f77-4b23-bacd-a27fb8188252</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_USINT(85.4);
	vTestCase1_xp := REAL_TO_USINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b0d112dc-d082-4cb3-acf8-2451611b81da</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_USINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bdd58a69-e673-404e-9366-0e6793d18f10</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_USINT(115.4);
	vTestCase3_xp := REAL_TO_USINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d11c0a93-d00d-4154-b012-c199f51e8b98</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_USINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2e34e186-e8b1-43e5-883b-651740b679f1</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 121,
	Name := 'assertLessEqual_USINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>faa41d65-0b4a-46e9-b097-d4db39890c72</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_INT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_INT(115.4);
	vTestCase2_xp := REAL_TO_INT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>21d7d3a1-34d4-4ac1-83f4-4de8fc681494</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_INT(85.4);
	vTestCase1_xp := REAL_TO_INT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>73419aed-e60b-445b-9348-732c3c0a24e8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_INT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>844cb6bb-a942-4323-bc8a-eb065d7b030f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_INT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>db5e46c6-a109-490b-8bd9-7189fabe4bdb</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 100,
	Name := 'assertLess_INT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>917b7ea5-bc17-43be-b4b5-cefb997905ca</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_DWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_DWORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3fc7172f-d9f6-4e7f-b1fd-555ad4e18ff9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_DWORD(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c7cbf35f-a26f-4a00-a97a-2bdaa7d8408c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DWORD(85.4);
	vTestCase1_xp := REAL_TO_DWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>12a26c52-047e-4b0b-a38c-c7a1d6411566</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_DWORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c9b06f36-fe18-4c47-b1bd-559dd4934076</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DWORD(115.4);
	vTestCase2_xp := REAL_TO_DWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7794d60f-3ce4-49d4-b258-8acc7f89a1aa</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_DWORD(115.4);
	vTestCase3_xp := REAL_TO_DWORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>84a43118-aaa6-4c19-82cd-4a7d21d5df22</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 118,
	Name := 'assertLessEqual_DWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e39f62ac-9f53-4abc-9730-50fa937344a7</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_LWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_LWORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>00d1c8d5-5822-4b65-92e9-5f78a4b2a99e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LWORD(85.4);
	vTestCase1_xp := REAL_TO_LWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2c9e25f9-66e6-471b-904d-a32c79ca879c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_LWORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>27b5b40d-fcd1-4271-bf1e-c5518dd560ec</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LWORD(115.4);
	vTestCase2_xp := REAL_TO_LWORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>db198b1a-0b64-446c-a955-de8c3226a1a6</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 97,
	Name := 'assertLess_LWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7c814499-bedc-46d5-bb27-d9cb36d58d12</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_WORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_WORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c2cef1c8-d703-4a58-917f-b8a3e4b52549</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_WORD(115.4);
	vTestCase2_xp := REAL_TO_WORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8d447dcf-38c4-428f-b2fa-7fbd9938c723</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_WORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4aada338-e638-4a92-812a-259ef0182089</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_WORD(85.4);
	vTestCase1_xp := REAL_TO_WORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f4a1e114-8b7e-473e-b204-fdc73afe3050</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_WORD(115.4);
	vTestCase3_xp := REAL_TO_WORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b2198411-74ed-4866-9ad7-7f73289abdda</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_WORD(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c57c591d-5674-4448-acc6-5a8dc6552a5d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 117,
	Name := 'assertLessEqual_WORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>f070f4a7-170e-46e3-b2d5-6cce6dece90a</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_LINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_LINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>22da4ba5-c537-4b42-a6e7-3acd49692d13</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LINT(85.4);
	vTestCase1_xp := REAL_TO_LINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8dcaefdc-a0ab-481c-9104-6a01628390fd</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_LINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a0227223-ca3b-47d1-b498-cfbfa8a02473</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LINT(115.4);
	vTestCase2_xp := REAL_TO_LINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>56a6e500-0b5c-4d61-a8a3-5ed2e25ec63c</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 104,
	Name := 'assertLess_LINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>338e86bd-69de-48ba-a3cd-f8c06bc06a9b</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_LWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LWORD(85.4);
	vTestCase1_xp := REAL_TO_LWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3928a4d8-2ebb-4bcd-857e-c8e447817a22</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LWORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7d3ddce4-10b2-43af-bbb9-127b2304e5d5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LWORD(115.4);
	vTestCase2_xp := REAL_TO_LWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b47a248e-fb46-481c-9a7c-caa1ef2d9f8e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LWORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e4c3a0fc-abbc-4ef0-aed0-4925980628c1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LWORD(115.4);
	vTestCase3_xp := REAL_TO_LWORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7c394664-3958-4999-9e80-b38e70d96acb</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_LWORD(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>70f77199-da36-4c38-b60b-cdadb76e7b06</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 119,
	Name := 'assertLessEqual_LWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>46a353dd-2334-452c-9973-3d53a539935e</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_SINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_SINT(85.4);
	vTestCase1_xp := REAL_TO_SINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>45fe83fe-b421-48ae-8b2d-d30c448cb372</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_SINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>169d3a4a-3b09-4318-81f7-34af6b163a7c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_SINT(115.4);
	vTestCase2_xp := REAL_TO_SINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7034c238-de97-4936-a098-37301afceb84</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_SINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>055e0741-595d-4093-bbc2-812f6a8f8e3b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_SINT(115.4);
	vTestCase3_xp := REAL_TO_SINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>71b74853-d2ea-44a0-ada0-a32fa0c63a48</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_SINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>71b0213b-a145-452c-baaa-418f0d588881</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 120,
	Name := 'assertLessEqual_SINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>09a9a7b4-e984-4ef3-8d90-99afd9cb9a21</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_LDATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_LDATE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>19ffe9c2-7983-4cb2-944c-c83b6a24c278</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LDATE(85.4);
	vTestCase1_xp := REAL_TO_LDATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>800d14e0-dc90-4a63-80b0-d3ac6f2cfbcb</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_LDATE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>66ada3c5-8b26-4a55-bd11-36ca19cfa1d5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LDATE(115.4);
	vTestCase2_xp := REAL_TO_LDATE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0dafedb2-65a0-46d0-91a4-86a1a91e3582</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 111,
	Name := 'assertLess_LDATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>d76bf043-2ec1-46bc-acfe-b3115b249905</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_ULINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_ULINT(85.4);
	vTestCase1_xp := REAL_TO_ULINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a2e24f99-bfa0-4cdf-973d-bb1969941279</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_ULINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f6d6cd90-383b-4fde-9054-f200f819030d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_ULINT(115.4);
	vTestCase2_xp := REAL_TO_ULINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b3f89439-41ca-4a6a-a947-360e8cb96ab8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_ULINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3354fa13-1f7f-4de6-ae30-80c9570fa2d4</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 105,
	Name := 'assertLess_ULINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a9c03178-b1b1-4e21-a173-18401ae3db39</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_REAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := 85.4;
	vTestCase1_xp := 115.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8a007554-47c9-40d6-adbc-dfed60b1bf7e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_REAL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>49e0df94-6761-4efc-a7cd-95cb77062522</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := 115.4;
	vTestCase2_xp := 85.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e92afdf6-fa6d-45c3-a336-b56733d4794c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_REAL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cec7d3c9-5166-4263-9ebe-e9dc3b0da551</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 106,
	Name := 'assertLess_REAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>3c0ee0dc-ccae-440a-8640-27e74f653110</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_TIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_TOD(115.4);
	vTestCase2_xp := REAL_TO_TOD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>df068571-abc1-42b7-bacb-271854501e8b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_TOD(85.4);
	vTestCase1_xp := REAL_TO_TOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9b1b606e-0aff-46e5-8055-e68bdcced72c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_TIME_OF_DAY(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2d59bd4c-e840-49e2-bfc8-4c7e4e537ee8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_TIME_OF_DAY(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>08a42f82-f638-4351-81ff-cb5e67865096</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 114,
	Name := 'assertLess_TIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b7d5eff5-61a8-48f6-b6b8-5dbc507047b1</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_LREAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LREAL(115.4);
	vTestCase2_xp := REAL_TO_LREAL(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1cb1d497-4a0d-4228-8867-97c0fade8605</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LREAL(85.4);
	vTestCase1_xp := REAL_TO_LREAL(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a75a27de-8544-4265-ae25-bce72d46249b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_LREAL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f2496647-4be2-423f-9706-bedf706259c4</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_LREAL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3d2a56ee-f1bd-4543-a486-dddf5147629c</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 107,
	Name := 'assertLess_LREAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>73f3bfd4-911a-4c02-b994-5793fb5a7b51</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_BYTE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_BYTE(85.4);
	vTestCase1_xp := REAL_TO_BYTE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>609e2753-ec1d-435a-aa74-92bf6921cc69</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_BYTE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>95c18762-f1af-4913-ae39-bed9fe68841c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_BYTE(115.4);
	vTestCase2_xp := REAL_TO_BYTE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>fcf16d66-6b20-4067-9273-b9e8d0038d61</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_BYTE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c81e836e-2c4b-40f3-9057-8176cb611a0b</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 94,
	Name := 'assertLess_BYTE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b420a53c-0fd4-4bab-8b8a-fcb464bb1fc1</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_UINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_UINT(85.4);
	vTestCase1_xp := REAL_TO_UINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d56d34b3-f7d9-4e1d-95cf-28f2d31869db</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_UINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4b6ad217-4b80-46b1-9074-3a6df08656df</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_UINT(115.4);
	vTestCase2_xp := REAL_TO_UINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>26255306-0a69-4402-a17e-07f37b0f7898</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_UINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>03ac9bbc-3cf1-4b45-9e66-ae92e5b0516b</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 101,
	Name := 'assertLess_UINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>89a6aa6d-db01-4bba-9249-4fb89d9b8313</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_DWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_DWORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5309d8f0-c312-4c92-b3bc-3797f878f112</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DWORD(115.4);
	vTestCase2_xp := REAL_TO_DWORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c3c17d51-2eb0-4c16-aded-473e698df494</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_DWORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>20debbf6-09b5-4060-a947-82d7d0b914cb</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DWORD(85.4);
	vTestCase1_xp := REAL_TO_DWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c54b5d63-01e5-46b9-b3ab-daa38a820b5f</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 96,
	Name := 'assertLess_DWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>27eb4c1d-dbd2-47d4-9f14-ad372a5550dd</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_UDINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_UDINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8affbc98-8449-4689-81ba-f97217cd7e7a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_UDINT(115.4);
	vTestCase2_xp := REAL_TO_UDINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b6d1bdc2-08d7-41b9-9f39-cc52e2fc5305</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_UDINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>979d64fe-2eb2-4a0f-a547-c0c116bf3788</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_UDINT(85.4);
	vTestCase1_xp := REAL_TO_UDINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b87bed2b-34a7-4c89-845e-cf7bb5718659</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 103,
	Name := 'assertLess_UDINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>629c4cba-6d61-49e8-a826-2bc404f7e248</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_LTIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LTOD(85.4);
	vTestCase1_xp := REAL_TO_LTOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>83baaa01-3920-4d5e-9f8a-9fe0d63228ef</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_LTIME_OF_DAY(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2db9cdf7-dc2b-4482-aef9-1800738606d2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LTOD(115.4);
	vTestCase2_xp := REAL_TO_LTOD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a3f0900d-9d7f-4791-863b-75947d57989a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_LTIME_OF_DAY(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>aa2f207c-412f-4be2-a1ad-d486e861d5ba</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 115,
	Name := 'assertLess_LTIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9c573283-4eaa-42d1-b9c1-7a7ae6782d4a</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLess_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_TIME(85.4);
	vTestCase1_xp := REAL_TO_TIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a4001ba2-7d98-4505-9187-dde27933ee02</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLess_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b7678f68-b57a-4098-b847-6a157f37d571</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_TIME(115.4);
	vTestCase2_xp := REAL_TO_TIME(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e98b0578-3034-40a4-9aad-8d37303b2744</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLess_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ce683a3f-6554-4929-967f-208e3141bde5</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 108,
	Name := 'assertLess_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>5e44151b-a85c-4355-89b3-0d8901541a05</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_REAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_REAL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1ee13c89-f962-434f-91c8-ba9b7c928fd3</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := 115.4;
	vTestCase1_xp := 85.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ec46be3b-0eb1-440b-8ad9-b1a0b6f96234</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_REAL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7a283fd5-a05a-47d4-ba72-bab36cef8fbe</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := 8.4;
	vTestCase2_xp := 85.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b36f4b59-3e2b-4749-b919-a91a35de2d77</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 62,
	Name := 'assertGreater_REAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c50ab275-031d-4d0a-a2ad-8e27f4fbfcce</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_LDATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LDT(115.4);
	vTestCase1_xp := REAL_TO_LDT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>90fad89e-2796-4d0b-9b43-803ffad83bca</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LDATE_AND_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2ddf519f-9dff-4a71-8350-0f5dacc243ea</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LDT(115.4);
	vTestCase2_xp := REAL_TO_LDT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>95b9eb57-7e71-4caa-84d0-0dacb318337e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LDATE_AND_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5f3042b8-4ae0-4fb9-8169-e5839a2d9e35</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LDT(85.4);
	vTestCase3_xp := REAL_TO_LDT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>24da6ce6-ac60-4e5c-83d0-9ea9eaea5a6b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_LDATE_AND_TIME(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cfa5a71a-8918-4bbe-93c4-87236f70c006</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 91,
	Name := 'assertGreaterEqual_LDATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>98bf61f4-53f8-4359-a9e7-28a48c922e63</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_TIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_TOD(115.4);
	vTestCase1_xp := REAL_TO_TOD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>659bb12e-0750-447b-acc2-ea55164219f9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_TIME_OF_DAY(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c86442d4-e5f0-480e-974e-7e0b8ac400c0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_TOD(115.4);
	vTestCase2_xp := REAL_TO_TOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>66818f75-c6d9-42c3-875c-3f89d39f7955</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_TIME_OF_DAY(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f3c2624b-5019-4cd4-a746-9f778f26e1a2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_TOD(85.4);
	vTestCase3_xp := REAL_TO_TOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>58d4f64e-2f47-4d1f-b8a3-82d97b1fd5e2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_TIME_OF_DAY(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>58bf537a-5fbb-4202-b6b0-b2a49689ea00</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 92,
	Name := 'assertGreaterEqual_TIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>65cfddf6-490b-4898-b45f-ca31b3c5dff8</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_DATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_DATE_AND_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f642d275-eb47-436c-a372-fcb2b4acc5db</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DT(115.4);
	vTestCase1_xp := REAL_TO_DT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>57c95794-e890-472d-ad07-c7e3356acc7a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DT(8.4);
	vTestCase2_xp := REAL_TO_DT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d61cb9ca-6474-4115-9ae2-b3ef47593184</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_DATE_AND_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>68f38429-afe6-49eb-842d-3b1995bcb329</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 68,
	Name := 'assertGreater_DATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>4cb38885-8dca-4a2a-93cb-51ea097e575e</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_UINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_UINT(115.4);
	vTestCase2_xp := REAL_TO_UINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b5f751c1-8754-44f9-8c07-6b31d1f04a0b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_UINT(85.4);
	vTestCase3_xp := REAL_TO_UINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cc51c530-6d60-47e1-9259-106b276f93e7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_UINT(115.4);
	vTestCase1_xp := REAL_TO_UINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>385661fa-7f70-45ca-9274-98e05ca07812</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_UINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>be3fd084-c021-49db-a95d-5ad87afef352</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_UINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c4718a39-48fb-48e9-a14b-dc157518d323</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_UINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0dba1d73-40a2-433a-89ea-2b70d85d4390</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 79,
	Name := 'assertGreaterEqual_UINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>5d496bef-8ab3-4710-8aae-b21f5d44eaca</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_LINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>dc00c5e7-4c88-4de5-b76c-07e6f116e7aa</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_LINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6af8d29d-1f87-4630-b68d-486d60189378</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LINT(115.4);
	vTestCase1_xp := REAL_TO_LINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e386b3f4-ae69-4fef-b993-9a6d130807f7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LINT(115.4);
	vTestCase2_xp := REAL_TO_LINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>df08dcd1-8091-404a-8356-898330075d99</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1f7e38c1-789c-4719-ace9-b45c43c4a71c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LINT(85.4);
	vTestCase3_xp := REAL_TO_LINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d20efac1-ae0a-4c66-b2a9-55595e417055</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 82,
	Name := 'assertGreaterEqual_LINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a1218e9d-4942-446c-ad1d-027de1b01173</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_DATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_DATE_AND_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3212811b-5961-4fae-8db6-3c2a340cf0b4</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DT(115.4);
	vTestCase1_xp := REAL_TO_DT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>aaab1a4c-f1f5-44fc-84d1-72f343814573</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_DATE_AND_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>16737020-72b4-4f92-8c24-b9faba6acb24</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DT(115.4);
	vTestCase2_xp := REAL_TO_DT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b3d0a5d2-b262-47ed-9eac-13bfc551d70c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_DT(85.4);
	vTestCase3_xp := REAL_TO_DT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a27e37bc-4e78-4a27-acfd-2b2942aabfb3</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_DATE_AND_TIME(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cdb99bb2-240c-4a68-95df-51036dd9610b</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 90,
	Name := 'assertGreaterEqual_DATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>bb75ad7e-a069-43d0-9c1f-64fee435e57c</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_LDATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_LDATE_AND_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d99821e7-42d7-48b1-abe2-11739ec18752</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LDT(115.4);
	vTestCase1_xp := REAL_TO_LDT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5b0d40c9-ddd3-4728-bc18-c3a6e1502067</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_LDATE_AND_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>25f5fe6e-8707-44d7-88c5-8723c8a92134</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LDT(8.4);
	vTestCase2_xp := REAL_TO_LDT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c4146f0e-bb33-4d39-b954-7d9062a5b447</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 69,
	Name := 'assertGreater_LDATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9706db70-7ced-4532-a1e0-e55efd4fb6d3</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_LTIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LTIME(115.4);
	vTestCase1_xp := REAL_TO_LTIME(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6acb63ff-4106-4a6e-ba30-50d8b1f310a6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LTIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1a446ac1-1a45-4a80-b2c5-93e24c7df37e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LTIME(115.4);
	vTestCase2_xp := REAL_TO_LTIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a666fbf0-2eef-4245-8ab3-8e0541bcc1db</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LTIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ab7e84b5-963a-4e3a-a243-6c2e331371f6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LTIME(85.4);
	vTestCase3_xp := REAL_TO_LTIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5dafcaf2-0819-4c3c-8e83-7f64c1fdfac6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_LTIME(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5858a0a6-eb90-4a24-9404-c1578f4c581d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 87,
	Name := 'assertGreaterEqual_LTIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b30fb9db-9fe0-43a6-bd82-bd3a623c6a07</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_DATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DATE(115.4);
	vTestCase1_xp := REAL_TO_DATE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b4aee878-34d2-4ff8-94c2-ffd4e43edf34</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_DATE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8dc8232c-3378-494b-bc97-67269108e79c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DATE(8.4);
	vTestCase2_xp := REAL_TO_DATE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>fa5a4159-46a6-4f47-b845-6efcdeffa8d3</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_DATE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>73700fe4-2125-4fee-b14c-dca1ba2d3580</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 66,
	Name := 'assertGreater_DATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>2c6612e1-f4f3-4f6d-b86a-d85d0d43c246</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_TIME(115.4);
	vTestCase2_xp := REAL_TO_TIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1ff53f62-de00-442f-89e7-79635cfe93f8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_TIME(85.4);
	vTestCase3_xp := REAL_TO_TIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7a2bb34d-2396-477e-a0d7-ea678507551c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>df79dd72-e640-46c1-a63c-320b1dbd0a64</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_TIME(115.4);
	vTestCase1_xp := REAL_TO_TIME(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e8a0d0c8-31d5-4883-84c9-4c831215d165</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0c57ee5c-54cd-496d-af38-9979c662dab7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_TIME(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>11f0a369-be11-4afc-9799-654b16f7ab33</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 86,
	Name := 'assertGreaterEqual_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>1f27e5da-6073-43e3-9b08-fad9ac802b5c</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_WORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_WORD(115.4);
	vTestCase1_xp := REAL_TO_WORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>316a6a07-10ea-401d-9a5a-1ccd683d4d3e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_WORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5b840218-dfd3-4935-b6dd-07b9328b3527</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_WORD(115.4);
	vTestCase2_xp := REAL_TO_WORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7f92c62e-9b8f-49ed-8754-a26a5c1cefb9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_WORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>34682551-10a7-4127-8fc5-464ab59ccb68</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_WORD(85.4);
	vTestCase3_xp := REAL_TO_WORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e261f665-d6e8-4d3a-92a9-6c56e46f47e7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_WORD(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>39ba6356-ba98-4030-a485-c004db02ee32</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 73,
	Name := 'assertGreaterEqual_WORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>868c2a40-9583-431a-b162-fc3318f7359c</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_LDATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LDATE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6ccb6d74-977a-49ab-8705-219b353bac31</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_LDATE(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>450640dc-e5ef-4865-9cc8-39d822c6c313</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LDATE(115.4);
	vTestCase2_xp := REAL_TO_LDATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>68d89e49-ab43-43c6-9003-70e3bb673183</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LDATE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f84bda19-578d-493e-862c-c62beaaf76ca</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LDATE(115.4);
	vTestCase1_xp := REAL_TO_LDATE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7a9a92a3-50d0-4ddc-b12b-9104964c1f9c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LDATE(85.4);
	vTestCase3_xp := REAL_TO_LDATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ba88e307-fa2a-458b-a437-16f0f7adad93</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 89,
	Name := 'assertGreaterEqual_LDATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>2810d07f-3545-46ad-a7be-5349a0b50857</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_DINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DINT(115.4);
	vTestCase1_xp := REAL_TO_DINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6e9e8d8d-5309-4707-8637-00f2be9fe061</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_DINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6ade7470-6a4c-47df-bbf1-ef68053190d4</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DINT(115.4);
	vTestCase2_xp := REAL_TO_DINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>758c1a84-8050-493b-b736-fef020cf8a51</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_DINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>99028066-dd6e-4f7c-aa23-8b77b46ccf66</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_DINT(85.4);
	vTestCase3_xp := REAL_TO_DINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c5fa3626-d24b-4ce9-acaf-244905ecac64</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_DINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3c917070-7723-4e8c-ad8f-80e74452c394</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 80,
	Name := 'assertGreaterEqual_DINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>2c9322b5-efd1-41a8-9199-938b84584610</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_LWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LWORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3ff1696d-7dbf-4a51-9c2f-7c58188f831f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_LWORD(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>46e85ea3-a882-4dec-977c-9af3cca589a2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LWORD(115.4);
	vTestCase1_xp := REAL_TO_LWORD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f0339bd3-64a0-459e-89eb-f6dc7757d000</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LWORD(115.4);
	vTestCase2_xp := REAL_TO_LWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5d327d8c-d40e-4d58-8b77-d247a593d22d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LWORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>04c6ac78-6bc9-4624-84a9-6c38bb80fef4</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LWORD(85.4);
	vTestCase3_xp := REAL_TO_LWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>44399fb9-51fa-4f4c-b34f-c652edfef78d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 75,
	Name := 'assertGreaterEqual_LWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>f4977387-e2ea-4acc-80d8-c122f9a576af</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_ULINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_ULINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6d03eadb-c1f4-4107-aaae-88dc1b564111</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_ULINT(115.4);
	vTestCase1_xp := REAL_TO_ULINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c9e19721-95de-48f4-8de3-ae10c84dfffd</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_ULINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4364aa45-3141-47fe-b0f0-e8a50b619ce0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_ULINT(115.4);
	vTestCase2_xp := REAL_TO_ULINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9b8b786e-ce8e-45d6-8552-0b754e430903</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_ULINT(85.4);
	vTestCase3_xp := REAL_TO_ULINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>45d2064e-d4b2-46a6-b1b3-d790287f61df</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_ULINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e985fccd-5b22-4985-b7bd-aac58cd4bac7</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 83,
	Name := 'assertGreaterEqual_ULINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>f2b8c297-3a34-48b4-9802-baf38442608b</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_SINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_SINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>73281bd8-226f-459e-84ac-ca4c12820a13</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_SINT(115.4);
	vTestCase1_xp := REAL_TO_SINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c1e293d7-b369-4bef-9f6b-2af025114488</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_SINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>be867626-19ca-411c-a896-7780b3c78d03</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_SINT(115.4);
	vTestCase2_xp := REAL_TO_SINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>55644e47-d48c-4ce6-9fc7-9984507b0dea</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_SINT(85.4);
	vTestCase3_xp := REAL_TO_SINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6209f458-2d0c-4532-8d00-c4dfc5d646aa</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_SINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>98060288-22f4-4d08-90b0-43b002085445</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 76,
	Name := 'assertGreaterEqual_SINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>eca63660-49f0-4b58-a812-21db1d6df86f</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_LREAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LREAL(115.4);
	vTestCase1_xp := REAL_TO_LREAL(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3cd15dff-ea3e-4a49-ab7f-9d0e42c1c9a5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_LREAL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b81899b5-67c6-4d09-8066-be6f9d46729b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LREAL(8.4);
	vTestCase2_xp := REAL_TO_LREAL(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5de9fbbb-27d5-4693-ba91-6e837ee0c750</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_LREAL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1bacc4f1-37f1-4259-be8d-20b0bbbae0e2</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 63,
	Name := 'assertGreater_LREAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>3454fba9-0554-4f6d-bb14-e1dd3b4969fd</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_TIME(115.4);
	vTestCase1_xp := REAL_TO_TIME(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>467e4be0-b75c-4592-923e-7cb99fb74b97</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>932c0c6a-7fcb-4928-a735-fbb281d2c25d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_TIME(8.4);
	vTestCase2_xp := REAL_TO_TIME(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>aecfd39d-9a5d-4c48-9c86-fd7acf80443a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>87df0c21-f352-4c4b-bfda-4969616a9451</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 64,
	Name := 'assertGreater_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>d4ceeca5-9cfa-406e-8218-36c0b1f2bb34</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_TIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_TOD(115.4);
	vTestCase1_xp := REAL_TO_TOD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3fcc63a3-e791-49a0-ae29-202866b0cc69</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_TIME_OF_DAY(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d8106646-1fd4-41db-a300-cb700392d1c4</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_TOD(8.4);
	vTestCase2_xp := REAL_TO_TOD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>305e205c-251a-471e-8555-b0190945dfb5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_TIME_OF_DAY(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ded86fd6-2256-4d52-8e20-d9ed9bb2848d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 70,
	Name := 'assertGreater_TIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>ba4b1893-b222-420f-804d-d6d4b4881ac1</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_LTIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LTOD(115.4);
	vTestCase1_xp := REAL_TO_LTOD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a9a58c52-33ce-4181-895c-b3ed587149b6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_LTIME_OF_DAY(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ab01cbcf-94fa-42cf-95ad-7ed870668ec6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LTOD(8.4);
	vTestCase2_xp := REAL_TO_LTOD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>411965d3-4a92-4d84-b1b1-b5bd515b87c6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_LTIME_OF_DAY(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9fbdd3bc-6510-4384-9e6d-5eaa8f517737</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 71,
	Name := 'assertGreater_LTIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c09a6823-4144-40c0-ba86-9056a9cbf663</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_LTIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LTIME(8.4);
	vTestCase2_xp := REAL_TO_LTIME(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>85a920ec-c5ec-4c42-9a38-54969b62fd0b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_LTIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>da868263-3e4b-4a22-9703-67778b56145d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LTIME(115.4);
	vTestCase1_xp := REAL_TO_LTIME(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0aab01c6-4815-453a-bb7d-5a85f6a82a44</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_LTIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8a885b2e-8e85-4a38-98ff-16f196ba2ff1</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 65,
	Name := 'assertGreater_LTIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>28e1d04e-946d-4fa0-8931-5b4f7ef89bfe</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_BYTE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_BYTE(115.4);
	vTestCase2_xp := REAL_TO_BYTE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d704261c-d4ec-4f76-9044-c886a83a1ff0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_BYTE(85.4);
	vTestCase3_xp := REAL_TO_BYTE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>72636de6-b4bd-48dd-8ff8-ee937c1578b8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_BYTE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3518305a-0c70-4670-87f1-e5507be59603</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_BYTE(115.4);
	vTestCase1_xp := REAL_TO_BYTE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>39baca9c-7f33-425a-8c37-3fd804f8ba6c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_BYTE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>873cdfdb-cd58-4531-9f6d-bb22740b1cfa</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_BYTE(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d829a614-7874-43a3-b0ec-9d9e2f78fa7d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 72,
	Name := 'assertGreaterEqual_BYTE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>eadc4ad0-0c66-4d6e-9f39-a5c513bc3ca9</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_REAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := 115.4;
	vTestCase1_xp := 85.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1e539053-bd75-41f4-92a6-fe4384f313ab</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_REAL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8fe88904-95c9-4edb-9912-bfd2edc59295</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := 115.4;
	vTestCase2_xp := 115.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f697a700-5a14-43bb-b912-021a235f4efa</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_REAL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d228a11c-77f1-40ac-a0d7-2f85f751558a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := 85.4;
	vTestCase3_xp := 115.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4887bc7d-7adb-4ba1-91bc-d32876dca2c0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_REAL(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5e7c08dc-9065-4678-a550-9ea8e8eb0b4a</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 84,
	Name := 'assertGreaterEqual_REAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>bbd9f9ce-b019-4ffe-b7f7-1ac81c45ca21</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_LREAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LREAL(115.4);
	vTestCase1_xp := REAL_TO_LREAL(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b91b1d50-3266-4b4a-b066-5e8bd623e163</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LREAL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b98d24fb-cd08-40b8-9d64-f7a81c5f76e7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LREAL(115.4);
	vTestCase2_xp := REAL_TO_LREAL(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>befd677a-e7eb-4834-b811-600d6189c138</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_LREAL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5ec05ab3-d4c8-477a-bf88-5c6973f3feec</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LREAL(85.4);
	vTestCase3_xp := REAL_TO_LREAL(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7d011dad-0aef-455d-81b5-451052e6c899</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_LREAL(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b7845596-548c-4e88-826c-a6616ade078b</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 85,
	Name := 'assertGreaterEqual_LREAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9e2efdea-d559-4d26-beb5-b1e44d408ad0</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_USINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_USINT(115.4);
	vTestCase1_xp := REAL_TO_USINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1952972d-a260-4533-8bdd-f6cbefff1530</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_USINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1dc5c3db-6d14-4baf-b1e8-3f71f2fc2763</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_USINT(115.4);
	vTestCase2_xp := REAL_TO_USINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>23a435fe-0082-4d4c-a11b-2dc7fef5339b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_USINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>db9c191d-9286-4e16-bd54-8a5232cedaad</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_USINT(85.4);
	vTestCase3_xp := REAL_TO_USINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>09b8c0d1-aac3-426e-88b0-2b7407fca7d2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_USINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1a0c7789-50be-4bb5-963e-1942f7eeb97e</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 77,
	Name := 'assertGreaterEqual_USINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>158e7dff-4428-4745-bc20-cb18540712eb</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreaterEqual_INT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_INT(115.4);
	vTestCase1_xp := REAL_TO_INT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0f910ca9-8c2f-4bdd-b9e0-f215b5c43661</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_INT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>68d79724-5f7a-43f5-a52c-932479dc64bc</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_INT(115.4);
	vTestCase2_xp := REAL_TO_INT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ee193594-d2e0-462e-b105-c2127e5dc882</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreaterEqual_INT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a09a44a4-6807-4cc5-8a9e-9fe603cf9d7b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_INT(85.4);
	vTestCase3_xp := REAL_TO_INT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>db5cb5f0-5ab4-4af4-baf0-0849b17ee9ab</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreaterEqual_INT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>aa2f323a-e64e-4ef8-a748-19ee68a7748d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 78,
	Name := 'assertGreaterEqual_INT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7fee85ad-2a3f-4d86-94a5-c87589540b25</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_WSTRING" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <wstring />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <wstring />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <wstring />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <wstring />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_WSTRING(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_WSTRING(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f82a9465-8216-428e-a4f2-b353c45bb82c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_WSTRING(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0449e07c-739b-49e0-8d41-64867a7cf8e9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_WSTRING(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_WSTRING(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9128e895-31e1-4fa0-86ad-60a5b7ab8ff1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_WSTRING(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1d3abfb0-a069-4508-9319-685559cdc75c</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 154,
	Name := 'assertArrayEqual_WSTRING',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>af6d6f85-ca27-4693-a0e0-5f9fee8b9b4a</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <TIME />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <TIME />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <TIME />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <TIME />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_TIME(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_TIME(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>62ca2df1-4a52-4e6e-8967-44e30ae4a50a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_TIME(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>822bbc77-645d-4708-a1a1-27876b99b357</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_TIME(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_TIME(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>478991e7-d6d4-4479-bf13-782290e74f7e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_TIME(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c283dce0-c7af-4f84-874d-0d399e4a9c16</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 155,
	Name := 'assertArrayEqual_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>fb4e0829-d71b-4c21-96cf-9012a35aac04</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_LDATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LDATE_AND_TIME" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LDATE_AND_TIME" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LDATE_AND_TIME" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LDATE_AND_TIME" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_LDATE_AND_TIME(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>746fecfa-ca06-474d-bada-e4a1588886e9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_LDT(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_LDT(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>836cc28d-770f-47b9-ae99-bcaa9d98e69b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_LDATE_AND_TIME(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c3e06caa-2a4f-45b8-9458-c97e9e8301cf</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_LDT(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_LDT(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5d05053d-af21-4400-bd1b-107d75cf5f18</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 160,
	Name := 'assertArrayEqual_LDATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>02a6b688-2341-4c64-8aea-2eb31e6a9b80</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_TIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <TOD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <TOD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <TOD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <TOD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_TOD(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_TOD(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8bc8d275-c49e-48ad-a650-ffcef8f2f6cc</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_TIME_OF_DAY(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>be2b1157-de83-4377-8c4b-40db80db7bcb</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_TOD(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_TOD(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>aa0bf1cd-d4a6-42de-8720-916aef6b44ab</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_TIME_OF_DAY(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a1ea7b7c-814c-449e-9dbf-54e4872d2f2d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 161,
	Name := 'assertArrayEqual_TIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>17f9e6f7-aa31-4c93-b0ec-888bc6deca39</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_LTIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LTIME_OF_DAY" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LTIME_OF_DAY" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LTIME_OF_DAY" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LTIME_OF_DAY" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_LTOD(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_LTOD(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>25b5b6b8-1e4f-4873-ba8d-cf54b42e8455</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_LTIME_OF_DAY(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>73e9d36e-f403-408c-acca-5dc4d3988549</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_LTOD(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_LTOD(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>277453ff-0af7-4d9f-a634-bff472f9ebe9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_LTIME_OF_DAY(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>42c4a8a3-88a9-49bd-9462-01a8e982ab17</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 162,
	Name := 'assertArrayEqual_LTIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c2c608d0-d26f-4c1b-a953-1fabce74e52f</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_DATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_DATE_AND_TIME(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6f88ea9d-0757-4c45-90b4-0d9429f5e0e2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_DT(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_DT(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>168b10a6-0013-48ca-918e-e01cb1d54bd8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_DATE_AND_TIME(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>34a353d7-85fb-4ebc-8fe8-7d78da0364a8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_DT(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_DT(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>647d75d7-7e94-4cac-95db-55abae516b26</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 159,
	Name := 'assertArrayEqual_DATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a339fb1f-5ae0-43c7-a637-a82d08380008</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_LTIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LTIME" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LTIME" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LTIME" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <derived name="LTIME" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_LTIME(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_LTIME(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a9073844-314a-4756-ba95-c5666489fff5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_LTIME(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_LTIME(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>227df6c2-3066-4436-bfe4-5089992b20da</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_LTIME(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5c8e818f-2f56-4304-8d04-fcac83e820ac</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_LTIME(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5ddb5ea8-d02a-4dc8-8994-c240caa78562</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 156,
	Name := 'assertArrayEqual_LTIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>24b84290-2d21-434a-a185-2b8483523251</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertTrue" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN CONDITION IS FALSE';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the condition is FALSE';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := FALSE;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4911b50a-0c1a-43a3-b965-2f6e62203d47</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN CONDITION TRUE';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the condition is TRUE';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := TRUE;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f09d9a88-445b-4a08-85a4-fed610de1139</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertTrue(vTestCase1_act) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Condition was True and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Condition was True and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e54925b4-beb7-48bb-b03a-0142deea7331</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertTrue(vTestCase2_act) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Condition was False and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Condition was False and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>402053ea-a0a7-4847-a3d5-6390f1df3fa1</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 163,
	Name := 'assertTrue',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>91eea282-145f-4dfe-9131-e958b6e99dae</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_DATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DATE />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DATE />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DATE />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DATE />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_DATE(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_DATE(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>16fd15fe-0d5b-4f2c-9998-e2548a9f3c9c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_DATE(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1a1aa046-8a44-4603-bf61-90219a0b8083</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_DATE(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_DATE(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c2acc507-3eef-4428-a930-3167be7357bd</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_DATE(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2d17d2dc-baed-49ec-af95-2e34b0c98303</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 157,
	Name := 'assertArrayEqual_DATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>379a0ec1-a7fc-4801-a344-80f5dd5be573</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertFalse" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN CONDITION FALSE';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the condition is FALSE';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := FALSE;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2a893200-fffd-4531-abe5-711cc6ecd73b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertFalse(vTestCase1_act) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Condition was False and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Condition was False and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d0c0131f-018e-456f-87ab-b3aa73240a3f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN CONDITION IS TRUE';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the condition is TRUE';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := TRUE;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8a33d650-f05b-4aeb-9b8d-fc9e098f21bc</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertFalse(vTestCase2_act) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Condition was True and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Condition was True and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9e773640-ef4e-4981-95a0-6a92a8b21cf3</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 164,
	Name := 'assertFalse',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>914d4f2f-e337-404e-9f9b-59963077a1aa</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_DINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_DINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9058f19e-8781-452f-8023-bf4f0e359b00</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_DINT(115.4);
	vTestCase3_xp := REAL_TO_DINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>842127e9-446d-4dd0-b6d7-0b588bd7ff72</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_DINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>12f3daec-0271-4264-a9c8-d76059970066</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DINT(85.4);
	vTestCase1_xp := REAL_TO_DINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b81ae9e2-bd9d-42ec-a80e-6b0f8f633c1c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DINT(115.4);
	vTestCase2_xp := REAL_TO_DINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a3aef842-f330-478c-b659-7e2cfab6c671</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_DINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>af9e4e24-4874-4ad2-8577-5968fe06b4a3</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 124,
	Name := 'assertLessEqual_DINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>d8017ac0-f746-4661-9047-26087ea3e515</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_STRING" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <string />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <string />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <string />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <string />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_STRING(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3725fc7d-e12d-43b4-b8e8-6355aac299d0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_STRING(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_STRING(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>accc732f-8a52-4929-a156-66279f052ee2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_STRING(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>602df0f0-c76b-4f4f-a7d7-9d0b04ae34f2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_STRING(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_STRING(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b1ecb702-d636-4dba-ae00-dab9e439781f</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 153,
	Name := 'assertArrayEqual_STRING',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9cbbb496-48f3-496f-b414-cffc82308603</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_LREAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LREAL(115.4);
	vTestCase3_xp := REAL_TO_LREAL(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3ffdc7a7-4181-4a50-8de1-9f6175e5f75a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_LREAL(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>93458f92-eb68-4d13-937d-5c09c85cefe2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LREAL(85.4);
	vTestCase1_xp := REAL_TO_LREAL(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cc49f97f-04e5-4428-8c2d-840033b3af14</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LREAL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e2764602-4254-4683-9623-9fb0c6da93f5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LREAL(115.4);
	vTestCase2_xp := REAL_TO_LREAL(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b458d642-d88a-45ad-be8b-a28c232b7bb6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LREAL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d0065f5a-5ab2-41aa-a2ce-63ced9058fb2</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 129,
	Name := 'assertLessEqual_LREAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>5f082690-4777-456f-b42c-1a7bcc61aca1</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_WORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <WORD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <WORD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <WORD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <WORD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_WORD(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_WORD(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e8bf11b4-afa0-452d-b88a-9b81d2af445d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_WORD(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>812e4529-6c88-4021-a17f-0b8e39360488</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_WORD(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_WORD(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>85be9a67-b2fa-4db6-99ff-1af8223af248</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_WORD(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bb2ec78f-c35f-40a5-a331-cd5e3ffcfe95</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 140,
	Name := 'assertArrayEqual_WORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>721d1cb8-b8bd-4f66-8f84-1255127688ee</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_DWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DWORD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DWORD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DWORD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DWORD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_DWORD(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_DWORD(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bdb5e41c-af81-403c-a474-087a42472da5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_DWORD(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>90716512-4df2-4314-b0c9-fe236f70da79</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_DWORD(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_DWORD(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1ab1235d-4c40-4fc6-85ea-d32741540167</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_DWORD(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7dabc96e-9102-42d7-8d20-143551f2f2fd</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 141,
	Name := 'assertArrayEqual_DWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>4e4c8496-04c4-466c-b7d7-a29b0f4c67e4</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_SINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <SINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <SINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <SINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <SINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_SINT(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_SINT(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>32f674ce-6150-45c6-8925-bdc1ad0a9f44</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_SINT(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3334fbe2-7e7e-45b5-a87d-8a79079fbb45</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_SINT(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_SINT(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0f239d2e-1dac-4301-a874-1c2e554c2fc5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_SINT(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e2da7dd0-f850-4ef9-9a49-19caa0c9ae4b</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 143,
	Name := 'assertArrayEqual_SINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a6195ee1-2868-47ad-90e1-f22fe26a1b41</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_LREAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <LREAL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_LREAL(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a1544c03-1d2c-4a2c-8753-ed4da4c73082</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_LREAL(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_LREAL(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>11418322-1192-44c2-a9c5-eca384090831</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_LREAL(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3291680e-cd77-4552-a043-1facacd2a7c3</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_LREAL(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_LREAL(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3631523d-475b-4ff7-99f1-01ce9f6668df</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 152,
	Name := 'assertArrayEqual_LREAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>810250d1-d13c-46d8-bc72-21bb2df61359</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_LTIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LTIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3d48955a-205e-442f-b82b-aa63df3f33a8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LTIME(115.4);
	vTestCase3_xp := REAL_TO_LTIME(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>da76c62a-855f-4131-a378-a6dd29b4a3f8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_LTIME(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>293dac9b-94cb-42aa-936e-a7b449024ae2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LTIME(85.4);
	vTestCase1_xp := REAL_TO_LTIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b168eca4-3d39-45ea-9bf8-1bc14d6043f7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LTIME(115.4);
	vTestCase2_xp := REAL_TO_LTIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>11305b17-f251-40a1-965a-336790e9dd6f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LTIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>14d46343-f17d-4d62-a5fe-c0208af58dd9</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 131,
	Name := 'assertLessEqual_LTIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>3998e41e-bce9-4843-8934-35860be72988</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_LINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <LINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <LINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <LINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <LINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_LINT(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_LINT(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>50cbd339-911c-431c-af19-efa366116a34</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_LINT(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_LINT(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3380ba46-f1c2-455a-af76-410537cb3dd0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_LINT(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>77ce3548-a5e0-4051-bf19-2307d6c8c608</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_LINT(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e7a90cdc-7723-4a04-a892-f2c65003f5e5</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 149,
	Name := 'assertArrayEqual_LINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>69e13355-b3eb-41fe-ab8e-62fbda7e02cd</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_REAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := 115.4;
	vTestCase2_xp := 115.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>33988cc7-8377-4a27-9dd3-60385a447614</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := 115.4;
	vTestCase3_xp := 85.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4afb1cc3-52f7-4ef8-8b7a-e5440829180b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_REAL(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5b9f6421-df48-4026-a4ed-68477fccf290</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_REAL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>252cc4b0-d883-445e-8221-13660ea9ad26</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := 85.4;
	vTestCase1_xp := 115.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c6c73c24-8940-47ab-a86b-d09f75cfefa3</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_REAL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>005134cc-766b-41e9-801c-6277ab5a41b3</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 128,
	Name := 'assertLessEqual_REAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>08f87694-69a6-4f7d-b5a1-00cd7fed17d9</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_DINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <DINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_DINT(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_DINT(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>66bd9dc2-425d-41cd-ab6c-0b2787c596f3</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_DINT(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>48e4fc7d-fd59-4d87-a238-6269f0c728d4</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_DINT(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_DINT(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c46f9dcf-533c-4fb6-bf5c-2007a4df5a3f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_DINT(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5c8a56d3-f567-4c76-a47f-70a3de06858f</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 147,
	Name := 'assertArrayEqual_DINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>2665dc8b-0010-4724-83fb-e807204594be</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_UDINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <UDINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <UDINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <UDINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <UDINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_UDINT(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_UDINT(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>989d72e0-c524-4dca-9bca-b0104c79bdee</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_UDINT(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cdf97dde-6324-42fa-a9bf-527ad354bb6a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_UDINT(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_UDINT(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>245c0565-0bce-403d-a1a1-0c59ff210b5d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_UDINT(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>abee2395-e692-471e-b472-c7f32e7e3541</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 148,
	Name := 'assertArrayEqual_UDINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>812fc96c-c150-414d-961c-beb691a2c1d2</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_LDATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LDT(115.4);
	vTestCase2_xp := REAL_TO_LDT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>77ceec41-4af2-42b1-94e3-59a62c99c126</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LDT(115.4);
	vTestCase3_xp := REAL_TO_LDT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>05bf76fd-747e-4791-977b-51f562641fee</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_LDATE_AND_TIME(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7368255a-1c0d-469e-af59-e900cbff09e6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LDT(85.4);
	vTestCase1_xp := REAL_TO_LDT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a3e66581-c690-469c-9267-fd0014227d19</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LDATE_AND_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ece50fdb-1e90-41f4-8c06-4ad337248f0a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LDATE_AND_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bdafbdb9-8ac9-4b4a-b04f-56ac0c306808</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 135,
	Name := 'assertLessEqual_LDATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c5441cef-f4a1-4ecd-904b-231a4eb41f51</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_ULINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <ULINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <ULINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <ULINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <ULINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_ULINT(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_ULINT(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d98d0265-5e8e-44d4-9ff6-0caad6e6a863</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_ULINT(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>72321aed-b489-47cd-aabc-dfcee207f0bf</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_ULINT(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_ULINT(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ad708e31-93bb-461e-9509-86e1bfa74c14</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_ULINT(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>03e4a271-9fba-4528-83b7-924cdd198947</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 150,
	Name := 'assertArrayEqual_ULINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a6a0e81c-3593-4c17-9028-d171b6f7f013</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_LWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <LWORD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <LWORD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <LWORD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <LWORD />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_LWORD(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_LWORD(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5cf22f50-202f-4fdd-b9c5-935f5db1f8b6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_LWORD(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d98bce77-92d5-420a-8f5f-c3476c062087</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_LWORD(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_LWORD(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5dc31caf-4fe5-4932-af83-0c79e536d2d3</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_LWORD(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c6b937a9-4ab5-4426-b6b1-e50b5053a93c</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 142,
	Name := 'assertArrayEqual_LWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>735ffdce-9eba-43a0-94fc-ad2989e2cb12</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_TIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_TOD(115.4);
	vTestCase3_xp := REAL_TO_TOD(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5a6af60e-6f23-4041-810d-977d2b2d1dca</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_TIME_OF_DAY(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2eba008a-8f68-4ca0-94de-a3d1b9ddd0c5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_TOD(85.4);
	vTestCase1_xp := REAL_TO_TOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>54635c2f-743a-4969-9780-f8582c7ccfc7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_TIME_OF_DAY(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0ea419e4-bc0e-4f45-b3d3-07b3bce9cee5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_TOD(115.4);
	vTestCase2_xp := REAL_TO_TOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>808e340f-813a-4d03-8e5f-a806e25882a1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_TIME_OF_DAY(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>efddfde4-a1d3-4f0a-9dd5-4fa38bf653be</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 136,
	Name := 'assertLessEqual_TIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>017214e0-3c76-4d3b-8958-a7f473d67fce</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_INT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <INT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <INT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <INT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <INT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_INT(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a8d09854-27b9-43eb-8afd-1ea6a4e83d93</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_INT(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_INT(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5420b4e4-c1e3-45c9-beaa-c3c435878ae5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_INT(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_INT(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>50ee4ada-ee5d-4fb5-8e02-aeb878a8ad99</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_INT(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9d9903d5-567f-4c99-804a-71f057f3adca</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 145,
	Name := 'assertArrayEqual_INT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>cfebe0b3-6f96-4e87-8a3b-737a578b778e</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_BOOL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_BOOL(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bc90b37a-2727-4fc5-ada6-bf8b2566eb67</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_BOOL(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_BOOL(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>cf409f9e-9a54-4172-a44b-a3c5a0bb1ee5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_BOOL(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_BOOL(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4777d98f-995c-4fe5-b97f-a371f481ac40</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_BOOL(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a81f1b68-170b-4d9a-8b57-1d632d823afa</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 138,
	Name := 'assertArrayEqual_BOOL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c8fa671a-0139-4897-8fbb-26f3a5879e06</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_UDINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <UDINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_UDINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1c14d70e-391a-40a1-bf09-a983cb0d9326</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_UDINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c85e4907-e81f-494f-8178-22eed4dc024d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_UDINT(115.4);
	vTestCase3_xp := REAL_TO_UDINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>df0a3e3c-a692-481d-9994-caab65738892</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_UDINT(85.4);
	vTestCase1_xp := REAL_TO_UDINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a11799dd-9899-4ab3-bd59-e7533f23c615</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_UDINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3910e1d7-c5b2-4921-a891-c429131b50bb</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_UDINT(115.4);
	vTestCase2_xp := REAL_TO_UDINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>60b63f27-08af-42a5-9bd2-1a685454fb8e</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 125,
	Name := 'assertLessEqual_UDINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8d503768-3d6c-4da5-825d-9afc1a3019c3</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_DATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_DATE(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>053e74de-ac72-4469-a151-5b9282ff69a1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_DATE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0b9fb26b-98cb-4341-9284-5653b14037d5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_DATE(115.4);
	vTestCase3_xp := REAL_TO_DATE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4a40e8ab-fe56-4029-ad18-1a21f85cd50c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DATE(85.4);
	vTestCase1_xp := REAL_TO_DATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a010fe65-4c31-4dad-af45-cae3cce85b07</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_DATE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>71acef98-5d1f-4c60-a880-ace46ce90c6b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DATE(115.4);
	vTestCase2_xp := REAL_TO_DATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>96f8462d-766c-4056-a84e-008c5638a4ed</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 132,
	Name := 'assertLessEqual_DATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>072a2590-7366-4f2a-ab31-055248e82c8c</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_LINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LINT(115.4);
	vTestCase3_xp := REAL_TO_LINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7568ee75-e790-4eb7-9d10-02751083973a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_LINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4f7bf296-5b24-49d7-bb1f-f4d106082a55</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LINT(85.4);
	vTestCase1_xp := REAL_TO_LINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>287ab8c1-3c5a-4b41-b2a3-bccc79cafab8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c3dad5e4-3388-49fc-97f0-70cb3d0ea0b4</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LINT(115.4);
	vTestCase2_xp := REAL_TO_LINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2a3675f3-3374-484d-b5d0-57202febaea3</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2bd7876f-f523-4d8f-be3f-60d4f338d40a</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 126,
	Name := 'assertLessEqual_LINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>27c00734-857d-4969-a333-127d75daba3c</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_ULINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_ULINT(85.4);
	vTestCase1_xp := REAL_TO_ULINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5bcf0fe2-c7ed-46aa-8146-ed9c1ec5bf92</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_ULINT(115.4);
	vTestCase3_xp := REAL_TO_ULINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>13822bc8-ced2-44f2-885f-f7875e9ff9d8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_ULINT(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7c0d35a9-390b-41c9-8c8e-8ffe6b5c98ce</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_ULINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>fa40aa0b-5de6-4233-8195-f1922bdea464</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_ULINT(115.4);
	vTestCase2_xp := REAL_TO_ULINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>04929df8-a203-450f-9a7b-9ed686d87085</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_ULINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7702ead8-6cfb-4650-bf73-d9819d49a361</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 127,
	Name := 'assertLessEqual_ULINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>ff0ae0d9-024a-40f2-be95-f88e21ac332f</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_LDATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_LDATE(115.4);
	vTestCase3_xp := REAL_TO_LDATE(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5b9aa5a0-1dd7-4eec-bf9c-f0312905b6e1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_LDATE(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2b88e75c-447f-48ab-bea7-52c7fd8a0b52</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LDATE(85.4);
	vTestCase1_xp := REAL_TO_LDATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ab8be805-2868-4ea6-ba1d-bc28d74a7268</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LDATE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>99866d01-3fc5-451d-b0de-4d039c721a46</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LDATE(115.4);
	vTestCase2_xp := REAL_TO_LDATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8cbc1295-8bec-4ed8-aa2a-d54a8cf5c7c8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_LDATE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>19aff925-50dc-4dbf-b5a3-b3cc73f1fe0d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 133,
	Name := 'assertLessEqual_LDATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b11202dc-b943-4529-aa42-32d08cc423ca</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertLessEqual_DATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase3_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 3</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is less than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DT(85.4);
	vTestCase1_xp := REAL_TO_DT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>480ee3df-fe77-4e8f-87d7-0b7bccdfe78f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[2].id := 3;
    vTestCases[2].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[2].desc[1] := 'Tests if the function returns False if the parameter act is greater than parameter xp';
	vTestCases[2].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase3_act := REAL_TO_DT(115.4);
	vTestCase3_xp := REAL_TO_DT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>875bca43-b9db-4da1-bf43-6e8c3d559b64</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_3_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[2].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertLessEqual_DATE_AND_TIME(vTestCase3_act, vTestCase3_xp) THEN
		vTestCases[2].state := utTestCaseStates.ut_PASSED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[2].state := utTestCaseStates.ut_FAILED;
		vTestCases[2].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d9d7df66-936c-4f88-a48b-ad78bb92df9b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_DATE_AND_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was less than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c5358337-68e0-4a22-9693-13c97c088c55</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT EQUAL TO XP';
    vTestCases[1].desc[1] := 'Tests if the function returns True if the parameter act is equal to parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DT(115.4);
	vTestCase2_xp := REAL_TO_DT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3195d216-47c2-4df7-8c4a-7d8f98f474b9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertLessEqual_DATE_AND_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was equal to xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>53bf377f-59c9-4fd5-9f4a-5ec6a788a8e9</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

TEST_CASE_3_SETUP();
TEST_CASE_3_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 134,
	Name := 'assertLessEqual_DATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c8a14f19-bd8f-4a07-a292-67cbbbc0fd53</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_UINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <UINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <UINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <UINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <UINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_UINT(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a28d1e25-5783-447a-b08a-fee69117f6b6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := 35 * BOOL_TO_UINT(i MOD 2 = 0);
		vTestCase1_xp[i] := 35 * BOOL_TO_UINT(i MOD 2 = 0);
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b9862653-365b-4697-8ac7-16a0c5335176</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_UINT(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>da110559-7a86-4b4f-b8e2-596044d9d424</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := 35 * BOOL_TO_UINT(j MOD 2 = 0);
		vTestCase2_xp[j] := 35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0);
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>238d3ad6-4784-4959-b95d-2e5628ad35d5</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 146,
	Name := 'assertArrayEqual_UINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9775d48d-6245-4b5e-a5d9-7bae2ceb7db9</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertArrayEqual_BYTE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <BYTE />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <BYTE />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <BYTE />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 3 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <array>
                          <dimension lower="0" upper="70" />
                          <baseType>
                            <BYTE />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Array data 4 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="i">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable i</xhtml>
                      </documentation>
                    </variable>
                    <variable name="j">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterator variable j</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertArrayEqual_BYTE(ADR(vTestCase2_act), ADR(vTestCase2_xp), SIZEOF(vTestCase2_act)) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Arrays were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Arrays were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ef378de1-d70a-4833-afae-13104ec37eb0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN ARRAYS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in arrays are identical';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	FOR i:=0 TO 70 DO
		vTestCase1_act[i] := UINT_TO_BYTE(35 * BOOL_TO_UINT(i MOD 2 = 0));
		vTestCase1_xp[i] := UINT_TO_BYTE(35 * BOOL_TO_UINT(i MOD 2 = 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c0570794-a57e-44a6-8cf6-8b010525f12f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertArrayEqual_BYTE(ADR(vTestCase1_act), ADR(vTestCase1_xp), SIZEOF(vTestCase1_act)) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Arrays were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Arrays were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>111457aa-0d65-46e9-a2d6-f5d71a2aa16a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN ARRAYS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in arrays are not identical';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	FOR j:=0 TO 70 DO
		vTestCase2_act[j] := UINT_TO_BYTE(35 * BOOL_TO_UINT(j MOD 2 = 0));
		vTestCase2_xp[j] := UINT_TO_BYTE(35 * BOOL_TO_UINT(j MOD 2 &lt;&gt; 0));
	END_FOR
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2107f429-67a2-415d-8516-48b040380d0d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 139,
	Name := 'assertArrayEqual_BYTE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>ae2e4109-44f2-496c-b69c-6b1d6bd5ee10</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_BYTE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <BYTE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_BYTE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>01718a40-f448-42ee-a629-1c64852a65f6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_BYTE(115.4);
	vTestCase1_xp := REAL_TO_BYTE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9eb9f66d-20f3-42fe-b340-581f65e585cd</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_BYTE(115.4);
	vTestCase2_xp := REAL_TO_BYTE(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>dc1f97b2-3736-419c-b4de-ca3f960b5feb</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_BYTE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e5acb689-701e-4208-9fcd-ac0eaca9b0eb</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 1,
	Name := 'assertEqual_BYTE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>722e9247-cbd8-41c8-8503-81cfafea6d45</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_TIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <TOD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_TIME_OF_DAY(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7d57c1b1-9042-4ed7-ab99-6dc871eb131c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_TOD(115.4);
	vTestCase1_xp := REAL_TO_TOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f92884d3-8ad0-45b1-8cd1-3ffe085e0347</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_TIME_OF_DAY(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c0a0e29b-5ff2-4a95-86bf-37dc6b973427</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_TOD(115.4);
	vTestCase2_xp := REAL_TO_TOD(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>45402fc8-c7cd-40f1-a508-0c0d0813e7e7</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 23,
	Name := 'assertEqual_TIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7bbc2e6a-cc44-4f6a-aa24-1c43cbe77cd6</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_LDATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LDATE" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_LDATE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>10b3143e-cf70-4d1e-8108-07b401a09ce8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LDATE(115.4);
	vTestCase1_xp := REAL_TO_LDATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ecdd8b71-5268-4a30-940d-98e9331dc4f0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LDATE(115.4);
	vTestCase2_xp := REAL_TO_LDATE(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1cc94e3a-ad22-4c53-ad6e-14da2da343d1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_LDATE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>29271fa6-e9c1-411f-a6c4-afca446adac7</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 20,
	Name := 'assertEqual_LDATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>d137a70d-91f1-44e8-be9a-171698d0bd5e</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_WORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <WORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_WORD(115.4);
	vTestCase2_xp := REAL_TO_WORD(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2d1ae020-a62b-46f1-aa3c-c10aa961027b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_WORD(115.4);
	vTestCase1_xp := REAL_TO_WORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4941d3da-6336-4376-90ed-eb3930856896</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_WORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4e607767-994f-4319-96f8-a8eb88a6edac</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_WORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>89218474-8e2a-4804-af1c-acf1aa0fb979</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 2,
	Name := 'assertEqual_WORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>0ec4c36d-38f6-4f7c-a5ad-d915c336a754</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_UINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <UINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_UINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5ee62036-ce3a-42c0-b73c-566525417695</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_UINT(115.4);
	vTestCase1_xp := REAL_TO_UINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7e716c93-8bf2-42c3-89db-90d381b9e706</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_UINT(115.4);
	vTestCase2_xp := REAL_TO_UINT(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>03327db6-b7ef-400a-bdb9-6f73d109efa5</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_UINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4db588eb-ef8a-48d0-bce2-97c69755d539</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 8,
	Name := 'assertEqual_UINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>adfc6f20-95eb-4a6e-9147-155664c16784</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_LWORD" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LWORD />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_LWORD(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6e47d5a2-9103-4ddb-86b2-e07298988718</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LWORD(115.4);
	vTestCase1_xp := REAL_TO_LWORD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3c8bc539-690c-475b-8cc0-cd5af0348870</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_LWORD(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>54e0f214-b1f1-408b-af91-ed32f7da934d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LWORD(115.4);
	vTestCase2_xp := REAL_TO_LWORD(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5cb1f38c-69db-4a11-8971-b838b3ddd90d</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 4,
	Name := 'assertEqual_LWORD',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b08d42f5-f8e0-4e3b-8f02-103d3c45790b</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_LDATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LDATE_AND_TIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LDT(115.4);
	vTestCase1_xp := REAL_TO_LDT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>be85ab40-e8f4-4b09-840a-7524c42e9c76</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_LDATE_AND_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ed068f6f-31d9-45ed-928e-bb05ee3e3762</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LDT(115.4);
	vTestCase2_xp := REAL_TO_LDT(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>031b0f06-31e7-4fe6-b8ff-e3c7b2fd9616</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_LDATE_AND_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2395b188-88d9-4d73-a9db-7a364189d7f0</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 22,
	Name := 'assertEqual_LDATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e4b9b918-ceb6-40b6-9b85-c857644d8052</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_LREAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LREAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LREAL(115.4);
	vTestCase1_xp := REAL_TO_LREAL(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>74c10472-c7e6-4598-ab83-662ec7e9853c</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_LREAL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>6405562f-4211-4aed-8466-85a6ac397195</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LREAL(115.4);
	vTestCase2_xp := REAL_TO_LREAL(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>22dc0f80-195c-49b7-a288-1e61c6851678</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_LREAL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b582884f-83aa-4325-847b-8fe236c8df4a</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 14,
	Name := 'assertEqual_LREAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e5524c93-3357-40b9-af28-29ff1f7ec5e7</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_INT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <INT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_INT(115.4);
	vTestCase1_xp := REAL_TO_INT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9b480200-95da-49fa-a48d-791676dac117</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_INT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>0c49d018-6609-4ee7-b122-140007646200</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_INT(115.4);
	vTestCase2_xp := REAL_TO_INT(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b100881b-e8ae-4630-9076-d169d80c61ab</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_INT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>95229472-2a55-4216-bd9f-9943d66347a0</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 7,
	Name := 'assertEqual_INT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>09cf7da5-aac5-401f-9f36-ae1c8b7a3f54</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_WSTRING" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <wstring />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <wstring />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <wstring />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <wstring />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_WSTRING(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1e9e3117-3c4b-479e-afb4-aeb7f6e9466d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_WSTRING(115.4);
	vTestCase1_xp := REAL_TO_WSTRING(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2cd9a492-7398-4a44-8de2-745fb93d1d82</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_WSTRING(115.4);
	vTestCase2_xp := REAL_TO_WSTRING(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9d1c4a1b-4da6-4305-8423-d6f875ae7c2b</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_WSTRING(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b3014730-2ddc-44ef-9445-dd5b2ac5a727</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 16,
	Name := 'assertEqual_WSTRING',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>421fa354-8c1b-42ec-80d1-e994c7c70f2e</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_LTIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LTIME" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_LTIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3aa549f9-54ff-4768-aad9-68fd2899cda8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LTIME(115.4);
	vTestCase1_xp := REAL_TO_LTIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2d9b4655-913c-4971-86d8-62647342822f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_LTIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b7d62cb7-4145-42db-ae67-2d474720e703</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LTIME(115.4);
	vTestCase2_xp := REAL_TO_LTIME(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bf0c354c-bdec-48e8-8735-d2802775d241</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 18,
	Name := 'assertEqual_LTIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>10fb4146-b59e-4da2-ad61-fa1103fb2aa0</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_ULINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_ULINT(115.4);
	vTestCase1_xp := REAL_TO_ULINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>b8c19a61-351d-44a2-bffb-c0169c4e5a99</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_ULINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f3ddc438-e13f-4518-8ca5-4e8537a798aa</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_ULINT(115.4);
	vTestCase2_xp := REAL_TO_ULINT(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1c65f95d-3eef-4e69-85bb-2f3c9ae067d2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_ULINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1f07c346-a9d0-454a-9ccd-1ec08b17ce95</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 12,
	Name := 'assertEqual_ULINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>88f95bcd-9d5b-48da-b5fd-b6bb09c87a0b</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_LTIME_OF_DAY" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <derived name="LTIME_OF_DAY" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_LTIME_OF_DAY(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7eb8b6bb-d4ee-4f01-acb1-c89859c6af1e</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LTOD(115.4);
	vTestCase1_xp := REAL_TO_LTOD(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>59b98b38-aa0f-483f-a9df-075556f19fc8</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_LTIME_OF_DAY(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>241edfdb-9f47-48af-805a-d196092c49e6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LTOD(115.4);
	vTestCase2_xp := REAL_TO_LTOD(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>2fe5187b-4725-47f7-8744-67017ac5f3d6</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 24,
	Name := 'assertEqual_LTIME_OF_DAY',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>06a05636-3ebd-4114-8c16-a94877b2c204</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_SINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <SINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_SINT(115.4);
	vTestCase1_xp := REAL_TO_SINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>58180554-90ab-4dd2-8ae4-36a2ddc32d6a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_SINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4bdd5034-e146-42cb-84dc-b48ff9cf79d7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_SINT(115.4);
	vTestCase2_xp := REAL_TO_SINT(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5e61549f-6781-4fe7-ad49-f50205ab516f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_SINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>13bef750-f6b1-4747-a76d-fc13553bda48</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 5,
	Name := 'assertEqual_SINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c9cf8318-d603-46a0-bde7-b9fd7ca7b34d</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_REAL" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := 115.4;
	vTestCase1_xp := 115.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>5b9b5c9c-728f-4065-8a6a-c58c09456509</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_REAL(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7e07583c-2aac-4b26-bc5d-243aeffcbd19</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := 115.4;
	vTestCase2_xp := -84.4;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3be4707b-087b-4354-ab80-b0e624f26833</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_REAL(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8f3ad222-b7d0-4ad6-ade8-b59cedee21b7</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 13,
	Name := 'assertEqual_REAL',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>48ec077b-d34c-4a13-b471-4458ca9540bf</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_DATE" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DATE />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DATE(115.4);
	vTestCase1_xp := REAL_TO_DATE(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>95e37719-bb19-4c0e-b0b1-d44c931d1ec9</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_DATE(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>821f344f-b866-4e2f-9223-147a6f11b787</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DATE(115.4);
	vTestCase2_xp := REAL_TO_DATE(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d375d4e8-a8de-4baa-82ed-956fa4d396e7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_DATE(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>4c10a2ce-6f5f-4580-9f61-ea63ef983f1f</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 19,
	Name := 'assertEqual_DATE',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7cfc05b8-ea71-49b6-aba6-9de259739266</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_DINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DINT(115.4);
	vTestCase1_xp := REAL_TO_DINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>47d7c598-79c4-4054-bcd3-5f87951da0e0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_DINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f2d42398-25c5-44f7-a2e5-8ba3133142a7</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DINT(115.4);
	vTestCase2_xp := REAL_TO_DINT(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>3e9a0153-e55c-4d7d-bb3f-7f2832b2b7c2</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_DINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8d01b435-fced-4c8e-af31-b0be826ad58e</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 9,
	Name := 'assertEqual_DINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>14423b4f-ca2b-4d60-a1e8-a3ba8c704d5e</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_STRING" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <string />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <string />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <string />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <string />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_STRING(115.4);
	vTestCase2_xp := REAL_TO_STRING(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>04cc2a85-9d0d-4707-ac1b-96e96a5fbd42</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_STRING(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>45e0598f-1cfb-4601-ba43-0767f0f40d36</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_STRING(115.4);
	vTestCase1_xp := REAL_TO_STRING(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>96af6e75-1e86-4c0c-9390-c8fe737d1353</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_STRING(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>43e809fa-d113-42b0-b5bb-7379a7237158</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 15,
	Name := 'assertEqual_STRING',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8bcfcd45-b108-4a22-bb2f-45463b692c44</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_DATE_AND_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <DT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_DT(115.4);
	vTestCase2_xp := REAL_TO_DT(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c1ea4ce0-208e-4a15-a84f-15c927c4706f</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_DATE_AND_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>11b113ae-560c-47cc-b527-83614283e0bb</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_DT(115.4);
	vTestCase1_xp := REAL_TO_DT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>053927d1-3099-4c40-a028-021e1f6e3730</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_DATE_AND_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>bbcea91b-334d-4b3b-855c-99fff2d26a08</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 21,
	Name := 'assertEqual_DATE_AND_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>5492a399-aab0-436c-abf7-a0ac7105a882</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_TIME" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <TIME />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_TIME(115.4);
	vTestCase1_xp := REAL_TO_TIME(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>7abcd480-a678-43ba-8d28-ffc3ea83db7a</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_TIME(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f199bd9c-c7f4-4e88-83d4-a176c1231227</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_TIME(115.4);
	vTestCase2_xp := REAL_TO_TIME(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>47dbfd4c-5d27-480d-babe-ec171a4fdf70</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_TIME(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>68b7ae8d-aaa2-43cf-a154-e571d63ec623</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 17,
	Name := 'assertEqual_TIME',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>5ed1b46f-2c1b-4860-992f-24abe0550b62</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertEqual_LINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <LINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETERS EQUAL';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the passed in parameters hold the same value';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_LINT(115.4);
	vTestCase1_xp := REAL_TO_LINT(115.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>e961b8c4-249a-4a7b-85a9-0e8d2002a0f1</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertEqual_LINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Passed parameters were equal and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>995b997c-abb4-44f7-a2a0-ea79297e3059</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
	vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETERS NOT EQUAL';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the passed in parameters do not hold the same value';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_LINT(115.4);
	vTestCase2_xp := REAL_TO_LINT(-84.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>f556f316-303e-43e8-a679-cf9844db65c0</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertEqual_LINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Passed parameters were not equal and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>9155a7a8-32af-4cd6-b84f-56d1c19dff17</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 11,
	Name := 'assertEqual_LINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>50414b26-6765-40f6-811d-910cc600a0f4</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="test_assertGreater_ULINT" pouType="program">
                <interface>
                  <localVars>
                    <variable name="vTestCases">
                      <type>
                        <array>
                          <dimension lower="0" upper="20" />
                          <baseType>
                            <derived name="utTestCase" />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Definition of all test cases for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="testRunner">
                      <type>
                        <derived name="utTestSuite" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test Suite fb instance to run the tests</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vRunAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to run all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vResetAll">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Manual command to reset all tests for this POU</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase1_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_act">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 1 of test case 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="vTestCase2_xp">
                      <type>
                        <ULINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Test data 2 of test case 2</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <actions>
                  <action name="TEST_CASE_1_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF assertGreater_ULINT(vTestCase1_act, vTestCase1_xp) THEN
		vTestCases[0].state := utTestCaseStates.ut_PASSED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned TRUE -&gt; PASS';
	ELSE
		vTestCases[0].state := utTestCaseStates.ut_FAILED;
		vTestCases[0].msg := 'Parameter act was greater than xp and function returned FALSE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>ddae08e9-672e-4511-8d81-ad20a553146d</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[1].id := 2;
    vTestCases[1].desc[0] := 'RETURNS FALSE WHEN PARAMETER ACT LESS THAN XP';
    vTestCases[1].desc[1] := 'Tests if the function returns False if the parameter act is less than parameter xp';
	vTestCases[1].desc[2] := 'PASS IF: Return value is FALSE';
	
	(*Setup needed variables*)
	vTestCase2_act := REAL_TO_ULINT(8.4);
	vTestCase2_xp := REAL_TO_ULINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>1e50e898-81da-4e21-be91-cd4495e10261</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_2_EXEC">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[1].state = utTestCaseStates.ut_RUNNING THEN
	(*Run the test case*)
	IF NOT assertGreater_ULINT(vTestCase2_act, vTestCase2_xp) THEN
		vTestCases[1].state := utTestCaseStates.ut_PASSED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned FALSE -&gt; PASS';
	ELSE
		vTestCases[1].state := utTestCaseStates.ut_FAILED;
		vTestCases[1].msg := 'Parameter act was less than xp and function returned TRUE -&gt; FAIL';
	END_IF
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>d8ed331a-0e7a-4888-bb7c-9a2f71448136</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="TEST_CASE_1_SETUP">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vTestCases[0].state = utTestCaseStates.ut_SETUP THEN
	(*Setup the test case information*)
	vTestCases[0].id := 1;
	vTestCases[0].desc[0] := 'RETURNS TRUE WHEN PARAMETER ACT GREATER THAN XP';
    vTestCases[0].desc[1] := 'Tests if the function returns True if the parameter act is greater than parameter xp';
	vTestCases[0].desc[2] := 'PASS IF: Return value is TRUE';
	
	(*Setup needed variables*)
	vTestCase1_act := REAL_TO_ULINT(115.4);
	vTestCase1_xp := REAL_TO_ULINT(85.4);
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>461994a4-6ee7-48bd-a026-bfc03adee99c</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run the test cases*)
TEST_CASE_1_SETUP();
TEST_CASE_1_EXEC();

TEST_CASE_2_SETUP();
TEST_CASE_2_EXEC();

(*Instantiate the test runner*)
testRunner(
	Id := 61,
	Name := 'assertGreater_ULINT',
    RunTests := GVL.RunAll OR vRunAll,
	ResetTests := GVL.ResetAll OR vResetAll,
	TestCases:=vTestCases);

(*Report the results to the collection global*)
GVL.Results[testRunner.Id] := testRunner.Summary;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8ca94784-71be-459b-820e-99faf1ea372f</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="main" pouType="program">
                <interface>
                  <localVars>
                    <variable name="testReporter">
                      <type>
                        <derived name="utTestReporter" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Calculator for summaries of tests</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">testReporter(Results:=GVL.Results);</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>4f197067-2b34-4440-800a-93687fa96f27</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
              <Libraries>
                <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.16.0 (System)" />
                <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
                <Library Name="#CAA Device Diagnosis" Namespace="DED" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CAA Device Diagnosis, 3.5.15.0 (CAA Technical Workgroup)" />
                <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, 3.5.5.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#Standard" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Standard, * (System)" />
                <Library Name="#System_VisuElems" Namespace="VisuElems" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElems, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemMeter" Namespace="VisuElemMeter" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemMeter, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsSpecialControls" Namespace="VisuElemsSpecialControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsSpecialControls, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsWinControls" Namespace="VisuElemsWinControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsWinControls, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemTextEditor" Namespace="VisuElemTextEditor" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTextEditor, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemTrace" Namespace="VisuElemTrace" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTrace, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuNativeControl" Namespace="VisuNativeControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuNativeControl, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsAlarm" Namespace="VisuElemsAlarm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsAlarm, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemCamDisplayer" Namespace="VisuElemCamDisplayer" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemCamDisplayer, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
                  <Parameters>
                    <Parameter Name="GC_POINTS_PER_CAM" Value="100" />
                  </Parameters>
                </Library>
                <Library Name="#System_VisuElem3DPath" Namespace="VisuElem3DPath" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElem3DPath, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
                  <Parameters>
                    <Parameter Name="GC_POINTS_PER_POLYGON" Value="100" />
                  </Parameters>
                </Library>
                <Library Name="#System_VisuElemsDateTime" Namespace="VisuElemsDateTime" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsDateTime, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemXYChart" Namespace="VisuElemXYChart" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemXYChart, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#system_visuinputs" Namespace="visuinputs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="visuinputs, 3.5.16.0 (system)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>29952b5a-7957-4b81-b599-b1e619961408</ObjectId>
                  </data>
                </addData>
              </Libraries>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>1623a2f3-c504-46d2-92e3-78dceb0678e0</ObjectId>
            </data>
          </addData>
        </resource>
        <addData>
          <data name="Device" handleUnknown="discard">
            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
              <DeviceType>
                <DeviceIdentification>
                  <Type>4097</Type>
                  <Id>0000 000a</Id>
                  <Version>3.5.16.0</Version>
                </DeviceIdentification>
                <Connector moduleType="256" interface="Common.PCI" connectorId="0">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="769" interface="SafetyInterface" connectorId="1">
                  <HostParameterSet />
                </Connector>
                <DeviceParameterSet />
              </DeviceType>
            </Device>
          </data>
          <data name="configurations" handleUnknown="discard">
            <configurations />
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d3c4fb1e-c0bb-42b9-aa60-bbb5fa958a7e</ObjectId>
          </data>
        </addData>
      </configuration>
    </configurations>
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
      <Libraries>
        <Library Name="VisuSymbols, 3.5.10.0 (System)" Namespace="VisuSymbols" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="#System_VisuElems" Namespace="VisuElems" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElems, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemMeter" Namespace="VisuElemMeter" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemMeter, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsSpecialControls" Namespace="VisuElemsSpecialControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsSpecialControls, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsWinControls" Namespace="VisuElemsWinControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsWinControls, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemTextEditor" Namespace="VisuElemTextEditor" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTextEditor, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemTrace" Namespace="VisuElemTrace" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTrace, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuNativeControl" Namespace="VisuNativeControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuNativeControl, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsAlarm" Namespace="VisuElemsAlarm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsAlarm, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemCamDisplayer" Namespace="VisuElemCamDisplayer" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemCamDisplayer, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
          <Parameters>
            <Parameter Name="GC_POINTS_PER_CAM" Value="100" />
          </Parameters>
        </Library>
        <Library Name="#System_VisuElem3DPath" Namespace="VisuElem3DPath" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElem3DPath, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
          <Parameters>
            <Parameter Name="GC_POINTS_PER_POLYGON" Value="100" />
          </Parameters>
        </Library>
        <Library Name="#System_VisuElemsDateTime" Namespace="VisuElemsDateTime" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsDateTime, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemXYChart" Namespace="VisuElemXYChart" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemXYChart, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#system_visuinputs" Namespace="visuinputs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="visuinputs, 3.5.16.0 (system)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>973caaa7-2494-47fc-b0f3-fdb5caef20c4</ObjectId>
          </data>
        </addData>
      </Libraries>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Folder Name="assertFcs">
          <Object Name="assertFalse" ObjectId="64937e06-d0e9-44eb-9327-80830493b692" />
          <Object Name="assertEqual_BOOL" ObjectId="f7c69719-b80e-41a9-bf9e-83ab8c287f3f" />
          <Object Name="assertEqual_BYTE" ObjectId="39440229-29c8-4209-823d-fec273b742c1" />
          <Object Name="assertEqual_WORD" ObjectId="06cc94b6-75a0-4ec2-891b-97b53806960d" />
          <Object Name="assertEqual_DWORD" ObjectId="155a59ae-7b84-4952-b77a-c6a834427a8d" />
          <Object Name="assertEqual_LWORD" ObjectId="138c2567-98f8-4f1a-bcc5-5f5e31dea203" />
          <Object Name="assertEqual_SINT" ObjectId="57f6c1c6-4a8d-47df-9211-13fb15ea1030" />
          <Object Name="assertEqual_USINT" ObjectId="95f9aba1-10c0-4fc3-b830-c57e97bb1463" />
          <Object Name="assertEqual_INT" ObjectId="236f0cd1-0ce2-49d5-aeae-1ea242d097bb" />
          <Object Name="assertEqual_UINT" ObjectId="4391658e-7269-4f19-84d7-260096f4e1a8" />
          <Object Name="assertEqual_DINT" ObjectId="493627b2-db3a-4fa7-8718-688888b82512" />
          <Object Name="assertEqual_UDINT" ObjectId="7298633a-b174-4d68-8ff3-09bff0b72471" />
          <Object Name="assertEqual_LINT" ObjectId="3b4d4117-8db7-4b85-abe0-a69e118fae6b" />
          <Object Name="assertEqual_ULINT" ObjectId="df42dc00-71c4-4308-9038-ebb75292c300" />
          <Object Name="assertEqual_REAL" ObjectId="f4af70c1-bc85-4b20-b8d2-2be9e4bda714" />
          <Object Name="assertEqual_LREAL" ObjectId="d80a2b4b-b62c-4cb7-9513-3d349d68076e" />
          <Object Name="assertEqual_STRING" ObjectId="a1b4c36a-8624-4365-8f0b-568c4b446d2a" />
          <Object Name="assertEqual_WSTRING" ObjectId="689e183a-0d2d-4cf1-87eb-f3a080c41d06" />
          <Object Name="assertEqual_TIME" ObjectId="d1237634-747b-43a9-ad46-ed80f15a19a9" />
          <Object Name="assertEqual_LTIME" ObjectId="2539fc38-2b13-466b-83f9-d21559330ca7" />
          <Object Name="assertEqual_DATE" ObjectId="559d2484-6961-4833-a2a0-ffd46a2aec67" />
          <Object Name="assertEqual_LDATE" ObjectId="65274bb7-6a5a-45b0-91bb-2563f9945276" />
          <Object Name="assertEqual_DATE_AND_TIME" ObjectId="cb61cdea-ab88-4706-85ae-63eb8d0f16cc" />
          <Object Name="assertEqual_LDATE_AND_TIME" ObjectId="4ca69933-34d8-40ed-b337-cb6e031c3ae7" />
          <Object Name="assertEqual_TIME_OF_DAY" ObjectId="819a0586-561e-4023-83f0-107197c15a38" />
          <Object Name="assertEqual_LTIME_OF_DAY" ObjectId="e13f99bd-1a91-4a83-9076-584de3a362f6" />
          <Object Name="assertNotEqual_BOOL" ObjectId="a041f9f6-5a9c-4984-9efc-4476a90e2234" />
          <Object Name="assertNotEqual_BYTE" ObjectId="6eb78e45-2923-4397-9c70-3b8a0820d088" />
          <Object Name="assertNotEqual_WORD" ObjectId="5ddf91f5-ce0d-4544-84c2-633c5512cd41" />
          <Object Name="assertNotEqual_DWORD" ObjectId="ffc9b72e-c6e6-466e-b58f-bdfa412cda06" />
          <Object Name="assertNotEqual_LWORD" ObjectId="ccaf4782-15f6-416a-8417-1d7cddcab040" />
          <Object Name="assertNotEqual_SINT" ObjectId="20ca4d38-490b-412b-9adb-e2b99747f773" />
          <Object Name="assertNotEqual_USINT" ObjectId="86c78596-6103-42a7-9b0f-7a3f28b4709b" />
          <Object Name="assertNotEqual_INT" ObjectId="b52ab48c-5927-4adb-8a01-896956b5be59" />
          <Object Name="assertNotEqual_UINT" ObjectId="9b08ae79-f6fe-4c68-9467-ee90eff5ea57" />
          <Object Name="assertNotEqual_DINT" ObjectId="79ee9f54-dede-428b-b9ec-063f9e6f9786" />
          <Object Name="assertNotEqual_UDINT" ObjectId="74b1e92f-c097-404d-a52b-305700b6430c" />
          <Object Name="assertNotEqual_LINT" ObjectId="3e6a848a-77b9-4727-b015-6d0bcd8c5ec0" />
          <Object Name="assertNotEqual_ULINT" ObjectId="465df4f0-4b5d-4cd9-a546-5a247e2dd420" />
          <Object Name="assertNotEqual_REAL" ObjectId="f520e45a-6eef-4c04-acef-8af46ab3eeb6" />
          <Object Name="assertNotEqual_LREAL" ObjectId="f59748b0-50b8-4801-b30b-0585f77b9914" />
          <Object Name="assertNotEqual_STRING" ObjectId="5e5c311c-a48d-4d59-b836-769c9e7d9661" />
          <Object Name="assertNotEqual_WSTRING" ObjectId="744784c9-7e0c-4afe-b03d-9a618528dcaf" />
          <Object Name="assertNotEqual_TIME" ObjectId="e5986010-94b1-42cf-881c-7abff35c7fbd" />
          <Object Name="assertNotEqual_LTIME" ObjectId="9ffb29b1-4a8b-488d-b839-24f538e7728b" />
          <Object Name="assertNotEqual_DATE" ObjectId="5179e2e2-db6a-4068-afff-e92d1411585f" />
          <Object Name="assertNotEqual_LDATE" ObjectId="32bd7a21-d925-4026-84bc-b100293dce49" />
          <Object Name="assertNotEqual_DATE_AND_TIME" ObjectId="3f33448c-3184-41ef-bf3c-a8f3b325eb63" />
          <Object Name="assertNotEqual_LDATE_AND_TIME" ObjectId="88ce8c91-cb2f-4398-83ea-d2dc7ec833c1" />
          <Object Name="assertNotEqual_TIME_OF_DAY" ObjectId="1d22cf57-e3dc-47ba-a6b6-a45900a049fa" />
          <Object Name="assertNotEqual_LTIME_OF_DAY" ObjectId="1bacb25a-7ea8-4a19-b4a0-c34c531cabb4" />
          <Object Name="assertGreater_BYTE" ObjectId="e092e8ff-317d-4813-8ac8-99d763abec9d" />
          <Object Name="assertGreater_WORD" ObjectId="619cb262-00e0-4626-a559-c4cd286df1e0" />
          <Object Name="assertGreater_DWORD" ObjectId="463b1b2b-4d65-4c35-a1ce-a5d8ba6a247d" />
          <Object Name="assertGreater_LWORD" ObjectId="a8032dff-adea-4c8c-8ff7-6118c4e02bf5" />
          <Object Name="assertGreater_SINT" ObjectId="20945b00-c8ae-4328-8140-f2954c0400b8" />
          <Object Name="assertGreater_USINT" ObjectId="71ded51d-1d4d-4dd4-89f5-14678311ee2b" />
          <Object Name="assertGreater_INT" ObjectId="ab755ad7-523d-4393-8787-e6ae3e930ce3" />
          <Object Name="assertGreater_UINT" ObjectId="cd9f9a4b-d437-4dd6-b13a-85e41d8c7eb7" />
          <Object Name="assertGreater_DINT" ObjectId="3720aff6-6fda-45bb-a81a-19a8a1e09253" />
          <Object Name="assertGreater_UDINT" ObjectId="c19ebc32-86f5-4406-b497-686e0fba9986" />
          <Object Name="assertGreater_LINT" ObjectId="101bde75-f523-4b63-8fe1-d6b1eeaa8f1f" />
          <Object Name="assertGreater_ULINT" ObjectId="e0ce3a96-1bd1-4f0f-934d-06f6b42a0460" />
          <Object Name="assertGreater_REAL" ObjectId="76ec0990-24a8-409b-9f3d-f03f3f735536" />
          <Object Name="assertGreater_LREAL" ObjectId="661d2e35-9ea2-4b88-9ecd-66744b3d1a93" />
          <Object Name="assertGreater_TIME" ObjectId="4037283e-1807-47cd-9200-05aa520cfe0f" />
          <Object Name="assertGreater_LTIME" ObjectId="6b3a32ab-8eb3-42ae-b2b2-23276c6014ad" />
          <Object Name="assertGreater_DATE" ObjectId="4b423728-04bc-49a5-a6cf-7a4e2b608eff" />
          <Object Name="assertGreater_LDATE" ObjectId="5c71299c-fc46-4dbd-a58d-0ee94430b222" />
          <Object Name="assertGreater_DATE_AND_TIME" ObjectId="2209361f-9ac8-4e29-890e-dd6dd9da019b" />
          <Object Name="assertGreater_LDATE_AND_TIME" ObjectId="e3dc6e0d-0fff-4624-a11d-538fd1645c18" />
          <Object Name="assertGreater_TIME_OF_DAY" ObjectId="28773f4d-17f4-4d54-a9a3-7dbc5f1189e9" />
          <Object Name="assertGreater_LTIME_OF_DAY" ObjectId="e149a1ed-060b-4fc7-a208-c7fc95359479" />
          <Object Name="assertGreaterEqual_BYTE" ObjectId="8ffd51bb-c86e-4ec7-a059-30bc18c0e10b" />
          <Object Name="assertGreaterEqual_WORD" ObjectId="1adee882-d906-439b-90e2-87924378eb65" />
          <Object Name="assertGreaterEqual_DWORD" ObjectId="38932ecd-11d7-4364-84b6-e31944dd9b14" />
          <Object Name="assertGreaterEqual_LWORD" ObjectId="1bf84169-8ec2-420c-999a-e37f783f1bdd" />
          <Object Name="assertGreaterEqual_SINT" ObjectId="830ec956-1e46-4921-9b16-ec7ff7f3dcba" />
          <Object Name="assertGreaterEqual_USINT" ObjectId="b6423f37-50de-4d41-a5be-7b4eb0c26851" />
          <Object Name="assertGreaterEqual_INT" ObjectId="9b966462-5009-455b-80d9-37677f3fab23" />
          <Object Name="assertGreaterEqual_UINT" ObjectId="61acc4ea-6b13-46a5-99a8-c205d5170dbf" />
          <Object Name="assertGreaterEqual_DINT" ObjectId="d985cd45-94df-499f-9e93-cd4f7b88777d" />
          <Object Name="assertGreaterEqual_UDINT" ObjectId="68b6c9ae-8ee1-4f36-90bc-20e93b25e8cf" />
          <Object Name="assertGreaterEqual_LINT" ObjectId="26b2ef4c-817d-42a6-956d-da3d2d4140e7" />
          <Object Name="assertGreaterEqual_ULINT" ObjectId="42d3daac-4b55-426c-bca3-70018e39e326" />
          <Object Name="assertGreaterEqual_REAL" ObjectId="ece5bb8b-160b-4079-a6c6-74aabd91e636" />
          <Object Name="assertGreaterEqual_LREAL" ObjectId="4a11e78c-436a-43fd-b71e-e9aec8e04c05" />
          <Object Name="assertGreaterEqual_TIME" ObjectId="9b6802ce-c226-4fb6-b56a-fbbb686dedd0" />
          <Object Name="assertGreaterEqual_LTIME" ObjectId="218b1ffc-fde4-44c8-9288-70cf189e961a" />
          <Object Name="assertGreaterEqual_DATE" ObjectId="b30103aa-cc48-4eab-9ba8-a9ec2b74aa77" />
          <Object Name="assertGreaterEqual_LDATE" ObjectId="2001a32f-00d6-4dcf-b9f8-ee8a14dec23e" />
          <Object Name="assertGreaterEqual_DATE_AND_TIME" ObjectId="5141b67f-48a1-4272-b7bb-7ea40162e2d8" />
          <Object Name="assertGreaterEqual_LDATE_AND_TIME" ObjectId="99e29872-154b-4de6-9326-51a54c7fce07" />
          <Object Name="assertGreaterEqual_TIME_OF_DAY" ObjectId="ceedf226-be1e-4eb8-b27f-82e6bd20277a" />
          <Object Name="assertGreaterEqual_LTIME_OF_DAY" ObjectId="673a5434-c072-45e1-8273-ee0e8d39079d" />
          <Object Name="assertLess_BYTE" ObjectId="e0d01b03-e1df-43e6-a80d-3d469d797323" />
          <Object Name="assertLess_WORD" ObjectId="d15f75cb-e72f-41c2-ba7d-5f6b17271300" />
          <Object Name="assertLess_DWORD" ObjectId="100450e5-e503-43dd-a355-a289401a671f" />
          <Object Name="assertLess_LWORD" ObjectId="25effc9a-a80d-4d13-b278-139a2e6c4833" />
          <Object Name="assertLess_SINT" ObjectId="e9509292-214f-448a-9cb4-049f2daec5c4" />
          <Object Name="assertLess_USINT" ObjectId="0a3b05f5-62dd-41ca-b30d-7713c5a4d748" />
          <Object Name="assertLess_INT" ObjectId="569e9465-98e4-4f45-8fe4-6481fb9b991d" />
          <Object Name="assertLess_UINT" ObjectId="9ae3ef59-64b6-4b82-868d-6c2a244bafa0" />
          <Object Name="assertLess_DINT" ObjectId="d9f3cd1b-6619-488d-8293-f869f989e108" />
          <Object Name="assertLess_UDINT" ObjectId="0f8dae77-741d-41da-b92d-d558408a229b" />
          <Object Name="assertLess_LINT" ObjectId="defc4cb2-61d6-4416-9851-add17d36caff" />
          <Object Name="assertLess_ULINT" ObjectId="e8513174-d419-44b9-bc17-5efbe522bf42" />
          <Object Name="assertLess_REAL" ObjectId="87d76822-b31e-4648-95cd-603c36a12f5a" />
          <Object Name="assertLess_LREAL" ObjectId="5ae7106b-6229-427f-86bb-410202ef120e" />
          <Object Name="assertLess_TIME" ObjectId="3b0c9ccb-651a-4307-8aec-94a45bebf826" />
          <Object Name="assertLess_LTIME" ObjectId="763e9f16-59e5-434e-a9e1-5f7dfd65c76a" />
          <Object Name="assertLess_DATE" ObjectId="5f79767c-6430-4842-a7f5-d58f350a5bdd" />
          <Object Name="assertLess_LDATE" ObjectId="dc725a4b-dd59-4659-9c45-c6a518784f81" />
          <Object Name="assertLess_DATE_AND_TIME" ObjectId="9927b011-773b-4429-a96a-75add4ffdb0f" />
          <Object Name="assertLess_LDATE_AND_TIME" ObjectId="21874a65-fa54-4cab-a105-0f40cac2dd52" />
          <Object Name="assertLess_TIME_OF_DAY" ObjectId="e42794f7-cd81-4435-85b0-64f93d29b802" />
          <Object Name="assertLess_LTIME_OF_DAY" ObjectId="a5261598-dc9b-4245-a971-0a9b42a5e267" />
          <Object Name="assertLessEqual_BYTE" ObjectId="2ebb0f00-a039-4a9f-bc75-e18bd39e3db1" />
          <Object Name="assertLessEqual_WORD" ObjectId="9582f9f1-5046-4680-906d-c5c79a0a409e" />
          <Object Name="assertLessEqual_DWORD" ObjectId="f8704856-8b8e-49a4-9a11-7c4147ffc0ce" />
          <Object Name="assertLessEqual_LWORD" ObjectId="110671a0-bbef-41f2-9399-e225e602a51c" />
          <Object Name="assertLessEqual_SINT" ObjectId="153be81c-8a0e-4058-809d-8969ca1a7847" />
          <Object Name="assertLessEqual_USINT" ObjectId="043d6232-33d6-498d-ac5a-b2d8ceee7ab2" />
          <Object Name="assertLessEqual_INT" ObjectId="8b2058c7-420c-46fe-9ec5-55de9c7f4022" />
          <Object Name="assertLessEqual_UINT" ObjectId="1c1bea76-ad9a-4fae-8380-d9ddf2cec918" />
          <Object Name="assertLessEqual_DINT" ObjectId="caa35aab-73c6-464d-935c-4b8c179a13df" />
          <Object Name="assertLessEqual_UDINT" ObjectId="97e35aa0-2bd5-487d-ac93-40afc83596a6" />
          <Object Name="assertLessEqual_LINT" ObjectId="50925e90-e0ba-4ca4-af53-f56df31a1280" />
          <Object Name="assertLessEqual_ULINT" ObjectId="c1a6a302-e1ea-4a95-9bf7-0da125eb0d15" />
          <Object Name="assertLessEqual_REAL" ObjectId="a4596e12-e0f5-4ccb-b085-afeb799d87ca" />
          <Object Name="assertLessEqual_LREAL" ObjectId="aadf1a7b-a8e1-4942-962a-6d229417f5a0" />
          <Object Name="assertLessEqual_TIME" ObjectId="2da03026-8543-4d4d-a07b-34ac7511e3c7" />
          <Object Name="assertLessEqual_LTIME" ObjectId="fac7649e-d601-4ccc-9b51-7c378e709bfe" />
          <Object Name="assertLessEqual_DATE" ObjectId="223a0bce-ff00-4165-8adb-50bcbc7f886a" />
          <Object Name="assertLessEqual_LDATE" ObjectId="4ee5abc4-d246-4dc6-8192-dd917c0fd680" />
          <Object Name="assertLessEqual_DATE_AND_TIME" ObjectId="99dc1d9b-2068-427a-b630-e3962c5a07aa" />
          <Object Name="assertLessEqual_LDATE_AND_TIME" ObjectId="31acf48f-7338-4b58-b36f-feb51f0d1ef9" />
          <Object Name="assertLessEqual_TIME_OF_DAY" ObjectId="366f9473-f1dc-486c-a939-73ca5f53998b" />
          <Object Name="assertLessEqual_LTIME_OF_DAY" ObjectId="148e66e5-e2b0-4eb0-8368-a4a6ae4219ce" />
          <Object Name="assertArrayEqual_BOOL" ObjectId="1fdc2d52-42bb-49b9-94a2-834158bb9a18" />
          <Object Name="assertArrayEqual_BYTE" ObjectId="45585e20-5865-4e0a-8f18-ba20d03859bf" />
          <Object Name="assertArrayEqual_WORD" ObjectId="5cb44daa-c6ba-417d-a65f-25e21c4f17bb" />
          <Object Name="assertArrayEqual_DWORD" ObjectId="6e80a73b-9e2e-42b1-97cf-8127e9f594cc" />
          <Object Name="assertArrayEqual_LWORD" ObjectId="ae3e528a-57f8-48bf-9169-562be8c54075" />
          <Object Name="assertArrayEqual_SINT" ObjectId="4e5fade0-b4d2-485c-a239-3ee954f53ae8" />
          <Object Name="assertArrayEqual_USINT" ObjectId="f0a81d01-d3a6-4c75-91fa-46acaf9dbf9e" />
          <Object Name="assertArrayEqual_INT" ObjectId="10e776c4-e137-405e-864f-dfbe163baa36" />
          <Object Name="assertArrayEqual_UINT" ObjectId="ab8e178b-375f-46d9-9e97-6d6319f5e5f0" />
          <Object Name="assertArrayEqual_DINT" ObjectId="1abd39c2-4516-4547-b78b-8bb754a50cc6" />
          <Object Name="assertArrayEqual_UDINT" ObjectId="21683dba-e19f-4334-98e8-18a0ecc59890" />
          <Object Name="assertArrayEqual_LINT" ObjectId="edb069de-65dc-44fd-9d59-64d91e6cfa03" />
          <Object Name="assertArrayEqual_ULINT" ObjectId="e234f28f-9d0c-48b4-97d8-22acaf31d2ec" />
          <Object Name="assertArrayEqual_REAL" ObjectId="04a0524e-ae29-4b13-8a7d-d7043d8d0a37" />
          <Object Name="assertArrayEqual_LREAL" ObjectId="82269d81-91cb-4435-ab5c-ba8adc7f72eb" />
          <Object Name="assertArrayEqual_STRING" ObjectId="0f1ac244-170a-478c-92da-08647782a829" />
          <Object Name="assertArrayEqual_WSTRING" ObjectId="6b5cfe17-5151-4fd7-ae55-c86b8b3213d0" />
          <Object Name="assertArrayEqual_TIME" ObjectId="be0ce832-cf3c-4fdb-84bf-a0e1a5b6991f" />
          <Object Name="assertArrayEqual_LTIME" ObjectId="58c705a4-c5af-4b6c-9502-0d27360a246a" />
          <Object Name="assertArrayEqual_DATE" ObjectId="290233e3-095c-4c3e-93e5-a0e4cc3f5e49" />
          <Object Name="assertArrayEqual_LDATE" ObjectId="87ed6a92-e4ea-4d39-923b-886b3f65fd4a" />
          <Object Name="assertArrayEqual_DATE_AND_TIME" ObjectId="f2323288-56e3-4830-9c71-e203685c4392" />
          <Object Name="assertArrayEqual_LDATE_AND_TIME" ObjectId="3e898bab-c30a-474f-b4b4-5bf159438bf4" />
          <Object Name="assertArrayEqual_TIME_OF_DAY" ObjectId="56c3f8ed-0eac-4ee7-8b3a-bb03336f4029" />
          <Object Name="assertArrayEqual_LTIME_OF_DAY" ObjectId="087a085d-fb19-48ec-b55a-c7dd0fb12698" />
          <Object Name="assertTrue" ObjectId="7e0ba264-f746-4935-93dc-e600da1a5495" />
        </Folder>
        <Object Name="Library_tests" ObjectId="d3c4fb1e-c0bb-42b9-aa60-bbb5fa958a7e">
          <Object Name="Application" ObjectId="1623a2f3-c504-46d2-92e3-78dceb0678e0">
            <Folder Name="assertLibTests">
              <Object Name="test_assertNotEqual_BOOL" ObjectId="8d8b4897-0346-43f2-8dfd-6805f59c21f5">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="a777922a-6bdf-43d0-b036-3df3230c0656" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="76caf894-0b5c-4abb-b74b-f5ce7682a93c" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="a1a18e3b-b04b-4e90-9883-22e661cb4317" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="dcb8246f-6a08-413f-a69b-52557a72b228" />
              </Object>
              <Object Name="test_assertNotEqual_BYTE" ObjectId="e2c950c9-85f0-4eaf-a6a7-d1374e214f10">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="4c41df1b-2c0c-4477-aab1-4be17b8e6d1d" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="9c0afe90-d1c0-4e1d-a8b1-19e040050b10" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="1cf4f38f-7c12-426b-a69e-71dd0b3fb3cd" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="d1791d0a-5859-4543-ad02-d26f47f9f86e" />
              </Object>
              <Object Name="test_assertGreater_UINT" ObjectId="91513d92-02df-40f9-84db-a6d40875057b">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="7571bcf8-f2f7-4573-b45f-dbf0cd6c9b3a" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="7df39b90-2a37-4f74-a1e1-4e68293d28cc" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="edf0a6d7-3fd8-430e-b92b-b5fb1b46e85b" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="bf88cd0e-aa79-4f35-889e-428cbbf2d0be" />
              </Object>
              <Object Name="test_assertNotEqual_INT" ObjectId="26057cad-175e-49a8-904d-8e76b0adc483">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="ffa428ff-5604-4ade-a1fc-d520203b6cd7" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="4d6f2eb8-576a-4241-9619-a1fdf19e3bb1" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="26210c95-9c9a-4815-8b13-556564d2081f" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="11577817-6c82-4b83-a2c5-2da69b654a8f" />
              </Object>
              <Object Name="test_assertNotEqual_LTIME" ObjectId="b40574de-d233-4b83-b875-f1f66fb2bef8">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="5507e4d2-1284-457e-890b-398250d63cb0" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="c7aaea10-4f35-40ad-929a-ce3512d0e40d" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="03fd6ef7-8734-4851-b73a-8eea9d1db0e7" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="a8cf701f-0bfa-4314-a55d-e22469de40b4" />
              </Object>
              <Object Name="test_assertNotEqual_DATE_AND_TIME" ObjectId="9a4a764f-9ed4-40a3-9eab-81ae301e759f">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="2e41833c-52da-4fe1-b48a-780d18642ae7" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="fe7c929e-3861-44af-8b39-cb8fe4ea0be6" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="6edafa60-2fc1-41ad-90b5-0894255891ef" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="7c2011e1-3878-4fc3-affe-8958f66ff07c" />
              </Object>
              <Object Name="test_assertGreater_USINT" ObjectId="71db9960-3eb7-4c6d-88f0-5178f2db1ed1">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="c968d421-521e-4c10-86ac-df89e572ad6c" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="ab2a2387-fd17-499e-8cf8-32e740fe8228" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="14d2805b-e162-4866-b473-874cc805fd60" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="a287bd27-14ac-4320-8e5e-20f592810c5e" />
              </Object>
              <Object Name="test_assertNotEqual_UINT" ObjectId="9c3cd703-4cf2-4a9b-a121-a77c5c923cdb">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="23541bd2-dd03-45a8-acde-1ed1680dfc8f" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="74f51c51-cf29-438f-9557-e74286bff2be" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="c905277f-654f-4c2a-8c69-b6ed37011dd3" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="cad15009-d136-429c-bd09-698e4c5f5bdd" />
              </Object>
              <Object Name="test_assertGreater_LWORD" ObjectId="ce9c9797-0780-4570-9259-272ea234aace">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="1e1149f4-2770-4722-aec7-b88276367ee0" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="98a9b480-d5dc-4a4a-a614-2017db4f6681" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="cf7050dc-463a-4e14-9d16-f8735db377c9" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="351b55ef-0d01-4a31-b6d6-b6d4861a7705" />
              </Object>
              <Object Name="test_assertNotEqual_SINT" ObjectId="329ea8c8-b939-410e-9c44-c30552a33998">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="5f71401e-514e-44fb-b26e-b8f537e664f8" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="80879d46-223c-4081-8e05-f099b7e12f0d" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="2b276ebc-179a-43f0-b239-b36234a40a8d" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="250b6949-14fa-41e4-a19f-775d9a091a12" />
              </Object>
              <Object Name="test_assertGreater_WORD" ObjectId="b4c245c3-b2d6-4c77-a365-6da503fc67f1">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="37700f93-386d-48aa-8142-d7514c6b7f9c" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="587cb7c8-c382-4a32-9b62-3861a12d788f" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="d5137cb0-6d29-433d-8af5-be01c3f12735" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="1c0a03ce-5e53-4a2b-acd1-5bde0f765ed1" />
              </Object>
              <Object Name="test_assertNotEqual_ULINT" ObjectId="978d5ca1-a3e5-452d-827e-426e3fbca9a7">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="5f5948ba-cf91-4cf1-93ee-7d05d151ef94" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="64d711c7-7608-4897-af5b-85d717e36401" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="2bcfa171-5973-4210-bd35-c7dc1d1bf28a" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="88128832-d368-4bd6-a9ce-46114f24bcfe" />
              </Object>
              <Object Name="test_assertGreater_SINT" ObjectId="b7f7372c-7887-4c5b-8974-c179fe06fcdd">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="42953811-f88c-4c8c-bee4-b274fe1781cd" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="22f0f258-5f54-4f8f-93c0-3e8f92fccbe2" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="05f2f9ae-9d9d-4ac0-9ec5-ad9f892f2f11" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="df2b73d1-2fd0-466f-bf41-52699bacf6cd" />
              </Object>
              <Object Name="test_assertNotEqual_DATE" ObjectId="e125f869-1663-4cd3-9b59-0ff79505df7a">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="096ac22a-61d0-44c1-a565-66e2ec566ab8" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="7eec4b7a-251e-4a4c-90a9-4ce5f948c37f" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="1f20ae2e-37f3-4e92-9ce5-f1943c022685" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="a38dbf16-3f9e-4c00-8e92-760b6d420043" />
              </Object>
              <Object Name="test_assertNotEqual_LREAL" ObjectId="581af547-387c-40cc-9612-5cb631893c0d">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="a13da9e3-84a7-4ec9-890b-136aae2a972b" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="71fd873f-e790-4d81-9e99-1e54b2413c1e" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="4ac7e670-d50c-47cd-bea7-c898e24efec1" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="1cdf0902-c784-480b-8bd6-8b238b225f9e" />
              </Object>
              <Object Name="test_assertNotEqual_LDATE_AND_TIME" ObjectId="e3a2f759-124c-425f-8621-015e752ce19e">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="94912994-1b06-4d1e-8edc-38752ad5553d" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="f92069df-7f3c-4444-9b15-32e1cee3964e" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="f50885f3-9f81-4da8-8778-6cdbc01088c3" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="1fb4fc95-bdb4-455d-aa4f-c79c675f4d60" />
              </Object>
              <Object Name="test_assertGreater_DINT" ObjectId="4190d77d-baa3-4f66-971a-06885de873c4">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="3b971461-942d-4b41-ab89-47ba2439c981" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="5b6aa017-5ec8-4fbd-9c7d-d48b4858d2cd" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="0b8303e0-1967-4f0b-a9a1-29a00c10fc43" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="ea6f04dd-84ed-44bf-b08c-ef774983c0b0" />
              </Object>
              <Object Name="test_assertNotEqual_TIME_OF_DAY" ObjectId="94f2ca5a-49df-4fb5-91a7-0f8c06e2779f">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="5a9761f0-885a-48d7-893d-4525c2f438f9" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="be3b955a-afd0-4d0d-bedb-995c5165ab73" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="252fa800-c342-4471-b9d4-7b361e62566b" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="7f99cb58-6ee7-40a9-b03c-1104df2396e3" />
              </Object>
              <Object Name="test_assertNotEqual_STRING" ObjectId="38a1bd72-ae9d-4b7e-9968-5d724f4482cb">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="d2372239-83d7-4206-a564-832bd1a385d1" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="3b207c97-a9fa-4fca-99eb-9add8cb5c6ba" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="90ad4184-c636-4267-9257-27a8b34b73b6" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="c2e09d12-a76a-4a25-ae96-d75451cedaf1" />
              </Object>
              <Object Name="test_assertNotEqual_WORD" ObjectId="2ec7e58c-904f-4fca-a616-941a0da14410">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="3e302972-eff6-4865-9838-8f5bfd6596db" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="35b9bb99-c322-4ffe-bd8c-490c4d3f4d00" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="1ba01655-945c-4f56-a0ce-528ba8b69667" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="4430e6a2-7347-455f-9800-d5e1ccd12a6b" />
              </Object>
              <Object Name="test_assertNotEqual_DINT" ObjectId="78881a41-f48e-44f1-bcf4-aa333ff57844">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="07167a53-5b12-4eb4-a78b-a2dabf7e0c16" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="0636153c-fea9-4715-b962-6fe99b71109e" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="4424bd64-219c-4e13-b465-7d427eb6b7b2" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="986d68b9-207d-452c-81aa-0d7a27fa6bc4" />
              </Object>
              <Object Name="test_assertNotEqual_LWORD" ObjectId="0ea5964a-76a5-433f-a3cf-75b239ed038d">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="b2364e31-c02a-4bbe-bff7-7d651bf6f34a" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="3c9a11cd-531c-43bf-9bdd-7b30c8524421" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="e62c2540-a260-4252-a895-b9b8ad387195" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="7e595046-bdcd-44bc-b522-ebf6c605bd28" />
              </Object>
              <Object Name="test_assertNotEqual_LINT" ObjectId="63e31617-b9cd-41cd-85c9-d7f02b4277b8">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="550e1066-fd22-41aa-8ea4-e58b5966ff3c" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="b6430486-d559-4b70-9bbc-b6c461985106" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="1fe8b808-94e7-47ba-b99c-bdf75650c67c" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="1c5ebc73-4585-404b-9f70-13af4b840779" />
              </Object>
              <Object Name="test_assertGreater_BYTE" ObjectId="b6a40440-bb18-4041-85d4-240c53d7c5ff">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="e6345018-bac3-4939-b731-154d302c4d4e" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="cacca234-3b3b-4888-84bb-a121a391fefe" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="cd43cda0-873b-437e-b067-abcdb2855603" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="00cbe7c6-3e33-49b5-a3e0-8ec2de914d6d" />
              </Object>
              <Object Name="test_assertNotEqual_WSTRING" ObjectId="43ebafef-0ec4-4f99-8429-f5a4454c0a2c">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="ad90d8f9-44e6-41b7-9f0d-651613eb80f9" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="9f1ed288-3c61-4b85-8c58-74c06edbf360" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="220054eb-a37e-49b5-9cdc-2c81f79b5208" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="457ddcb0-39fa-4fe9-af61-5b5e57efa4e7" />
              </Object>
              <Object Name="test_assertGreaterEqual_TIME_OF_DAY" ObjectId="65cfddf6-490b-4898-b45f-ca31b3c5dff8">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="659bb12e-0750-447b-acc2-ea55164219f9" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="c86442d4-e5f0-480e-974e-7e0b8ac400c0" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="66818f75-c6d9-42c3-875c-3f89d39f7955" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="f3c2624b-5019-4cd4-a746-9f778f26e1a2" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="58d4f64e-2f47-4d1f-b8a3-82d97b1fd5e2" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="58bf537a-5fbb-4202-b6b0-b2a49689ea00" />
              </Object>
              <Object Name="test_assertLessEqual_USINT" ObjectId="faa41d65-0b4a-46e9-b097-d4db39890c72">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="3002df13-4f60-483f-a100-42ac34e3c12a" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="625add2a-3f77-4b23-bacd-a27fb8188252" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="b0d112dc-d082-4cb3-acf8-2451611b81da" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="bdd58a69-e673-404e-9366-0e6793d18f10" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="d11c0a93-d00d-4154-b012-c199f51e8b98" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="2e34e186-e8b1-43e5-883b-651740b679f1" />
              </Object>
              <Object Name="test_assertLess_LWORD" ObjectId="7c814499-bedc-46d5-bb27-d9cb36d58d12">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="00d1c8d5-5822-4b65-92e9-5f78a4b2a99e" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="2c9e25f9-66e6-471b-904d-a32c79ca879c" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="27b5b40d-fcd1-4271-bf1e-c5518dd560ec" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="db198b1a-0b64-446c-a955-de8c3226a1a6" />
              </Object>
              <Object Name="test_assertLess_LTIME" ObjectId="16f078c4-b75c-40cc-96b3-b9aa2f9fa4fd">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="2cfcf053-cc72-4b0b-b059-3bfcf802fd98" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="86fd4fcf-4ef4-4b12-afdb-ec615b5574f9" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="9f002404-cb28-4447-8678-1b3bd8e70924" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="e40205d0-30db-40f3-83c9-f08c3eedbe6a" />
              </Object>
              <Object Name="test_assertLess_LDATE" ObjectId="d76bf043-2ec1-46bc-acfe-b3115b249905">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="19ffe9c2-7983-4cb2-944c-c83b6a24c278" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="800d14e0-dc90-4a63-80b0-d3ac6f2cfbcb" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="66ada3c5-8b26-4a55-bd11-36ca19cfa1d5" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="0dafedb2-65a0-46d0-91a4-86a1a91e3582" />
              </Object>
              <Object Name="test_assertLessEqual_SINT" ObjectId="09a9a7b4-e984-4ef3-8d90-99afd9cb9a21">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="45fe83fe-b421-48ae-8b2d-d30c448cb372" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="169d3a4a-3b09-4318-81f7-34af6b163a7c" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="7034c238-de97-4936-a098-37301afceb84" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="055e0741-595d-4093-bbc2-812f6a8f8e3b" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="71b74853-d2ea-44a0-ada0-a32fa0c63a48" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="71b0213b-a145-452c-baaa-418f0d588881" />
              </Object>
              <Object Name="test_assertLess_USINT" ObjectId="b680944e-c5fd-4c1d-b24d-25b3d210d680">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="93ec4c35-6bfe-485b-98cb-f09e07fd7a9f" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="3e05fbc0-7090-455a-8b59-ceb307cda9f8" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="a8cad5f8-0963-4a88-af46-19cc82e424b9" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="4bfbf74a-4a7c-4268-86da-9d2e26e59cc7" />
              </Object>
              <Object Name="test_assertLessEqual_WORD" ObjectId="f070f4a7-170e-46e3-b2d5-6cce6dece90a">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="c2cef1c8-d703-4a58-917f-b8a3e4b52549" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="8d447dcf-38c4-428f-b2fa-7fbd9938c723" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="4aada338-e638-4a92-812a-259ef0182089" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="f4a1e114-8b7e-473e-b204-fdc73afe3050" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="b2198411-74ed-4866-9ad7-7f73289abdda" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="c57c591d-5674-4448-acc6-5a8dc6552a5d" />
              </Object>
              <Object Name="test_assertLess_DWORD" ObjectId="27eb4c1d-dbd2-47d4-9f14-ad372a5550dd">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="5309d8f0-c312-4c92-b3bc-3797f878f112" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="c3c17d51-2eb0-4c16-aded-473e698df494" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="20debbf6-09b5-4060-a947-82d7d0b914cb" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="c54b5d63-01e5-46b9-b3ab-daa38a820b5f" />
              </Object>
              <Object Name="test_assertLessEqual_BYTE" ObjectId="6c032a64-6a67-4be8-910b-e395300a64d6">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="cf898d07-0972-40f0-98f0-9b38bcffdd2f" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="cf2368ba-516f-433d-969a-5d306327d527" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="a2a84b34-0e08-425d-9d94-9d0eba750b99" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="81dd9f6b-114d-4e09-b135-1ff8f211772e" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="c1845d57-27e3-4bd9-8650-36d203d8f52a" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="fda47f28-b78b-4239-b8a6-10532629cd61" />
              </Object>
              <Object Name="test_assertLess_UDINT" ObjectId="629c4cba-6d61-49e8-a826-2bc404f7e248">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="8affbc98-8449-4689-81ba-f97217cd7e7a" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="b6d1bdc2-08d7-41b9-9f39-cc52e2fc5305" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="979d64fe-2eb2-4a0f-a547-c0c116bf3788" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="b87bed2b-34a7-4c89-845e-cf7bb5718659" />
              </Object>
              <Object Name="test_assertLessEqual_DWORD" ObjectId="e39f62ac-9f53-4abc-9730-50fa937344a7">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="3fc7172f-d9f6-4e7f-b1fd-555ad4e18ff9" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="c7cbf35f-a26f-4a00-a97a-2bdaa7d8408c" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="12a26c52-047e-4b0b-a38c-c7a1d6411566" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="c9b06f36-fe18-4c47-b1bd-559dd4934076" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="7794d60f-3ce4-49d4-b258-8acc7f89a1aa" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="84a43118-aaa6-4c19-82cd-4a7d21d5df22" />
              </Object>
              <Object Name="test_assertLess_DATE" ObjectId="263f31a9-47ab-4c64-bcb4-d743c7bf3fd4">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="ff80f620-13f3-4fa1-9062-448af3b166ee" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="11644f42-d408-4497-bcc9-46c2ea60e88a" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="4dcdbe0c-2550-4302-b81d-5a624efc9b19" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="05f57b7d-6834-4315-930f-60a97946fdcd" />
              </Object>
              <Object Name="test_assertLess_LINT" ObjectId="338e86bd-69de-48ba-a3cd-f8c06bc06a9b">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="22da4ba5-c537-4b42-a6e7-3acd49692d13" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="8dcaefdc-a0ab-481c-9104-6a01628390fd" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="a0227223-ca3b-47d1-b498-cfbfa8a02473" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="56a6e500-0b5c-4d61-a8a3-5ed2e25ec63c" />
              </Object>
              <Object Name="test_assertLess_LDATE_AND_TIME" ObjectId="30998da9-0a4e-432f-9866-5398e06a0dce">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="b5277275-2346-4b99-915a-8b13d8f64647" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="a37471db-421b-4702-a4ff-3400b8d6b2bc" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="a2f98890-a2f6-4d11-a75c-cefd9fc5c68d" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="87fff2f3-53ff-4511-98c8-928f6c10aabb" />
              </Object>
              <Object Name="test_assertLess_REAL" ObjectId="3c0ee0dc-ccae-440a-8640-27e74f653110">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="8a007554-47c9-40d6-adbc-dfed60b1bf7e" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="49e0df94-6761-4efc-a7cd-95cb77062522" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="e92afdf6-fa6d-45c3-a336-b56733d4794c" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="cec7d3c9-5166-4263-9ebe-e9dc3b0da551" />
              </Object>
              <Object Name="test_assertGreaterEqual_LTIME_OF_DAY" ObjectId="980554ea-2a75-4e2d-823e-963d8ec73db8">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="2a2d765f-753d-47b4-a750-6744ce1ca202" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="7f0438a6-840d-4291-a5df-ac824d330fa0" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="7a0b91ff-b500-4303-ac9f-72d07241c6a0" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="6321cdba-3ec5-4fc2-98ba-a9cd449acebd" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="029fa7b7-129a-4d4f-9051-a13ae3d1b127" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="3e7777ae-6aa7-4455-b75a-8653b7970dfb" />
              </Object>
              <Object Name="test_assertLess_INT" ObjectId="917b7ea5-bc17-43be-b4b5-cefb997905ca">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="21d7d3a1-34d4-4ac1-83f4-4de8fc681494" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="73419aed-e60b-445b-9348-732c3c0a24e8" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="844cb6bb-a942-4323-bc8a-eb065d7b030f" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="db5e46c6-a109-490b-8bd9-7189fabe4bdb" />
              </Object>
              <Object Name="test_assertLess_WORD" ObjectId="0e4277dd-4809-4abf-b2a4-fb84af467595">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="741adc2f-20bd-4708-bd44-19fea8c902d6" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="b41f6e1f-c034-430b-9c59-9e0508a00143" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="915307fd-315c-461e-b383-cae67b910725" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="e4dd9883-84de-4e8a-a180-f501928dfe40" />
              </Object>
              <Object Name="test_assertLess_DINT" ObjectId="426e2226-ccd0-4f88-b872-cb8f682992f9">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="91efc955-a2ae-4b96-8e01-683dce755289" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="dbab34eb-ac2e-47c4-bc00-4df444b13032" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="7164440f-a39b-43e9-9ba9-cf1fed5923e7" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="bfcb3344-a9e7-4c62-88b5-a1068423a669" />
              </Object>
              <Object Name="test_assertLess_TIME_OF_DAY" ObjectId="b7d5eff5-61a8-48f6-b6b8-5dbc507047b1">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="df068571-abc1-42b7-bacb-271854501e8b" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="9b1b606e-0aff-46e5-8055-e68bdcced72c" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="2d59bd4c-e840-49e2-bfc8-4c7e4e537ee8" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="08a42f82-f638-4351-81ff-cb5e67865096" />
              </Object>
              <Object Name="test_assertLess_LREAL" ObjectId="73f3bfd4-911a-4c02-b994-5793fb5a7b51">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="1cb1d497-4a0d-4228-8867-97c0fade8605" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="a75a27de-8544-4265-ae25-bce72d46249b" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="f2496647-4be2-423f-9706-bedf706259c4" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="3d2a56ee-f1bd-4543-a486-dddf5147629c" />
              </Object>
              <Object Name="test_assertGreater_ULINT" ObjectId="8ca94784-71be-459b-820e-99faf1ea372f">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="ddae08e9-672e-4511-8d81-ad20a553146d" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="1e50e898-81da-4e21-be91-cd4495e10261" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="d8ed331a-0e7a-4888-bb7c-9a2f71448136" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="461994a4-6ee7-48bd-a026-bfc03adee99c" />
              </Object>
              <Object Name="test_assertGreaterEqual_DATE_AND_TIME" ObjectId="bb75ad7e-a069-43d0-9c1f-64fee435e57c">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="3212811b-5961-4fae-8db6-3c2a340cf0b4" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="aaab1a4c-f1f5-44fc-84d1-72f343814573" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="16737020-72b4-4f92-8c24-b9faba6acb24" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="b3d0a5d2-b262-47ed-9eac-13bfc551d70c" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="a27e37bc-4e78-4a27-acfd-2b2942aabfb3" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="cdb99bb2-240c-4a68-95df-51036dd9610b" />
              </Object>
              <Object Name="test_assertGreater_LDATE" ObjectId="e19ee533-994b-4516-8dbd-7a9b49850ee0">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="4da42634-4df7-43d7-b9b5-99953697ffcb" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="a3bca0ae-d45d-48ee-b0ca-ab843676d739" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="1ae1c31e-03d2-491e-95f1-38d08751b77e" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="8635f10e-538b-49ff-a857-3c16a91def9d" />
              </Object>
              <Object Name="test_assertGreaterEqual_INT" ObjectId="7fee85ad-2a3f-4d86-94a5-c87589540b25">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="0f910ca9-8c2f-4bdd-b9e0-f215b5c43661" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="68d79724-5f7a-43f5-a52c-932479dc64bc" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="ee193594-d2e0-462e-b105-c2127e5dc882" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="a09a44a4-6807-4cc5-8a9e-9fe603cf9d7b" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="db5cb5f0-5ab4-4af4-baf0-0849b17ee9ab" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="aa2f323a-e64e-4ef8-a748-19ee68a7748d" />
              </Object>
              <Object Name="test_assertGreaterEqual_UDINT" ObjectId="51eee339-19c7-454e-807c-5608f9fdbf36">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="42c0cc98-ac1a-47be-86f6-d893747d33df" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="d7408e8e-8cff-4b87-857c-c7398ba95020" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="f4b862d7-cb5e-4243-ad66-51469921a833" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="d0e3494d-89ec-4550-9454-089bc7b6813f" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="d7460b37-4388-43c7-8d37-70068c5dccc1" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="2a2921e1-7299-4089-9193-62245b303dfc" />
              </Object>
              <Object Name="test_assertGreaterEqual_LDATE" ObjectId="2810d07f-3545-46ad-a7be-5349a0b50857">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="6ccb6d74-977a-49ab-8705-219b353bac31" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="450640dc-e5ef-4865-9cc8-39d822c6c313" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="68d89e49-ab43-43c6-9003-70e3bb673183" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="f84bda19-578d-493e-862c-c62beaaf76ca" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="7a9a92a3-50d0-4ddc-b12b-9104964c1f9c" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="ba88e307-fa2a-458b-a437-16f0f7adad93" />
              </Object>
              <Object Name="test_assertGreater_DATE_AND_TIME" ObjectId="4cb38885-8dca-4a2a-93cb-51ea097e575e">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="f642d275-eb47-436c-a372-fcb2b4acc5db" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="57c95794-e890-472d-ad07-c7e3356acc7a" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="d61cb9ca-6474-4115-9ae2-b3ef47593184" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="68f38429-afe6-49eb-842d-3b1995bcb329" />
              </Object>
              <Object Name="test_assertGreaterEqual_TIME" ObjectId="1f27e5da-6073-43e3-9b08-fad9ac802b5c">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="1ff53f62-de00-442f-89e7-79635cfe93f8" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="7a2bb34d-2396-477e-a0d7-ea678507551c" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="df79dd72-e640-46c1-a63c-320b1dbd0a64" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="e8a0d0c8-31d5-4883-84c9-4c831215d165" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="0c57ee5c-54cd-496d-af38-9979c662dab7" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="11f0a369-be11-4afc-9799-654b16f7ab33" />
              </Object>
              <Object Name="test_assertGreater_LTIME" ObjectId="28e1d04e-946d-4fa0-8931-5b4f7ef89bfe">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="85a920ec-c5ec-4c42-9a38-54969b62fd0b" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="da868263-3e4b-4a22-9703-67778b56145d" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="0aab01c6-4815-453a-bb7d-5a85f6a82a44" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="8a885b2e-8e85-4a38-98ff-16f196ba2ff1" />
              </Object>
              <Object Name="test_assertGreaterEqual_LREAL" ObjectId="9e2efdea-d559-4d26-beb5-b1e44d408ad0">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="b91b1d50-3266-4b4a-b066-5e8bd623e163" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="b98d24fb-cd08-40b8-9d64-f7a81c5f76e7" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="befd677a-e7eb-4834-b811-600d6189c138" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="5ec05ab3-d4c8-477a-bf88-5c6973f3feec" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="7d011dad-0aef-455d-81b5-451052e6c899" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="b7845596-548c-4e88-826c-a6616ade078b" />
              </Object>
              <Object Name="test_assertGreaterEqual_BYTE" ObjectId="eadc4ad0-0c66-4d6e-9f39-a5c513bc3ca9">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="d704261c-d4ec-4f76-9044-c886a83a1ff0" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="72636de6-b4bd-48dd-8ff8-ee937c1578b8" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="3518305a-0c70-4670-87f1-e5507be59603" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="39baca9c-7f33-425a-8c37-3fd804f8ba6c" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="873cdfdb-cd58-4531-9f6d-bb22740b1cfa" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="d829a614-7874-43a3-b0ec-9d9e2f78fa7d" />
              </Object>
              <Object Name="test_assertGreaterEqual_DATE" ObjectId="ea8d78ac-3ba0-4de8-bbff-480042c3eca2">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="97b786d1-e907-43d7-a08c-6b730a714fd0" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="a95cce5e-7ddc-4ea7-9dd3-6f2dc95fc21b" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="e93fb335-6fea-4ce6-b597-ba1ceb414879" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="f37f850c-d486-4c04-819f-f1b93bdae602" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="d69b6557-dda3-4697-bd42-5c24989a4e9f" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="589e0160-f96e-44c3-8264-9038d4f020ce" />
              </Object>
              <Object Name="test_assertGreaterEqual_UINT" ObjectId="5d496bef-8ab3-4710-8aae-b21f5d44eaca">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="b5f751c1-8754-44f9-8c07-6b31d1f04a0b" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="cc51c530-6d60-47e1-9259-106b276f93e7" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="385661fa-7f70-45ca-9274-98e05ca07812" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="be3fd084-c021-49db-a95d-5ad87afef352" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="c4718a39-48fb-48e9-a14b-dc157518d323" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="0dba1d73-40a2-433a-89ea-2b70d85d4390" />
              </Object>
              <Object Name="test_assertGreaterEqual_DWORD" ObjectId="696289f5-6040-41cc-a1c0-8f37b129a2e3">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="39bd4cb2-52d9-4ae5-840e-cf63454007db" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="c8163c3b-1581-43cb-863c-c7662b980f69" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="f52a18ca-34a0-4447-8d56-6b8e4651f7e5" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="c8b4b3d5-1fbd-403e-806a-88a8b3e47150" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="9dd6844e-5af3-45ed-a49f-5494583ddf5e" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="f05e5344-5c2d-4bb1-8198-125d4c66a49d" />
              </Object>
              <Object Name="test_assertGreaterEqual_LINT" ObjectId="a1218e9d-4942-446c-ad1d-027de1b01173">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="dc00c5e7-4c88-4de5-b76c-07e6f116e7aa" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="6af8d29d-1f87-4630-b68d-486d60189378" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="e386b3f4-ae69-4fef-b993-9a6d130807f7" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="df08dcd1-8091-404a-8356-898330075d99" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="1f7e38c1-789c-4719-ace9-b45c43c4a71c" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="d20efac1-ae0a-4c66-b2a9-55595e417055" />
              </Object>
              <Object Name="test_assertGreaterEqual_LWORD" ObjectId="f4977387-e2ea-4acc-80d8-c122f9a576af">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="3ff1696d-7dbf-4a51-9c2f-7c58188f831f" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="46e85ea3-a882-4dec-977c-9af3cca589a2" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="f0339bd3-64a0-459e-89eb-f6dc7757d000" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="5d327d8c-d40e-4d58-8b77-d247a593d22d" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="04c6ac78-6bc9-4624-84a9-6c38bb80fef4" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="44399fb9-51fa-4f4c-b34f-c652edfef78d" />
              </Object>
              <Object Name="test_assertGreater_REAL" ObjectId="c50ab275-031d-4d0a-a2ad-8e27f4fbfcce">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="1ee13c89-f962-434f-91c8-ba9b7c928fd3" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="ec46be3b-0eb1-440b-8ad9-b1a0b6f96234" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="7a283fd5-a05a-47d4-ba72-bab36cef8fbe" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="b36f4b59-3e2b-4749-b919-a91a35de2d77" />
              </Object>
              <Object Name="test_assertGreater_LDATE_AND_TIME" ObjectId="9706db70-7ced-4532-a1e0-e55efd4fb6d3">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="d99821e7-42d7-48b1-abe2-11739ec18752" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="5b0d40c9-ddd3-4728-bc18-c3a6e1502067" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="25f5fe6e-8707-44d7-88c5-8723c8a92134" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="c4146f0e-bb33-4d39-b954-7d9062a5b447" />
              </Object>
              <Object Name="test_assertGreater_TIME" ObjectId="d4ceeca5-9cfa-406e-8218-36c0b1f2bb34">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="467e4be0-b75c-4592-923e-7cb99fb74b97" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="932c0c6a-7fcb-4928-a735-fbb281d2c25d" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="aecfd39d-9a5d-4c48-9c86-fd7acf80443a" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="87df0c21-f352-4c4b-bfda-4969616a9451" />
              </Object>
              <Object Name="test_assertGreater_LTIME_OF_DAY" ObjectId="c09a6823-4144-40c0-ba86-9056a9cbf663">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="a9a58c52-33ce-4181-895c-b3ed587149b6" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="ab01cbcf-94fa-42cf-95ad-7ed870668ec6" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="411965d3-4a92-4d84-b1b1-b5bd515b87c6" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="9fbdd3bc-6510-4384-9e6d-5eaa8f517737" />
              </Object>
              <Object Name="test_assertGreaterEqual_ULINT" ObjectId="f2b8c297-3a34-48b4-9802-baf38442608b">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="6d03eadb-c1f4-4107-aaae-88dc1b564111" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="c9e19721-95de-48f4-8de3-ae10c84dfffd" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="4364aa45-3141-47fe-b0f0-e8a50b619ce0" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="9b8b786e-ce8e-45d6-8552-0b754e430903" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="45d2064e-d4b2-46a6-b1b3-d790287f61df" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="e985fccd-5b22-4985-b7bd-aac58cd4bac7" />
              </Object>
              <Object Name="test_assertGreaterEqual_SINT" ObjectId="eca63660-49f0-4b58-a812-21db1d6df86f">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="73281bd8-226f-459e-84ac-ca4c12820a13" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="c1e293d7-b369-4bef-9f6b-2af025114488" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="be867626-19ca-411c-a896-7780b3c78d03" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="55644e47-d48c-4ce6-9fc7-9984507b0dea" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="6209f458-2d0c-4532-8d00-c4dfc5d646aa" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="98060288-22f4-4d08-90b0-43b002085445" />
              </Object>
              <Object Name="test_assertArrayEqual_STRING" ObjectId="9cbbb496-48f3-496f-b414-cffc82308603">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="3725fc7d-e12d-43b4-b8e8-6355aac299d0" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="accc732f-8a52-4929-a156-66279f052ee2" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="602df0f0-c76b-4f4f-a7d7-9d0b04ae34f2" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="b1ecb702-d636-4dba-ae00-dab9e439781f" />
              </Object>
              <Object Name="test_assertArrayEqual_DATE_AND_TIME" ObjectId="a339fb1f-5ae0-43c7-a637-a82d08380008">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="6f88ea9d-0757-4c45-90b4-0d9429f5e0e2" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="168b10a6-0013-48ca-918e-e01cb1d54bd8" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="34a353d7-85fb-4ebc-8fe8-7d78da0364a8" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="647d75d7-7e94-4cac-95db-55abae516b26" />
              </Object>
              <Object Name="test_assertLessEqual_TIME_OF_DAY" ObjectId="017214e0-3c76-4d3b-8958-a7f473d67fce">
                <Object Name="TEST_CASE_3_SETUP" ObjectId="5a6af60e-6f23-4041-810d-977d2b2d1dca" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="2eba008a-8f68-4ca0-94de-a3d1b9ddd0c5" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="54635c2f-743a-4969-9780-f8582c7ccfc7" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="0ea419e4-bc0e-4f45-b3d3-07b3bce9cee5" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="808e340f-813a-4d03-8e5f-a806e25882a1" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="efddfde4-a1d3-4f0a-9dd5-4fa38bf653be" />
              </Object>
              <Object Name="test_assertArrayEqual_LDATE_AND_TIME" ObjectId="02a6b688-2341-4c64-8aea-2eb31e6a9b80">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="746fecfa-ca06-474d-bada-e4a1588886e9" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="836cc28d-770f-47b9-ae99-bcaa9d98e69b" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="c3e06caa-2a4f-45b8-9458-c97e9e8301cf" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="5d05053d-af21-4400-bd1b-107d75cf5f18" />
              </Object>
              <Object Name="test_assertLessEqual_LREAL" ObjectId="5f082690-4777-456f-b42c-1a7bcc61aca1">
                <Object Name="TEST_CASE_3_SETUP" ObjectId="3ffdc7a7-4181-4a50-8de1-9f6175e5f75a" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="93458f92-eb68-4d13-937d-5c09c85cefe2" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="cc49f97f-04e5-4428-8c2d-840033b3af14" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="e2764602-4254-4683-9623-9fb0c6da93f5" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="b458d642-d88a-45ad-be8b-a28c232b7bb6" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="d0065f5a-5ab2-41aa-a2ce-63ced9058fb2" />
              </Object>
              <Object Name="test_assertArrayEqual_LDATE" ObjectId="5029d14a-ca22-4264-9f3a-e04f8f12deb6">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="adec4839-f61f-450f-8cd3-08d7176fdab6" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="02c70dc4-0fb0-46be-bb02-73c2936bbccb" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="36eaea52-b309-417f-aa89-dc99a50963e9" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="4316c3e9-0b1c-45d8-989f-35a3d66e6dcd" />
              </Object>
              <Object Name="test_assertLessEqual_UDINT" ObjectId="8d503768-3d6c-4da5-825d-9afc1a3019c3">
                <Object Name="TEST_CASE_3_EXEC" ObjectId="1c14d70e-391a-40a1-bf09-a983cb0d9326" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="c85e4907-e81f-494f-8178-22eed4dc024d" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="df0a3e3c-a692-481d-9994-caab65738892" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="a11799dd-9899-4ab3-bd59-e7533f23c615" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="3910e1d7-c5b2-4921-a891-c429131b50bb" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="60b63f27-08af-42a5-9bd2-1a685454fb8e" />
              </Object>
              <Object Name="test_assertLessEqual_DATE" ObjectId="072a2590-7366-4f2a-ab31-055248e82c8c">
                <Object Name="TEST_CASE_3_EXEC" ObjectId="053e74de-ac72-4469-a151-5b9282ff69a1" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="0b9fb26b-98cb-4341-9284-5653b14037d5" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="4a40e8ab-fe56-4029-ad18-1a21f85cd50c" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="a010fe65-4c31-4dad-af45-cae3cce85b07" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="71acef98-5d1f-4c60-a880-ace46ce90c6b" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="96f8462d-766c-4056-a84e-008c5638a4ed" />
              </Object>
              <Object Name="test_assertArrayEqual_TIME" ObjectId="fb4e0829-d71b-4c21-96cf-9012a35aac04">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="62ca2df1-4a52-4e6e-8967-44e30ae4a50a" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="822bbc77-645d-4708-a1a1-27876b99b357" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="478991e7-d6d4-4479-bf13-782290e74f7e" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="c283dce0-c7af-4f84-874d-0d399e4a9c16" />
              </Object>
              <Object Name="test_assertArrayEqual_LTIME_OF_DAY" ObjectId="c2c608d0-d26f-4c1b-a953-1fabce74e52f">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="25b5b6b8-1e4f-4873-ba8d-cf54b42e8455" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="73e9d36e-f403-408c-acca-5dc4d3988549" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="277453ff-0af7-4d9f-a634-bff472f9ebe9" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="42c4a8a3-88a9-49bd-9462-01a8e982ab17" />
              </Object>
              <Object Name="test_assertArrayEqual_LTIME" ObjectId="24b84290-2d21-434a-a185-2b8483523251">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="a9073844-314a-4756-ba95-c5666489fff5" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="227df6c2-3066-4436-bfe4-5089992b20da" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="5c8e818f-2f56-4304-8d04-fcac83e820ac" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="5ddb5ea8-d02a-4dc8-8994-c240caa78562" />
              </Object>
              <Object Name="test_assertTrue" ObjectId="91eea282-145f-4dfe-9131-e958b6e99dae">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="4911b50a-0c1a-43a3-b965-2f6e62203d47" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="f09d9a88-445b-4a08-85a4-fed610de1139" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="e54925b4-beb7-48bb-b03a-0142deea7331" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="402053ea-a0a7-4847-a3d5-6390f1df3fa1" />
              </Object>
              <Object Name="test_assertLessEqual_INT" ObjectId="77d2499e-50ae-4f6b-8f2b-e361ea5c17dc">
                <Object Name="TEST_CASE_3_SETUP" ObjectId="3a2bb8c7-f096-42a9-8f61-67c0b343a815" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="600a4935-8365-4fee-97aa-3a8871b47575" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="389c59f2-226d-4320-ad70-61ad34fe74b0" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="b0a98be0-304d-4d02-ac43-78172723044a" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="d60b99d0-e99d-41a2-9805-1fa06bff9c45" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="991c368e-6e11-44fc-aaa5-f083c27741d6" />
              </Object>
              <Object Name="test_assertLessEqual_UINT" ObjectId="ffb31a86-f4fa-4272-b587-d126593ef554">
                <Object Name="TEST_CASE_3_SETUP" ObjectId="06e30649-aaeb-4c6c-ba63-6d051ba6b374" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="febbeef4-4e0b-434a-bcb0-583881d5752c" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="c0e36d92-52c0-4d0f-9502-06da38c1491f" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="fdcc4891-6a01-41d4-a02d-8e09c4abd5de" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="0c98a2a4-54b8-4878-a714-ef9c09e9b88c" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="a97ec3ed-2a0b-474c-a363-5cc574156eaf" />
              </Object>
              <Object Name="test_assertArrayEqual_LREAL" ObjectId="810250d1-d13c-46d8-bc72-21bb2df61359">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="a1544c03-1d2c-4a2c-8753-ed4da4c73082" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="11418322-1192-44c2-a9c5-eca384090831" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="3291680e-cd77-4552-a043-1facacd2a7c3" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="3631523d-475b-4ff7-99f1-01ce9f6668df" />
              </Object>
              <Object Name="test_assertLessEqual_REAL" ObjectId="08f87694-69a6-4f7d-b5a1-00cd7fed17d9">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="33988cc7-8377-4a27-9dd3-60385a447614" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="4afb1cc3-52f7-4ef8-8b7a-e5440829180b" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="5b9f6421-df48-4026-a4ed-68477fccf290" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="252cc4b0-d883-445e-8221-13660ea9ad26" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="c6c73c24-8940-47ab-a86b-d09f75cfefa3" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="005134cc-766b-41e9-801c-6277ab5a41b3" />
              </Object>
              <Object Name="test_assertArrayEqual_BYTE" ObjectId="ae2e4109-44f2-496c-b69c-6b1d6bd5ee10">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="ef378de1-d70a-4833-afae-13104ec37eb0" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="c0570794-a57e-44a6-8cf6-8b010525f12f" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="111457aa-0d65-46e9-a2d6-f5d71a2aa16a" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="2107f429-67a2-415d-8516-48b040380d0d" />
              </Object>
              <Object Name="test_assertArrayEqual_LWORD" ObjectId="735ffdce-9eba-43a0-94fc-ad2989e2cb12">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="5cf22f50-202f-4fdd-b9c5-935f5db1f8b6" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="d98bce77-92d5-420a-8f5f-c3476c062087" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="5dc31caf-4fe5-4932-af83-0c79e536d2d3" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="c6b937a9-4ab5-4426-b6b1-e50b5053a93c" />
              </Object>
              <Object Name="test_assertArrayEqual_REAL" ObjectId="a5ad155e-e30d-43c0-9689-4d8f3e2458a9">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="f325de7f-2034-48dc-bb2d-d537502f7815" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="fa577607-d7e1-4bf4-abe3-89efbdbf39a7" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="bdf7d422-0dfa-4a63-a551-7274f255a660" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="dbea1918-0408-427e-bb68-fcb35fbf41e0" />
              </Object>
              <Object Name="test_assertLessEqual_TIME" ObjectId="9a6d310d-ae26-4165-8970-9a0d6aee4835">
                <Object Name="TEST_CASE_3_SETUP" ObjectId="d570eba4-6a03-445c-ab93-1690359f1e59" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="95ec8d05-5664-420e-b841-35851f7643ed" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="f8642201-ce74-45fd-be5c-b6ca76959bdc" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="01f21464-77b5-48d5-b991-4d57d762a8f2" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="0cf06e0a-a434-405a-b54f-196cc35e77a4" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="8ffaa26d-0eb4-4226-b3dc-d8d7d5ef2bff" />
              </Object>
              <Object Name="test_assertArrayEqual_UDINT" ObjectId="812fc96c-c150-414d-961c-beb691a2c1d2">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="989d72e0-c524-4dca-9bca-b0104c79bdee" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="cdf97dde-6324-42fa-a9bf-527ad354bb6a" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="245c0565-0bce-403d-a1a1-0c59ff210b5d" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="abee2395-e692-471e-b472-c7f32e7e3541" />
              </Object>
              <Object Name="test_assertLessEqual_ULINT" ObjectId="ff0ae0d9-024a-40f2-be95-f88e21ac332f">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="5bcf0fe2-c7ed-46aa-8146-ed9c1ec5bf92" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="13822bc8-ced2-44f2-885f-f7875e9ff9d8" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="7c0d35a9-390b-41c9-8c8e-8ffe6b5c98ce" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="fa40aa0b-5de6-4233-8195-f1922bdea464" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="04929df8-a203-450f-9a7b-9ed686d87085" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="7702ead8-6cfb-4650-bf73-d9819d49a361" />
              </Object>
              <Object Name="test_assertArrayEqual_UINT" ObjectId="9775d48d-6245-4b5e-a5d9-7bae2ceb7db9">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="a28d1e25-5783-447a-b08a-fee69117f6b6" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="b9862653-365b-4697-8ac7-16a0c5335176" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="da110559-7a86-4b4f-b8e2-596044d9d424" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="238d3ad6-4784-4959-b95d-2e5628ad35d5" />
              </Object>
              <Object Name="test_assertLessEqual_DATE_AND_TIME" ObjectId="c8a14f19-bd8f-4a07-a292-67cbbbc0fd53">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="480ee3df-fe77-4e8f-87d7-0b7bccdfe78f" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="875bca43-b9db-4da1-bf43-6e8c3d559b64" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="d9d7df66-936c-4f88-a48b-ad78bb92df9b" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="c5358337-68e0-4a22-9693-13c97c088c55" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="3195d216-47c2-4df7-8c4a-7d8f98f474b9" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="53bf377f-59c9-4fd5-9f4a-5ec6a788a8e9" />
              </Object>
              <Object Name="test_assertArrayEqual_LINT" ObjectId="69e13355-b3eb-41fe-ab8e-62fbda7e02cd">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="50cbd339-911c-431c-af19-efa366116a34" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="3380ba46-f1c2-455a-af76-410537cb3dd0" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="77ce3548-a5e0-4051-bf19-2307d6c8c608" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="e7a90cdc-7723-4a04-a892-f2c65003f5e5" />
              </Object>
              <Object Name="test_assertArrayEqual_DWORD" ObjectId="4e4c8496-04c4-466c-b7d7-a29b0f4c67e4">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="bdb5e41c-af81-403c-a474-087a42472da5" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="90716512-4df2-4314-b0c9-fe236f70da79" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="1ab1235d-4c40-4fc6-85ea-d32741540167" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="7dabc96e-9102-42d7-8d20-143551f2f2fd" />
              </Object>
              <Object Name="test_assertLessEqual_LDATE_AND_TIME" ObjectId="c5441cef-f4a1-4ecd-904b-231a4eb41f51">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="77ceec41-4af2-42b1-94e3-59a62c99c126" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="05bf76fd-747e-4791-977b-51f562641fee" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="7368255a-1c0d-469e-af59-e900cbff09e6" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="a3e66581-c690-469c-9267-fd0014227d19" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="ece50fdb-1e90-41f4-8c06-4ad337248f0a" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="bdafbdb9-8ac9-4b4a-b04f-56ac0c306808" />
              </Object>
              <Object Name="test_assertArrayEqual_USINT" ObjectId="65d427fa-391a-4349-b6a3-0479ddb3b7fe">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="685ceb5e-44d0-4427-8019-a2439b419fed" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="056b30a0-4452-4a2d-97af-758678cd6016" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="3ceb77ba-4734-45e3-8b25-2446e33263d8" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="f232ba43-6f50-44c1-aead-5f2118784921" />
              </Object>
              <Object Name="test_assertLessEqual_LTIME_OF_DAY" ObjectId="5b0a786a-7f1e-445c-a8f0-047f8282f4a2">
                <Object Name="TEST_CASE_3_SETUP" ObjectId="29fd8da4-ef70-44e8-870d-84e89d35f05d" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="2863893d-76f4-4ccb-9d8e-3f4c93937e2d" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="f870a9cc-08ba-4d43-b919-e135906b1add" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="c3f7b1e1-545b-4644-b121-79e5d2815a32" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="335f6117-9793-4c93-96fb-b2aae1aea2a9" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="769f1fd2-fac5-47f3-8202-120c3a914cbc" />
              </Object>
              <Object Name="test_assertLessEqual_DINT" ObjectId="d8017ac0-f746-4661-9047-26087ea3e515">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="9058f19e-8781-452f-8023-bf4f0e359b00" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="842127e9-446d-4dd0-b6d7-0b588bd7ff72" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="12f3daec-0271-4264-a9c8-d76059970066" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="b81ae9e2-bd9d-42ec-a80e-6b0f8f633c1c" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="a3aef842-f330-478c-b659-7e2cfab6c671" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="af9e4e24-4874-4ad2-8577-5968fe06b4a3" />
              </Object>
              <Object Name="test_assertLessEqual_LTIME" ObjectId="3998e41e-bce9-4843-8934-35860be72988">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="3d48955a-205e-442f-b82b-aa63df3f33a8" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="da76c62a-855f-4131-a378-a6dd29b4a3f8" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="293dac9b-94cb-42aa-936e-a7b449024ae2" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="b168eca4-3d39-45ea-9bf8-1bc14d6043f7" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="11305b17-f251-40a1-965a-336790e9dd6f" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="14d46343-f17d-4d62-a5fe-c0208af58dd9" />
              </Object>
              <Object Name="test_assertArrayEqual_INT" ObjectId="cfebe0b3-6f96-4e87-8a3b-737a578b778e">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="a8d09854-27b9-43eb-8afd-1ea6a4e83d93" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="5420b4e4-c1e3-45c9-beaa-c3c435878ae5" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="50ee4ada-ee5d-4fb5-8e02-aeb878a8ad99" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="9d9903d5-567f-4c99-804a-71f057f3adca" />
              </Object>
              <Object Name="test_assertArrayEqual_BOOL" ObjectId="c8fa671a-0139-4897-8fbb-26f3a5879e06">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="bc90b37a-2727-4fc5-ada6-bf8b2566eb67" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="cf409f9e-9a54-4172-a44b-a3c5a0bb1ee5" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="4777d98f-995c-4fe5-b97f-a371f481ac40" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="a81f1b68-170b-4d9a-8b57-1d632d823afa" />
              </Object>
              <Object Name="test_assertEqual_BOOL" ObjectId="d8413e58-ba01-48da-8574-5a58a06beae1">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="fe99038e-4436-480d-8b95-e3a0c48f709a" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="54b1fd06-2e6d-4ba7-8d18-56a631738737" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="171fe805-f4d7-4721-a64b-b5bbe8e90cc8" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="c71bd351-aba0-4564-bbe5-199bdce125e0" />
              </Object>
              <Object Name="test_assertEqual_BYTE" ObjectId="722e9247-cbd8-41c8-8503-81cfafea6d45">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="01718a40-f448-42ee-a629-1c64852a65f6" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="9eb9f66d-20f3-42fe-b340-581f65e585cd" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="dc1f97b2-3736-419c-b4de-ca3f960b5feb" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="e5acb689-701e-4208-9fcd-ac0eaca9b0eb" />
              </Object>
              <Object Name="test_assertEqual_USINT" ObjectId="b5eb7082-2e0d-4d7f-88b2-54f098e33a9b">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="ee518aec-274d-4a69-abf1-9f6e5e4306d1" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="0d961d72-151b-4647-b358-ac8bcae455c4" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="22ee3574-1bc7-4b2d-b8e4-6198db600b6a" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="fe81ad58-230d-4feb-82d6-9135fbfed58f" />
              </Object>
              <Object Name="test_assertEqual_LINT" ObjectId="50414b26-6765-40f6-811d-910cc600a0f4">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="e961b8c4-249a-4a7b-85a9-0e8d2002a0f1" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="995b997c-abb4-44f7-a2a0-ea79297e3059" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="f556f316-303e-43e8-a679-cf9844db65c0" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="9155a7a8-32af-4cd6-b84f-56d1c19dff17" />
              </Object>
              <Object Name="test_assertEqual_DWORD" ObjectId="60cc5e6f-bee6-4a96-bb15-daafd9c73e18">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="535df97b-fb83-4745-8c9f-299aef37885b" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="1e578f87-b7ea-416b-bc76-6c9c66324906" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="70f7b763-503c-479a-8359-38d60b0cbcad" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="ede47a90-34a6-4a2c-be37-09d092329b58" />
              </Object>
              <Object Name="test_assertEqual_LDATE" ObjectId="d137a70d-91f1-44e8-be9a-171698d0bd5e">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="10b3143e-cf70-4d1e-8108-07b401a09ce8" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="ecdd8b71-5268-4a30-940d-98e9331dc4f0" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="1cc94e3a-ad22-4c53-ad6e-14da2da343d1" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="29271fa6-e9c1-411f-a6c4-afca446adac7" />
              </Object>
              <Object Name="test_assertEqual_STRING" ObjectId="8bcfcd45-b108-4a22-bb2f-45463b692c44">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="04cc2a85-9d0d-4707-ac1b-96e96a5fbd42" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="45e0598f-1cfb-4601-ba43-0767f0f40d36" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="96af6e75-1e86-4c0c-9390-c8fe737d1353" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="43e809fa-d113-42b0-b5bb-7379a7237158" />
              </Object>
              <Object Name="test_assertEqual_DATE_AND_TIME" ObjectId="5492a399-aab0-436c-abf7-a0ac7105a882">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="c1ea4ce0-208e-4a15-a84f-15c927c4706f" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="11b113ae-560c-47cc-b527-83614283e0bb" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="053927d1-3099-4c40-a028-021e1f6e3730" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="bbcea91b-334d-4b3b-855c-99fff2d26a08" />
              </Object>
              <Object Name="test_assertEqual_WORD" ObjectId="0ec4c36d-38f6-4f7c-a5ad-d915c336a754">
                <Object Name="TEST_CASE_2_SETUP" ObjectId="2d1ae020-a62b-46f1-aa3c-c10aa961027b" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="4941d3da-6336-4376-90ed-eb3930856896" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="4e607767-994f-4319-96f8-a8eb88a6edac" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="89218474-8e2a-4804-af1c-acf1aa0fb979" />
              </Object>
              <Object Name="test_assertEqual_UDINT" ObjectId="c046c810-c299-4c85-ba00-da07860d44f0">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="67f30ba1-8b9c-4569-9f10-ae10debdf1c1" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="f79cb35a-5a11-499b-8a2a-b5f1b9145f01" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="df96a8c1-52d0-4ea7-981c-055602196f7a" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="17213a2c-384d-4980-93fa-2a426d9a8e58" />
              </Object>
              <Object Name="test_assertEqual_UINT" ObjectId="adfc6f20-95eb-4a6e-9147-155664c16784">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="5ee62036-ce3a-42c0-b73c-566525417695" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="7e716c93-8bf2-42c3-89db-90d381b9e706" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="03327db6-b7ef-400a-bdb9-6f73d109efa5" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="4db588eb-ef8a-48d0-bce2-97c69755d539" />
              </Object>
              <Object Name="test_assertEqual_LTIME" ObjectId="10fb4146-b59e-4da2-ad61-fa1103fb2aa0">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="3aa549f9-54ff-4768-aad9-68fd2899cda8" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="2d9b4655-913c-4971-86d8-62647342822f" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="b7d62cb7-4145-42db-ae67-2d474720e703" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="bf0c354c-bdec-48e8-8735-d2802775d241" />
              </Object>
              <Object Name="test_assertEqual_WSTRING" ObjectId="421fa354-8c1b-42ec-80d1-e994c7c70f2e">
                <Object Name="TEST_CASE_1_EXEC" ObjectId="1e9e3117-3c4b-479e-afb4-aeb7f6e9466d" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="2cd9a492-7398-4a44-8de2-745fb93d1d82" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="9d1c4a1b-4da6-4305-8423-d6f875ae7c2b" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="b3014730-2ddc-44ef-9445-dd5b2ac5a727" />
              </Object>
              <Object Name="test_assertEqual_TIME_OF_DAY" ObjectId="7bbc2e6a-cc44-4f6a-aa24-1c43cbe77cd6">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="7d57c1b1-9042-4ed7-ab99-6dc871eb131c" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="f92884d3-8ad0-45b1-8cd1-3ffe085e0347" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="c0a0e29b-5ff2-4a95-86bf-37dc6b973427" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="45402fc8-c7cd-40f1-a508-0c0d0813e7e7" />
              </Object>
              <Object Name="test_assertEqual_LWORD" ObjectId="b08d42f5-f8e0-4e3b-8f02-103d3c45790b">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="6e47d5a2-9103-4ddb-86b2-e07298988718" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="3c8bc539-690c-475b-8cc0-cd5af0348870" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="54e0f214-b1f1-408b-af91-ed32f7da934d" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="5cb1f38c-69db-4a11-8971-b838b3ddd90d" />
              </Object>
              <Object Name="test_assertEqual_REAL" ObjectId="48ec077b-d34c-4a13-b471-4458ca9540bf">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="5b9b5c9c-728f-4065-8a6a-c58c09456509" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="7e07583c-2aac-4b26-bc5d-243aeffcbd19" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="3be4707b-087b-4354-ab80-b0e624f26833" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="8f3ad222-b7d0-4ad6-ade8-b59cedee21b7" />
              </Object>
              <Object Name="test_assertEqual_DINT" ObjectId="14423b4f-ca2b-4d60-a1e8-a3ba8c704d5e">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="47d7c598-79c4-4054-bcd3-5f87951da0e0" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="f2d42398-25c5-44f7-a2e5-8ba3133142a7" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="3e9a0153-e55c-4d7d-bb3f-7f2832b2b7c2" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="8d01b435-fced-4c8e-af31-b0be826ad58e" />
              </Object>
              <Object Name="test_assertEqual_LTIME_OF_DAY" ObjectId="06a05636-3ebd-4114-8c16-a94877b2c204">
                <Object Name="TEST_CASE_2_EXEC" ObjectId="7eb8b6bb-d4ee-4f01-acb1-c89859c6af1e" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="59b98b38-aa0f-483f-a9df-075556f19fc8" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="241edfdb-9f47-48af-805a-d196092c49e6" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="2fe5187b-4725-47f7-8744-67017ac5f3d6" />
              </Object>
              <Object Name="test_assertGreater_LINT" ObjectId="fdd8892f-334f-4947-bb0d-d6043426eb2a">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="7dce3d04-58d2-422f-99d8-68d689c217cb" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="6f52f7a6-845d-435f-adfe-a7892d6616ed" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="84420114-a71c-4fc6-9861-b8d04bd3adf3" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="e22d1c2f-43cd-4410-82e0-276641a13279" />
              </Object>
              <Object Name="test_assertGreater_INT" ObjectId="1fffd231-54ef-4243-87b8-88217fbcdb22">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="4c379467-c270-44e7-ad48-0a2df6b1982d" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="cd05b2e1-3ba6-4e1c-a076-0d071640ea6c" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="7ff809d4-b1c9-4532-b016-322566f70a4a" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="b71b493d-8824-4b1c-af5b-2d171a52a6c3" />
              </Object>
              <Object Name="test_assertNotEqual_USINT" ObjectId="b3f83fa1-adb8-497f-8733-04f01ddf5d48">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="a4b0720f-f76f-47ad-afb4-9ff2a4b30b3d" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="da2e96df-8c88-40b1-92a3-b9e42dbe3de6" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="795e8dc7-1e4f-404f-b8a1-9adf9f0c6f7b" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="8ed0e10a-d3ed-4f4b-b5fb-35985276d8a5" />
              </Object>
              <Object Name="test_assertGreater_DWORD" ObjectId="f452433b-0091-4a0c-9f72-8f9cba18b7e6">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="2cbc208a-9ab8-4d23-8ef6-585ec3d8a526" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="4153e112-ed5a-4297-885c-fddc7edf257b" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="bc35b379-2c31-4e2e-bd56-6abe283bf963" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="e5e7cb9f-5deb-4c33-ad43-be1c04725671" />
              </Object>
              <Object Name="test_assertNotEqual_REAL" ObjectId="a11f89e1-701c-40a6-934f-9f3f482fef0a">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="bf68b946-6d02-4631-9e8d-8e7c3d8d87a6" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="154d722f-af55-4a03-a64e-7a9afdbb469e" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="78425dab-3265-4ed9-a7a2-21d7a409010c" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="bfd4781e-6399-4bff-a5d2-1d7e25cfcf6d" />
              </Object>
              <Object Name="test_assertNotEqual_LDATE" ObjectId="a45f11f7-dd4e-4d3c-aafe-7eff82226261">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="2ec1f52c-846b-41de-9cad-1dbc60eaf9c9" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="0a51dc3a-90c8-4c9c-aef8-9754f387b5a3" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="0e6345b1-5905-4433-b14b-f96688348960" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="69eb333f-ead8-47ea-824c-1ef77b7c6ec8" />
              </Object>
              <Object Name="test_assertGreater_UDINT" ObjectId="92874796-d6a8-49cc-85af-b1d9e26ea9e2">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="73f9993a-b8cc-4531-8a89-b85a230cbe84" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="4ceea4e1-5258-4962-9acf-b76741d9ca05" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="1ad04353-409f-4ccc-a1c6-cab47c7ff2da" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="8c44760b-30ff-4be2-b39d-03538f26ccc1" />
              </Object>
              <Object Name="test_assertNotEqual_LTIME_OF_DAY" ObjectId="f3493acf-1c16-4c43-a662-3bc486294b8c">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="fc236f97-9d6e-4698-b0d8-25eb54ed800a" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="14332fe7-29b3-4844-9bf5-873b35f97f5d" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="d4031895-d58d-4011-85cf-adea71e871c5" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="929c0239-ea09-468c-a310-40f98ae8573b" />
              </Object>
              <Object Name="test_assertNotEqual_DWORD" ObjectId="13a93b6d-83b9-40f8-a922-64abac223358">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="aeee408d-fd2c-48c6-8160-fa0e192e6f05" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="3a0fb8a7-6fd1-4663-854d-a42044c8368a" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="5ab4d28b-79c8-45e3-b4a4-4a60c8bfbb9b" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="15462c78-ab3e-4276-9404-5c38b4e98844" />
              </Object>
              <Object Name="test_assertNotEqual_UDINT" ObjectId="9990e6ef-e5d3-4d2d-ab6e-d9c5ac639f3e">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="513fcfa9-e7c9-415b-89ca-19d4b3dc86dc" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="3868d50f-56ed-4205-829a-377fa35e779d" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="fcbfdb62-1312-4570-a0cf-8249383632ae" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="909b50fb-0205-41a1-bf4e-08859a532644" />
              </Object>
              <Object Name="test_assertNotEqual_TIME" ObjectId="2bc31f24-b610-4692-a002-e6f957649e4f">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="a5d5a746-c94f-45ba-8c24-3c101c03d23d" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="82bc2eb8-7478-4e9c-b1c2-cad6a85efd9d" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="0ad59e48-dd00-4804-b86c-28b2deab728b" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="2c131bb0-39be-421d-ab33-3fb7ba292a20" />
              </Object>
              <Object Name="test_assertLess_SINT" ObjectId="9f57a0c0-0b2d-45cf-acbd-a9b70d9aee84">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="156a09fb-7545-4c39-b45f-16b85f8f4b18" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="0e36cbc6-c0fe-49ea-813c-1b74443991de" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="51d7d082-99fa-46d9-9eab-0b7ecb175271" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="7af1f075-6295-4d7a-a3d8-8e05c3cc608f" />
              </Object>
              <Object Name="test_assertLess_DATE_AND_TIME" ObjectId="c8b2090b-625d-4298-bc38-adaf19de0747">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="1934120a-ad71-4147-ba69-4ab019734ed9" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="3ad9e19d-3978-4a5e-99ad-ab9a401fbb4b" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="d858eed2-dd94-4b52-8a94-d00d0f0f3d02" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="6b2aa0e4-5aa3-4ae7-bb0b-4efaa2019099" />
              </Object>
              <Object Name="test_assertLessEqual_LWORD" ObjectId="46a353dd-2334-452c-9973-3d53a539935e">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="3928a4d8-2ebb-4bcd-857e-c8e447817a22" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="7d3ddce4-10b2-43af-bbb9-127b2304e5d5" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="b47a248e-fb46-481c-9a7c-caa1ef2d9f8e" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="e4c3a0fc-abbc-4ef0-aed0-4925980628c1" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="7c394664-3958-4999-9e80-b38e70d96acb" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="70f77199-da36-4c38-b60b-cdadb76e7b06" />
              </Object>
              <Object Name="test_assertLess_ULINT" ObjectId="a9c03178-b1b1-4e21-a173-18401ae3db39">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="a2e24f99-bfa0-4cdf-973d-bb1969941279" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="f6d6cd90-383b-4fde-9054-f200f819030d" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="b3f89439-41ca-4a6a-a947-360e8cb96ab8" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="3354fa13-1f7f-4de6-ae30-80c9570fa2d4" />
              </Object>
              <Object Name="test_assertLess_BYTE" ObjectId="b420a53c-0fd4-4bab-8b8a-fcb464bb1fc1">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="609e2753-ec1d-435a-aa74-92bf6921cc69" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="95c18762-f1af-4913-ae39-bed9fe68841c" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="fcf16d66-6b20-4067-9273-b9e8d0038d61" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="c81e836e-2c4b-40f3-9057-8176cb611a0b" />
              </Object>
              <Object Name="test_assertLess_UINT" ObjectId="89a6aa6d-db01-4bba-9249-4fb89d9b8313">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="d56d34b3-f7d9-4e1d-95cf-28f2d31869db" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="4b6ad217-4b80-46b1-9074-3a6df08656df" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="26255306-0a69-4402-a17e-07f37b0f7898" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="03ac9bbc-3cf1-4b45-9e66-ae92e5b0516b" />
              </Object>
              <Object Name="test_assertLess_LTIME_OF_DAY" ObjectId="9c573283-4eaa-42d1-b9c1-7a7ae6782d4a">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="83baaa01-3920-4d5e-9f8a-9fe0d63228ef" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="2db9cdf7-dc2b-4482-aef9-1800738606d2" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="a3f0900d-9d7f-4791-863b-75947d57989a" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="aa2f207c-412f-4be2-a1ad-d486e861d5ba" />
              </Object>
              <Object Name="test_assertLess_TIME" ObjectId="5e44151b-a85c-4355-89b3-0d8901541a05">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="a4001ba2-7d98-4505-9187-dde27933ee02" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="b7678f68-b57a-4098-b847-6a157f37d571" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="e98b0578-3034-40a4-9aad-8d37303b2744" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="ce683a3f-6554-4929-967f-208e3141bde5" />
              </Object>
              <Object Name="test_assertGreaterEqual_LDATE_AND_TIME" ObjectId="98bf61f4-53f8-4359-a9e7-28a48c922e63">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="90fad89e-2796-4d0b-9b43-803ffad83bca" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="2ddf519f-9dff-4a71-8350-0f5dacc243ea" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="95b9eb57-7e71-4caa-84d0-0dacb318337e" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="5f3042b8-4ae0-4fb9-8169-e5839a2d9e35" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="24da6ce6-ac60-4e5c-83d0-9ea9eaea5a6b" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="cfa5a71a-8918-4bbe-93c4-87236f70c006" />
              </Object>
              <Object Name="test_assertGreaterEqual_LTIME" ObjectId="b30fb9db-9fe0-43a6-bd82-bd3a623c6a07">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="6acb63ff-4106-4a6e-ba30-50d8b1f310a6" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="1a446ac1-1a45-4a80-b2c5-93e24c7df37e" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="a666fbf0-2eef-4245-8ab3-8e0541bcc1db" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="ab7e84b5-963a-4e3a-a243-6c2e331371f6" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="5dafcaf2-0819-4c3c-8e83-7f64c1fdfac6" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="5858a0a6-eb90-4a24-9404-c1578f4c581d" />
              </Object>
              <Object Name="test_assertGreater_DATE" ObjectId="2c6612e1-f4f3-4f6d-b86a-d85d0d43c246">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="b4aee878-34d2-4ff8-94c2-ffd4e43edf34" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="8dc8232c-3378-494b-bc97-67269108e79c" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="fa5a4159-46a6-4f47-b845-6efcdeffa8d3" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="73700fe4-2125-4fee-b14c-dca1ba2d3580" />
              </Object>
              <Object Name="test_assertGreaterEqual_WORD" ObjectId="868c2a40-9583-431a-b162-fc3318f7359c">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="316a6a07-10ea-401d-9a5a-1ccd683d4d3e" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="5b840218-dfd3-4935-b6dd-07b9328b3527" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="7f92c62e-9b8f-49ed-8754-a26a5c1cefb9" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="34682551-10a7-4127-8fc5-464ab59ccb68" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="e261f665-d6e8-4d3a-92a9-6c56e46f47e7" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="39ba6356-ba98-4030-a485-c004db02ee32" />
              </Object>
              <Object Name="test_assertGreaterEqual_DINT" ObjectId="2c9322b5-efd1-41a8-9199-938b84584610">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="6e9e8d8d-5309-4707-8637-00f2be9fe061" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="6ade7470-6a4c-47df-bbf1-ef68053190d4" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="758c1a84-8050-493b-b736-fef020cf8a51" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="99028066-dd6e-4f7c-aa23-8b77b46ccf66" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="c5fa3626-d24b-4ce9-acaf-244905ecac64" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="3c917070-7723-4e8c-ad8f-80e74452c394" />
              </Object>
              <Object Name="test_assertGreater_LREAL" ObjectId="3454fba9-0554-4f6d-bb14-e1dd3b4969fd">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="3cd15dff-ea3e-4a49-ab7f-9d0e42c1c9a5" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="b81899b5-67c6-4d09-8066-be6f9d46729b" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="5de9fbbb-27d5-4693-ba91-6e837ee0c750" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="1bacc4f1-37f1-4259-be8d-20b0bbbae0e2" />
              </Object>
              <Object Name="test_assertGreater_TIME_OF_DAY" ObjectId="ba4b1893-b222-420f-804d-d6d4b4881ac1">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="3fcc63a3-e791-49a0-ae29-202866b0cc69" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="d8106646-1fd4-41db-a300-cb700392d1c4" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="305e205c-251a-471e-8555-b0190945dfb5" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="ded86fd6-2256-4d52-8e20-d9ed9bb2848d" />
              </Object>
              <Object Name="test_assertGreaterEqual_REAL" ObjectId="bbd9f9ce-b019-4ffe-b7f7-1ac81c45ca21">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="1e539053-bd75-41f4-92a6-fe4384f313ab" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="8fe88904-95c9-4edb-9912-bfd2edc59295" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="f697a700-5a14-43bb-b912-021a235f4efa" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="d228a11c-77f1-40ac-a0d7-2f85f751558a" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="4887bc7d-7adb-4ba1-91bc-d32876dca2c0" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="5e7c08dc-9065-4678-a550-9ea8e8eb0b4a" />
              </Object>
              <Object Name="test_assertGreaterEqual_USINT" ObjectId="158e7dff-4428-4745-bc20-cb18540712eb">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="1952972d-a260-4533-8bdd-f6cbefff1530" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="1dc5c3db-6d14-4baf-b1e8-3f71f2fc2763" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="23a435fe-0082-4d4c-a11b-2dc7fef5339b" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="db9c191d-9286-4e16-bd54-8a5232cedaad" />
                <Object Name="TEST_CASE_3_SETUP" ObjectId="09b8c0d1-aac3-426e-88b0-2b7407fca7d2" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="1a0c7789-50be-4bb5-963e-1942f7eeb97e" />
              </Object>
              <Object Name="test_assertArrayEqual_WSTRING" ObjectId="af6d6f85-ca27-4693-a0e0-5f9fee8b9b4a">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="f82a9465-8216-428e-a4f2-b353c45bb82c" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="0449e07c-739b-49e0-8d41-64867a7cf8e9" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="9128e895-31e1-4fa0-86ad-60a5b7ab8ff1" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="1d3abfb0-a069-4508-9319-685559cdc75c" />
              </Object>
              <Object Name="test_assertArrayEqual_TIME_OF_DAY" ObjectId="17f9e6f7-aa31-4c93-b0ec-888bc6deca39">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="8bc8d275-c49e-48ad-a650-ffcef8f2f6cc" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="be2b1157-de83-4377-8c4b-40db80db7bcb" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="aa0bf1cd-d4a6-42de-8720-916aef6b44ab" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="a1ea7b7c-814c-449e-9dbf-54e4872d2f2d" />
              </Object>
              <Object Name="test_assertLessEqual_LINT" ObjectId="27c00734-857d-4969-a333-127d75daba3c">
                <Object Name="TEST_CASE_3_SETUP" ObjectId="7568ee75-e790-4eb7-9d10-02751083973a" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="4f7bf296-5b24-49d7-bb1f-f4d106082a55" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="287ab8c1-3c5a-4b41-b2a3-bccc79cafab8" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="c3dad5e4-3388-49fc-97f0-70cb3d0ea0b4" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="2a3675f3-3374-484d-b5d0-57202febaea3" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="2bd7876f-f523-4d8f-be3f-60d4f338d40a" />
              </Object>
              <Object Name="test_assertLessEqual_LDATE" ObjectId="b11202dc-b943-4529-aa42-32d08cc423ca">
                <Object Name="TEST_CASE_3_SETUP" ObjectId="5b9aa5a0-1dd7-4eec-bf9c-f0312905b6e1" />
                <Object Name="TEST_CASE_3_EXEC" ObjectId="2b88e75c-447f-48ab-bea7-52c7fd8a0b52" />
                <Object Name="TEST_CASE_1_SETUP" ObjectId="ab8be805-2868-4ea6-ba1d-bc28d74a7268" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="99866d01-3fc5-451d-b0de-4d039c721a46" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="8cbc1295-8bec-4ed8-aa2a-d54a8cf5c7c8" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="19aff925-50dc-4dbf-b5a3-b3cc73f1fe0d" />
              </Object>
              <Object Name="test_assertArrayEqual_DATE" ObjectId="379a0ec1-a7fc-4801-a344-80f5dd5be573">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="16fd15fe-0d5b-4f2c-9998-e2548a9f3c9c" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="1a1aa046-8a44-4603-bf61-90219a0b8083" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="c2acc507-3eef-4428-a930-3167be7357bd" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="2d17d2dc-baed-49ec-af95-2e34b0c98303" />
              </Object>
              <Object Name="test_assertFalse" ObjectId="914d4f2f-e337-404e-9f9b-59963077a1aa">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="2a893200-fffd-4531-abe5-711cc6ecd73b" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="d0c0131f-018e-456f-87ab-b3aa73240a3f" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="8a33d650-f05b-4aeb-9b8d-fc9e098f21bc" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="9e773640-ef4e-4981-95a0-6a92a8b21cf3" />
              </Object>
              <Object Name="test_assertArrayEqual_WORD" ObjectId="721d1cb8-b8bd-4f66-8f84-1255127688ee">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="e8bf11b4-afa0-452d-b88a-9b81d2af445d" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="812e4529-6c88-4021-a17f-0b8e39360488" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="85be9a67-b2fa-4db6-99ff-1af8223af248" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="bb2ec78f-c35f-40a5-a331-cd5e3ffcfe95" />
              </Object>
              <Object Name="test_assertArrayEqual_SINT" ObjectId="a6195ee1-2868-47ad-90e1-f22fe26a1b41">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="32f674ce-6150-45c6-8925-bdc1ad0a9f44" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="3334fbe2-7e7e-45b5-a87d-8a79079fbb45" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="0f239d2e-1dac-4301-a874-1c2e554c2fc5" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="e2da7dd0-f850-4ef9-9a49-19caa0c9ae4b" />
              </Object>
              <Object Name="test_assertArrayEqual_DINT" ObjectId="2665dc8b-0010-4724-83fb-e807204594be">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="66bd9dc2-425d-41cd-ab6c-0b2787c596f3" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="48e4fc7d-fd59-4d87-a238-6269f0c728d4" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="c46f9dcf-533c-4fb6-bf5c-2007a4df5a3f" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="5c8a56d3-f567-4c76-a47f-70a3de06858f" />
              </Object>
              <Object Name="test_assertArrayEqual_ULINT" ObjectId="a6a0e81c-3593-4c17-9028-d171b6f7f013">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="d98d0265-5e8e-44d4-9ff6-0caad6e6a863" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="72321aed-b489-47cd-aabc-dfcee207f0bf" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="ad708e31-93bb-461e-9509-86e1bfa74c14" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="03e4a271-9fba-4528-83b7-924cdd198947" />
              </Object>
              <Object Name="test_assertEqual_LDATE_AND_TIME" ObjectId="e4b9b918-ceb6-40b6-9b85-c857644d8052">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="be85ab40-e8f4-4b09-840a-7524c42e9c76" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="ed068f6f-31d9-45ed-928e-bb05ee3e3762" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="031b0f06-31e7-4fe6-b8ff-e3c7b2fd9616" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="2395b188-88d9-4d73-a9db-7a364189d7f0" />
              </Object>
              <Object Name="test_assertEqual_LREAL" ObjectId="e5524c93-3357-40b9-af28-29ff1f7ec5e7">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="74c10472-c7e6-4598-ab83-662ec7e9853c" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="6405562f-4211-4aed-8466-85a6ac397195" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="22dc0f80-195c-49b7-a288-1e61c6851678" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="b582884f-83aa-4325-847b-8fe236c8df4a" />
              </Object>
              <Object Name="test_assertEqual_INT" ObjectId="09cf7da5-aac5-401f-9f36-ae1c8b7a3f54">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="9b480200-95da-49fa-a48d-791676dac117" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="0c49d018-6609-4ee7-b122-140007646200" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="b100881b-e8ae-4630-9076-d169d80c61ab" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="95229472-2a55-4216-bd9f-9943d66347a0" />
              </Object>
              <Object Name="test_assertEqual_ULINT" ObjectId="88f95bcd-9d5b-48da-b5fd-b6bb09c87a0b">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="b8c19a61-351d-44a2-bffb-c0169c4e5a99" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="f3ddc438-e13f-4518-8ca5-4e8537a798aa" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="1c65f95d-3eef-4e69-85bb-2f3c9ae067d2" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="1f07c346-a9d0-454a-9ccd-1ec08b17ce95" />
              </Object>
              <Object Name="test_assertEqual_SINT" ObjectId="c9cf8318-d603-46a0-bde7-b9fd7ca7b34d">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="58180554-90ab-4dd2-8ae4-36a2ddc32d6a" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="4bdd5034-e146-42cb-84dc-b48ff9cf79d7" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="5e61549f-6781-4fe7-ad49-f50205ab516f" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="13bef750-f6b1-4747-a76d-fc13553bda48" />
              </Object>
              <Object Name="test_assertEqual_DATE" ObjectId="7cfc05b8-ea71-49b6-aba6-9de259739266">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="95e37719-bb19-4c0e-b0b1-d44c931d1ec9" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="821f344f-b866-4e2f-9223-147a6f11b787" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="d375d4e8-a8de-4baa-82ed-956fa4d396e7" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="4c10a2ce-6f5f-4580-9f61-ea63ef983f1f" />
              </Object>
              <Object Name="test_assertEqual_TIME" ObjectId="5ed1b46f-2c1b-4860-992f-24abe0550b62">
                <Object Name="TEST_CASE_1_SETUP" ObjectId="7abcd480-a678-43ba-8d28-ffc3ea83db7a" />
                <Object Name="TEST_CASE_1_EXEC" ObjectId="f199bd9c-c7f4-4e88-83d4-a176c1231227" />
                <Object Name="TEST_CASE_2_SETUP" ObjectId="47dbfd4c-5d27-480d-babe-ec171a4fdf70" />
                <Object Name="TEST_CASE_2_EXEC" ObjectId="68b7ae8d-aaa2-43cf-a154-e571d63ec623" />
              </Object>
            </Folder>
            <Object Name="Library Manager" ObjectId="29952b5a-7957-4b81-b599-b1e619961408" />
            <Object Name="Task" ObjectId="89ae5dca-a198-4df6-b176-83ebbef75c1b" />
            <Object Name="VISU_TASK" ObjectId="6829860d-33d7-40c5-bad2-eaa0307d1541" />
            <Object Name="GVL" ObjectId="ccc4dfb0-95ba-41ae-8436-5adb19390ad1" />
            <Object Name="main" ObjectId="4f197067-2b34-4440-800a-93687fa96f27" />
          </Object>
        </Object>
        <Folder Name="dts">
          <Object Name="utTestCase" ObjectId="cce5d9e4-571f-4468-b93b-ab9e7aa5a070" />
          <Object Name="utTestCaseStates" ObjectId="59d7932e-fb33-435e-8f3c-c4d2d0c00283" />
          <Object Name="utTestCaseSummary" ObjectId="0106c9a1-852c-4044-944f-79d5a828c28d" />
          <Object Name="utErrors" ObjectId="52a2890d-2364-42e1-9d9f-b412a3be1a96" />
        </Folder>
        <Folder Name="testRunners">
          <Object Name="utTestSuite" ObjectId="f0912f51-c42a-4da6-a3b6-58d26f1c9142" />
          <Object Name="utTestReporter" ObjectId="cb6cab75-04ce-4ed2-b124-3f6a2456f4ae" />
        </Folder>
        <Object Name="Project Information" ObjectId="11c0fc3a-9bcf-4dd8-ac38-efb93363e521" />
        <Object Name="Library Manager" ObjectId="973caaa7-2494-47fc-b0f3-fdb5caef20c4" />
      </ProjectStructure>
    </data>
  </addData>
</project>